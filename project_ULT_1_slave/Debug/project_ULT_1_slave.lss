
project_ULT_1_slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005412  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00800060  00005412  00005486  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002580  00000000  00000000  000055cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001091  00000000  00000000  00007b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000220  00000000  00000000  00008bdd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000275  00000000  00000000  00008dfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003510  00000000  00000000  00009072  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001823  00000000  00000000  0000c582  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000179c  00000000  00000000  0000dda5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  0000f544  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003b7  00000000  00000000  0000f784  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002420  00000000  00000000  0000fb3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00011f5b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e1       	ldi	r30, 0x12	; 18
      68:	f4 e5       	ldi	r31, 0x54	; 84
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3a       	cpi	r26, 0xA4	; 164
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 f3 27 	call	0x4fe6	; 0x4fe6 <main>
      7a:	0c 94 07 2a 	jmp	0x540e	; 0x540e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__ashldi3>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	df 93       	push	r29
      8a:	cf 93       	push	r28
      8c:	cd b7       	in	r28, 0x3d	; 61
      8e:	de b7       	in	r29, 0x3e	; 62
      90:	60 97       	sbiw	r28, 0x10	; 16
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
      9c:	a8 2f       	mov	r26, r24
      9e:	00 23       	and	r16, r16
      a0:	09 f4       	brne	.+2      	; 0xa4 <__ashldi3+0x22>
      a2:	61 c0       	rjmp	.+194    	; 0x166 <__ashldi3+0xe4>
      a4:	7e 01       	movw	r14, r28
      a6:	08 94       	sec
      a8:	e1 1c       	adc	r14, r1
      aa:	f1 1c       	adc	r15, r1
      ac:	88 e0       	ldi	r24, 0x08	; 8
      ae:	f7 01       	movw	r30, r14
      b0:	11 92       	st	Z+, r1
      b2:	8a 95       	dec	r24
      b4:	e9 f7       	brne	.-6      	; 0xb0 <__ashldi3+0x2e>
      b6:	29 83       	std	Y+1, r18	; 0x01
      b8:	3a 83       	std	Y+2, r19	; 0x02
      ba:	4b 83       	std	Y+3, r20	; 0x03
      bc:	5c 83       	std	Y+4, r21	; 0x04
      be:	6d 83       	std	Y+5, r22	; 0x05
      c0:	7e 83       	std	Y+6, r23	; 0x06
      c2:	af 83       	std	Y+7, r26	; 0x07
      c4:	98 87       	std	Y+8, r25	; 0x08
      c6:	80 e2       	ldi	r24, 0x20	; 32
      c8:	80 1b       	sub	r24, r16
      ca:	e8 2f       	mov	r30, r24
      cc:	ff 27       	eor	r31, r31
      ce:	e7 fd       	sbrc	r30, 7
      d0:	f0 95       	com	r31
      d2:	49 81       	ldd	r20, Y+1	; 0x01
      d4:	5a 81       	ldd	r21, Y+2	; 0x02
      d6:	6b 81       	ldd	r22, Y+3	; 0x03
      d8:	7c 81       	ldd	r23, Y+4	; 0x04
      da:	18 16       	cp	r1, r24
      dc:	84 f0       	brlt	.+32     	; 0xfe <__ashldi3+0x7c>
      de:	19 86       	std	Y+9, r1	; 0x09
      e0:	1a 86       	std	Y+10, r1	; 0x0a
      e2:	1b 86       	std	Y+11, r1	; 0x0b
      e4:	1c 86       	std	Y+12, r1	; 0x0c
      e6:	88 27       	eor	r24, r24
      e8:	99 27       	eor	r25, r25
      ea:	8e 1b       	sub	r24, r30
      ec:	9f 0b       	sbc	r25, r31
      ee:	04 c0       	rjmp	.+8      	; 0xf8 <__ashldi3+0x76>
      f0:	44 0f       	add	r20, r20
      f2:	55 1f       	adc	r21, r21
      f4:	66 1f       	adc	r22, r22
      f6:	77 1f       	adc	r23, r23
      f8:	8a 95       	dec	r24
      fa:	d2 f7       	brpl	.-12     	; 0xf0 <__ashldi3+0x6e>
      fc:	28 c0       	rjmp	.+80     	; 0x14e <__ashldi3+0xcc>
      fe:	20 2f       	mov	r18, r16
     100:	33 27       	eor	r19, r19
     102:	27 fd       	sbrc	r18, 7
     104:	30 95       	com	r19
     106:	db 01       	movw	r26, r22
     108:	ca 01       	movw	r24, r20
     10a:	02 2e       	mov	r0, r18
     10c:	04 c0       	rjmp	.+8      	; 0x116 <__ashldi3+0x94>
     10e:	88 0f       	add	r24, r24
     110:	99 1f       	adc	r25, r25
     112:	aa 1f       	adc	r26, r26
     114:	bb 1f       	adc	r27, r27
     116:	0a 94       	dec	r0
     118:	d2 f7       	brpl	.-12     	; 0x10e <__ashldi3+0x8c>
     11a:	89 87       	std	Y+9, r24	; 0x09
     11c:	9a 87       	std	Y+10, r25	; 0x0a
     11e:	ab 87       	std	Y+11, r26	; 0x0b
     120:	bc 87       	std	Y+12, r27	; 0x0c
     122:	04 c0       	rjmp	.+8      	; 0x12c <__ashldi3+0xaa>
     124:	76 95       	lsr	r23
     126:	67 95       	ror	r22
     128:	57 95       	ror	r21
     12a:	47 95       	ror	r20
     12c:	ea 95       	dec	r30
     12e:	d2 f7       	brpl	.-12     	; 0x124 <__ashldi3+0xa2>
     130:	8d 81       	ldd	r24, Y+5	; 0x05
     132:	9e 81       	ldd	r25, Y+6	; 0x06
     134:	af 81       	ldd	r26, Y+7	; 0x07
     136:	b8 85       	ldd	r27, Y+8	; 0x08
     138:	04 c0       	rjmp	.+8      	; 0x142 <__ashldi3+0xc0>
     13a:	88 0f       	add	r24, r24
     13c:	99 1f       	adc	r25, r25
     13e:	aa 1f       	adc	r26, r26
     140:	bb 1f       	adc	r27, r27
     142:	2a 95       	dec	r18
     144:	d2 f7       	brpl	.-12     	; 0x13a <__ashldi3+0xb8>
     146:	48 2b       	or	r20, r24
     148:	59 2b       	or	r21, r25
     14a:	6a 2b       	or	r22, r26
     14c:	7b 2b       	or	r23, r27
     14e:	4d 87       	std	Y+13, r20	; 0x0d
     150:	5e 87       	std	Y+14, r21	; 0x0e
     152:	6f 87       	std	Y+15, r22	; 0x0f
     154:	78 8b       	std	Y+16, r23	; 0x10
     156:	29 85       	ldd	r18, Y+9	; 0x09
     158:	3a 85       	ldd	r19, Y+10	; 0x0a
     15a:	4b 85       	ldd	r20, Y+11	; 0x0b
     15c:	5c 85       	ldd	r21, Y+12	; 0x0c
     15e:	6d 85       	ldd	r22, Y+13	; 0x0d
     160:	7e 85       	ldd	r23, Y+14	; 0x0e
     162:	af 85       	ldd	r26, Y+15	; 0x0f
     164:	98 89       	ldd	r25, Y+16	; 0x10
     166:	8a 2f       	mov	r24, r26
     168:	60 96       	adiw	r28, 0x10	; 16
     16a:	0f b6       	in	r0, 0x3f	; 63
     16c:	f8 94       	cli
     16e:	de bf       	out	0x3e, r29	; 62
     170:	0f be       	out	0x3f, r0	; 63
     172:	cd bf       	out	0x3d, r28	; 61
     174:	cf 91       	pop	r28
     176:	df 91       	pop	r29
     178:	0f 91       	pop	r16
     17a:	ff 90       	pop	r15
     17c:	ef 90       	pop	r14
     17e:	08 95       	ret

00000180 <__fixunssfsi>:
     180:	ef 92       	push	r14
     182:	ff 92       	push	r15
     184:	0f 93       	push	r16
     186:	1f 93       	push	r17
     188:	7b 01       	movw	r14, r22
     18a:	8c 01       	movw	r16, r24
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 e0       	ldi	r20, 0x00	; 0
     192:	5f e4       	ldi	r21, 0x4F	; 79
     194:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <__gesf2>
     198:	88 23       	and	r24, r24
     19a:	8c f0       	brlt	.+34     	; 0x1be <__fixunssfsi+0x3e>
     19c:	c8 01       	movw	r24, r16
     19e:	b7 01       	movw	r22, r14
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	40 e0       	ldi	r20, 0x00	; 0
     1a6:	5f e4       	ldi	r21, 0x4F	; 79
     1a8:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <__subsf3>
     1ac:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixsfsi>
     1b0:	9b 01       	movw	r18, r22
     1b2:	ac 01       	movw	r20, r24
     1b4:	20 50       	subi	r18, 0x00	; 0
     1b6:	30 40       	sbci	r19, 0x00	; 0
     1b8:	40 40       	sbci	r20, 0x00	; 0
     1ba:	50 48       	sbci	r21, 0x80	; 128
     1bc:	06 c0       	rjmp	.+12     	; 0x1ca <__fixunssfsi+0x4a>
     1be:	c8 01       	movw	r24, r16
     1c0:	b7 01       	movw	r22, r14
     1c2:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixsfsi>
     1c6:	9b 01       	movw	r18, r22
     1c8:	ac 01       	movw	r20, r24
     1ca:	b9 01       	movw	r22, r18
     1cc:	ca 01       	movw	r24, r20
     1ce:	1f 91       	pop	r17
     1d0:	0f 91       	pop	r16
     1d2:	ff 90       	pop	r15
     1d4:	ef 90       	pop	r14
     1d6:	08 95       	ret

000001d8 <__fixunssfdi>:
     1d8:	a0 e0       	ldi	r26, 0x00	; 0
     1da:	b0 e0       	ldi	r27, 0x00	; 0
     1dc:	e2 ef       	ldi	r30, 0xF2	; 242
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	0c 94 d0 29 	jmp	0x53a0	; 0x53a0 <__prologue_saves__>
     1e4:	7b 01       	movw	r14, r22
     1e6:	8c 01       	movw	r16, r24
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	40 e8       	ldi	r20, 0x80	; 128
     1ee:	5f e3       	ldi	r21, 0x3F	; 63
     1f0:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
     1f4:	88 23       	and	r24, r24
     1f6:	4c f4       	brge	.+18     	; 0x20a <__fixunssfdi+0x32>
     1f8:	aa 24       	eor	r10, r10
     1fa:	bb 24       	eor	r11, r11
     1fc:	cc 24       	eor	r12, r12
     1fe:	dd 24       	eor	r13, r13
     200:	ee 24       	eor	r14, r14
     202:	ff 24       	eor	r15, r15
     204:	00 e0       	ldi	r16, 0x00	; 0
     206:	10 e0       	ldi	r17, 0x00	; 0
     208:	86 c0       	rjmp	.+268    	; 0x316 <__fixunssfdi+0x13e>
     20a:	c8 01       	movw	r24, r16
     20c:	b7 01       	movw	r22, r14
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	40 e8       	ldi	r20, 0x80	; 128
     214:	5f e4       	ldi	r21, 0x4F	; 79
     216:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
     21a:	88 23       	and	r24, r24
     21c:	54 f4       	brge	.+20     	; 0x232 <__fixunssfdi+0x5a>
     21e:	c8 01       	movw	r24, r16
     220:	b7 01       	movw	r22, r14
     222:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
     226:	5b 01       	movw	r10, r22
     228:	6c 01       	movw	r12, r24
     22a:	ee 24       	eor	r14, r14
     22c:	ff 24       	eor	r15, r15
     22e:	87 01       	movw	r16, r14
     230:	72 c0       	rjmp	.+228    	; 0x316 <__fixunssfdi+0x13e>
     232:	c8 01       	movw	r24, r16
     234:	b7 01       	movw	r22, r14
     236:	20 e0       	ldi	r18, 0x00	; 0
     238:	30 e0       	ldi	r19, 0x00	; 0
     23a:	40 e8       	ldi	r20, 0x80	; 128
     23c:	5f e5       	ldi	r21, 0x5F	; 95
     23e:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
     242:	87 fd       	sbrc	r24, 7
     244:	0f c0       	rjmp	.+30     	; 0x264 <__fixunssfdi+0x8c>
     246:	aa 24       	eor	r10, r10
     248:	aa 94       	dec	r10
     24a:	bb 24       	eor	r11, r11
     24c:	ba 94       	dec	r11
     24e:	cc 24       	eor	r12, r12
     250:	ca 94       	dec	r12
     252:	dd 24       	eor	r13, r13
     254:	da 94       	dec	r13
     256:	ee 24       	eor	r14, r14
     258:	ea 94       	dec	r14
     25a:	ff 24       	eor	r15, r15
     25c:	fa 94       	dec	r15
     25e:	0f ef       	ldi	r16, 0xFF	; 255
     260:	1f ef       	ldi	r17, 0xFF	; 255
     262:	59 c0       	rjmp	.+178    	; 0x316 <__fixunssfdi+0x13e>
     264:	c8 01       	movw	r24, r16
     266:	b7 01       	movw	r22, r14
     268:	20 e0       	ldi	r18, 0x00	; 0
     26a:	30 e0       	ldi	r19, 0x00	; 0
     26c:	40 e8       	ldi	r20, 0x80	; 128
     26e:	5f e2       	ldi	r21, 0x2F	; 47
     270:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
     274:	7b 01       	movw	r14, r22
     276:	8c 01       	movw	r16, r24
     278:	22 24       	eor	r2, r2
     27a:	33 24       	eor	r3, r3
     27c:	21 01       	movw	r4, r2
     27e:	90 e1       	ldi	r25, 0x10	; 16
     280:	a9 2e       	mov	r10, r25
     282:	b1 2c       	mov	r11, r1
     284:	c1 2c       	mov	r12, r1
     286:	d1 2c       	mov	r13, r1
     288:	c0 e0       	ldi	r28, 0x00	; 0
     28a:	d0 e0       	ldi	r29, 0x00	; 0
     28c:	61 e0       	ldi	r22, 0x01	; 1
     28e:	70 e0       	ldi	r23, 0x00	; 0
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0a 2c       	mov	r0, r10
     296:	04 c0       	rjmp	.+8      	; 0x2a0 <__fixunssfdi+0xc8>
     298:	66 0f       	add	r22, r22
     29a:	77 1f       	adc	r23, r23
     29c:	88 1f       	adc	r24, r24
     29e:	99 1f       	adc	r25, r25
     2a0:	0a 94       	dec	r0
     2a2:	d2 f7       	brpl	.-12     	; 0x298 <__fixunssfdi+0xc0>
     2a4:	0e 94 ad 12 	call	0x255a	; 0x255a <__floatunsisf>
     2a8:	3b 01       	movw	r6, r22
     2aa:	4c 01       	movw	r8, r24
     2ac:	c8 01       	movw	r24, r16
     2ae:	b7 01       	movw	r22, r14
     2b0:	a4 01       	movw	r20, r8
     2b2:	93 01       	movw	r18, r6
     2b4:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <__gesf2>
     2b8:	88 23       	and	r24, r24
     2ba:	64 f0       	brlt	.+24     	; 0x2d4 <__fixunssfdi+0xfc>
     2bc:	2a 28       	or	r2, r10
     2be:	3b 28       	or	r3, r11
     2c0:	4c 28       	or	r4, r12
     2c2:	5d 28       	or	r5, r13
     2c4:	c8 01       	movw	r24, r16
     2c6:	b7 01       	movw	r22, r14
     2c8:	a4 01       	movw	r20, r8
     2ca:	93 01       	movw	r18, r6
     2cc:	0e 94 1d 11 	call	0x223a	; 0x223a <__divsf3>
     2d0:	7b 01       	movw	r14, r22
     2d2:	8c 01       	movw	r16, r24
     2d4:	d6 94       	lsr	r13
     2d6:	c7 94       	ror	r12
     2d8:	b7 94       	ror	r11
     2da:	a7 94       	ror	r10
     2dc:	21 96       	adiw	r28, 0x01	; 1
     2de:	c5 30       	cpi	r28, 0x05	; 5
     2e0:	d1 05       	cpc	r29, r1
     2e2:	a1 f6       	brne	.-88     	; 0x28c <__fixunssfdi+0xb4>
     2e4:	c8 01       	movw	r24, r16
     2e6:	b7 01       	movw	r22, r14
     2e8:	20 e0       	ldi	r18, 0x00	; 0
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	40 e8       	ldi	r20, 0x80	; 128
     2ee:	5f e4       	ldi	r21, 0x4F	; 79
     2f0:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
     2f4:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
     2f8:	5b 01       	movw	r10, r22
     2fa:	6c 01       	movw	r12, r24
     2fc:	9b 01       	movw	r18, r22
     2fe:	a6 01       	movw	r20, r12
     300:	60 e0       	ldi	r22, 0x00	; 0
     302:	70 e0       	ldi	r23, 0x00	; 0
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	02 2d       	mov	r16, r2
     30a:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
     30e:	59 01       	movw	r10, r18
     310:	6a 01       	movw	r12, r20
     312:	7b 01       	movw	r14, r22
     314:	8c 01       	movw	r16, r24
     316:	95 01       	movw	r18, r10
     318:	a6 01       	movw	r20, r12
     31a:	b7 01       	movw	r22, r14
     31c:	c8 01       	movw	r24, r16
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	e2 e1       	ldi	r30, 0x12	; 18
     324:	0c 94 ec 29 	jmp	0x53d8	; 0x53d8 <__epilogue_restores__>

00000328 <__udivdi3>:
     328:	ae e5       	ldi	r26, 0x5E	; 94
     32a:	b0 e0       	ldi	r27, 0x00	; 0
     32c:	ea e9       	ldi	r30, 0x9A	; 154
     32e:	f1 e0       	ldi	r31, 0x01	; 1
     330:	0c 94 d0 29 	jmp	0x53a0	; 0x53a0 <__prologue_saves__>
     334:	a8 e0       	ldi	r26, 0x08	; 8
     336:	4e 01       	movw	r8, r28
     338:	08 94       	sec
     33a:	81 1c       	adc	r8, r1
     33c:	91 1c       	adc	r9, r1
     33e:	f4 01       	movw	r30, r8
     340:	6a 2e       	mov	r6, r26
     342:	11 92       	st	Z+, r1
     344:	6a 94       	dec	r6
     346:	e9 f7       	brne	.-6      	; 0x342 <__udivdi3+0x1a>
     348:	29 83       	std	Y+1, r18	; 0x01
     34a:	3a 83       	std	Y+2, r19	; 0x02
     34c:	4b 83       	std	Y+3, r20	; 0x03
     34e:	5c 83       	std	Y+4, r21	; 0x04
     350:	6d 83       	std	Y+5, r22	; 0x05
     352:	7e 83       	std	Y+6, r23	; 0x06
     354:	8f 83       	std	Y+7, r24	; 0x07
     356:	98 87       	std	Y+8, r25	; 0x08
     358:	ce 01       	movw	r24, r28
     35a:	09 96       	adiw	r24, 0x09	; 9
     35c:	fc 01       	movw	r30, r24
     35e:	11 92       	st	Z+, r1
     360:	aa 95       	dec	r26
     362:	e9 f7       	brne	.-6      	; 0x35e <__udivdi3+0x36>
     364:	a9 86       	std	Y+9, r10	; 0x09
     366:	ba 86       	std	Y+10, r11	; 0x0a
     368:	cb 86       	std	Y+11, r12	; 0x0b
     36a:	dc 86       	std	Y+12, r13	; 0x0c
     36c:	ed 86       	std	Y+13, r14	; 0x0d
     36e:	fe 86       	std	Y+14, r15	; 0x0e
     370:	0f 87       	std	Y+15, r16	; 0x0f
     372:	18 8b       	std	Y+16, r17	; 0x10
     374:	29 84       	ldd	r2, Y+9	; 0x09
     376:	3a 84       	ldd	r3, Y+10	; 0x0a
     378:	4b 84       	ldd	r4, Y+11	; 0x0b
     37a:	5c 84       	ldd	r5, Y+12	; 0x0c
     37c:	ed 84       	ldd	r14, Y+13	; 0x0d
     37e:	fe 84       	ldd	r15, Y+14	; 0x0e
     380:	0f 85       	ldd	r16, Y+15	; 0x0f
     382:	18 89       	ldd	r17, Y+16	; 0x10
     384:	69 80       	ldd	r6, Y+1	; 0x01
     386:	7a 80       	ldd	r7, Y+2	; 0x02
     388:	8b 80       	ldd	r8, Y+3	; 0x03
     38a:	9c 80       	ldd	r9, Y+4	; 0x04
     38c:	6d a6       	std	Y+45, r6	; 0x2d
     38e:	7e a6       	std	Y+46, r7	; 0x2e
     390:	8f a6       	std	Y+47, r8	; 0x2f
     392:	98 aa       	std	Y+48, r9	; 0x30
     394:	6d 80       	ldd	r6, Y+5	; 0x05
     396:	7e 80       	ldd	r7, Y+6	; 0x06
     398:	8f 80       	ldd	r8, Y+7	; 0x07
     39a:	98 84       	ldd	r9, Y+8	; 0x08
     39c:	e1 14       	cp	r14, r1
     39e:	f1 04       	cpc	r15, r1
     3a0:	01 05       	cpc	r16, r1
     3a2:	11 05       	cpc	r17, r1
     3a4:	09 f0       	breq	.+2      	; 0x3a8 <__udivdi3+0x80>
     3a6:	b3 c3       	rjmp	.+1894   	; 0xb0e <__stack+0x2af>
     3a8:	62 14       	cp	r6, r2
     3aa:	73 04       	cpc	r7, r3
     3ac:	84 04       	cpc	r8, r4
     3ae:	95 04       	cpc	r9, r5
     3b0:	08 f0       	brcs	.+2      	; 0x3b4 <__udivdi3+0x8c>
     3b2:	3d c1       	rjmp	.+634    	; 0x62e <__udivdi3+0x306>
     3b4:	00 e0       	ldi	r16, 0x00	; 0
     3b6:	20 16       	cp	r2, r16
     3b8:	00 e0       	ldi	r16, 0x00	; 0
     3ba:	30 06       	cpc	r3, r16
     3bc:	01 e0       	ldi	r16, 0x01	; 1
     3be:	40 06       	cpc	r4, r16
     3c0:	00 e0       	ldi	r16, 0x00	; 0
     3c2:	50 06       	cpc	r5, r16
     3c4:	88 f4       	brcc	.+34     	; 0x3e8 <__udivdi3+0xc0>
     3c6:	1f ef       	ldi	r17, 0xFF	; 255
     3c8:	21 16       	cp	r2, r17
     3ca:	31 04       	cpc	r3, r1
     3cc:	41 04       	cpc	r4, r1
     3ce:	51 04       	cpc	r5, r1
     3d0:	39 f0       	breq	.+14     	; 0x3e0 <__udivdi3+0xb8>
     3d2:	30 f0       	brcs	.+12     	; 0x3e0 <__udivdi3+0xb8>
     3d4:	48 e0       	ldi	r20, 0x08	; 8
     3d6:	e4 2e       	mov	r14, r20
     3d8:	f1 2c       	mov	r15, r1
     3da:	01 2d       	mov	r16, r1
     3dc:	11 2d       	mov	r17, r1
     3de:	18 c0       	rjmp	.+48     	; 0x410 <__udivdi3+0xe8>
     3e0:	ee 24       	eor	r14, r14
     3e2:	ff 24       	eor	r15, r15
     3e4:	87 01       	movw	r16, r14
     3e6:	14 c0       	rjmp	.+40     	; 0x410 <__udivdi3+0xe8>
     3e8:	20 e0       	ldi	r18, 0x00	; 0
     3ea:	22 16       	cp	r2, r18
     3ec:	20 e0       	ldi	r18, 0x00	; 0
     3ee:	32 06       	cpc	r3, r18
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	42 06       	cpc	r4, r18
     3f4:	21 e0       	ldi	r18, 0x01	; 1
     3f6:	52 06       	cpc	r5, r18
     3f8:	30 f0       	brcs	.+12     	; 0x406 <__udivdi3+0xde>
     3fa:	38 e1       	ldi	r19, 0x18	; 24
     3fc:	e3 2e       	mov	r14, r19
     3fe:	f1 2c       	mov	r15, r1
     400:	01 2d       	mov	r16, r1
     402:	11 2d       	mov	r17, r1
     404:	05 c0       	rjmp	.+10     	; 0x410 <__udivdi3+0xe8>
     406:	20 e1       	ldi	r18, 0x10	; 16
     408:	e2 2e       	mov	r14, r18
     40a:	f1 2c       	mov	r15, r1
     40c:	01 2d       	mov	r16, r1
     40e:	11 2d       	mov	r17, r1
     410:	d2 01       	movw	r26, r4
     412:	c1 01       	movw	r24, r2
     414:	0e 2c       	mov	r0, r14
     416:	04 c0       	rjmp	.+8      	; 0x420 <__udivdi3+0xf8>
     418:	b6 95       	lsr	r27
     41a:	a7 95       	ror	r26
     41c:	97 95       	ror	r25
     41e:	87 95       	ror	r24
     420:	0a 94       	dec	r0
     422:	d2 f7       	brpl	.-12     	; 0x418 <__udivdi3+0xf0>
     424:	85 57       	subi	r24, 0x75	; 117
     426:	9f 4f       	sbci	r25, 0xFF	; 255
     428:	dc 01       	movw	r26, r24
     42a:	2c 91       	ld	r18, X
     42c:	80 e2       	ldi	r24, 0x20	; 32
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	a0 e0       	ldi	r26, 0x00	; 0
     432:	b0 e0       	ldi	r27, 0x00	; 0
     434:	8e 19       	sub	r24, r14
     436:	9f 09       	sbc	r25, r15
     438:	a0 0b       	sbc	r26, r16
     43a:	b1 0b       	sbc	r27, r17
     43c:	7c 01       	movw	r14, r24
     43e:	8d 01       	movw	r16, r26
     440:	e2 1a       	sub	r14, r18
     442:	f1 08       	sbc	r15, r1
     444:	01 09       	sbc	r16, r1
     446:	11 09       	sbc	r17, r1
     448:	e1 14       	cp	r14, r1
     44a:	f1 04       	cpc	r15, r1
     44c:	01 05       	cpc	r16, r1
     44e:	11 05       	cpc	r17, r1
     450:	a1 f1       	breq	.+104    	; 0x4ba <__udivdi3+0x192>
     452:	0e 2c       	mov	r0, r14
     454:	04 c0       	rjmp	.+8      	; 0x45e <__udivdi3+0x136>
     456:	22 0c       	add	r2, r2
     458:	33 1c       	adc	r3, r3
     45a:	44 1c       	adc	r4, r4
     45c:	55 1c       	adc	r5, r5
     45e:	0a 94       	dec	r0
     460:	d2 f7       	brpl	.-12     	; 0x456 <__udivdi3+0x12e>
     462:	a4 01       	movw	r20, r8
     464:	93 01       	movw	r18, r6
     466:	0e 2c       	mov	r0, r14
     468:	04 c0       	rjmp	.+8      	; 0x472 <__udivdi3+0x14a>
     46a:	22 0f       	add	r18, r18
     46c:	33 1f       	adc	r19, r19
     46e:	44 1f       	adc	r20, r20
     470:	55 1f       	adc	r21, r21
     472:	0a 94       	dec	r0
     474:	d2 f7       	brpl	.-12     	; 0x46a <__udivdi3+0x142>
     476:	80 e2       	ldi	r24, 0x20	; 32
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	8e 19       	sub	r24, r14
     47c:	9f 09       	sbc	r25, r15
     47e:	6d a4       	ldd	r6, Y+45	; 0x2d
     480:	7e a4       	ldd	r7, Y+46	; 0x2e
     482:	8f a4       	ldd	r8, Y+47	; 0x2f
     484:	98 a8       	ldd	r9, Y+48	; 0x30
     486:	04 c0       	rjmp	.+8      	; 0x490 <__udivdi3+0x168>
     488:	96 94       	lsr	r9
     48a:	87 94       	ror	r8
     48c:	77 94       	ror	r7
     48e:	67 94       	ror	r6
     490:	8a 95       	dec	r24
     492:	d2 f7       	brpl	.-12     	; 0x488 <__udivdi3+0x160>
     494:	62 2a       	or	r6, r18
     496:	73 2a       	or	r7, r19
     498:	84 2a       	or	r8, r20
     49a:	95 2a       	or	r9, r21
     49c:	ad a4       	ldd	r10, Y+45	; 0x2d
     49e:	be a4       	ldd	r11, Y+46	; 0x2e
     4a0:	cf a4       	ldd	r12, Y+47	; 0x2f
     4a2:	d8 a8       	ldd	r13, Y+48	; 0x30
     4a4:	04 c0       	rjmp	.+8      	; 0x4ae <__udivdi3+0x186>
     4a6:	aa 0c       	add	r10, r10
     4a8:	bb 1c       	adc	r11, r11
     4aa:	cc 1c       	adc	r12, r12
     4ac:	dd 1c       	adc	r13, r13
     4ae:	ea 94       	dec	r14
     4b0:	d2 f7       	brpl	.-12     	; 0x4a6 <__udivdi3+0x17e>
     4b2:	ad a6       	std	Y+45, r10	; 0x2d
     4b4:	be a6       	std	Y+46, r11	; 0x2e
     4b6:	cf a6       	std	Y+47, r12	; 0x2f
     4b8:	d8 aa       	std	Y+48, r13	; 0x30
     4ba:	62 01       	movw	r12, r4
     4bc:	ee 24       	eor	r14, r14
     4be:	ff 24       	eor	r15, r15
     4c0:	cd aa       	std	Y+53, r12	; 0x35
     4c2:	de aa       	std	Y+54, r13	; 0x36
     4c4:	ef aa       	std	Y+55, r14	; 0x37
     4c6:	f8 ae       	std	Y+56, r15	; 0x38
     4c8:	92 01       	movw	r18, r4
     4ca:	81 01       	movw	r16, r2
     4cc:	20 70       	andi	r18, 0x00	; 0
     4ce:	30 70       	andi	r19, 0x00	; 0
     4d0:	09 af       	std	Y+57, r16	; 0x39
     4d2:	1a af       	std	Y+58, r17	; 0x3a
     4d4:	2b af       	std	Y+59, r18	; 0x3b
     4d6:	3c af       	std	Y+60, r19	; 0x3c
     4d8:	c4 01       	movw	r24, r8
     4da:	b3 01       	movw	r22, r6
     4dc:	a7 01       	movw	r20, r14
     4de:	96 01       	movw	r18, r12
     4e0:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     4e4:	7b 01       	movw	r14, r22
     4e6:	8c 01       	movw	r16, r24
     4e8:	c4 01       	movw	r24, r8
     4ea:	b3 01       	movw	r22, r6
     4ec:	2d a9       	ldd	r18, Y+53	; 0x35
     4ee:	3e a9       	ldd	r19, Y+54	; 0x36
     4f0:	4f a9       	ldd	r20, Y+55	; 0x37
     4f2:	58 ad       	ldd	r21, Y+56	; 0x38
     4f4:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     4f8:	c9 01       	movw	r24, r18
     4fa:	da 01       	movw	r26, r20
     4fc:	3c 01       	movw	r6, r24
     4fe:	4d 01       	movw	r8, r26
     500:	c4 01       	movw	r24, r8
     502:	b3 01       	movw	r22, r6
     504:	29 ad       	ldd	r18, Y+57	; 0x39
     506:	3a ad       	ldd	r19, Y+58	; 0x3a
     508:	4b ad       	ldd	r20, Y+59	; 0x3b
     50a:	5c ad       	ldd	r21, Y+60	; 0x3c
     50c:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     510:	9b 01       	movw	r18, r22
     512:	ac 01       	movw	r20, r24
     514:	87 01       	movw	r16, r14
     516:	ff 24       	eor	r15, r15
     518:	ee 24       	eor	r14, r14
     51a:	ad a4       	ldd	r10, Y+45	; 0x2d
     51c:	be a4       	ldd	r11, Y+46	; 0x2e
     51e:	cf a4       	ldd	r12, Y+47	; 0x2f
     520:	d8 a8       	ldd	r13, Y+48	; 0x30
     522:	c6 01       	movw	r24, r12
     524:	aa 27       	eor	r26, r26
     526:	bb 27       	eor	r27, r27
     528:	57 01       	movw	r10, r14
     52a:	68 01       	movw	r12, r16
     52c:	a8 2a       	or	r10, r24
     52e:	b9 2a       	or	r11, r25
     530:	ca 2a       	or	r12, r26
     532:	db 2a       	or	r13, r27
     534:	a2 16       	cp	r10, r18
     536:	b3 06       	cpc	r11, r19
     538:	c4 06       	cpc	r12, r20
     53a:	d5 06       	cpc	r13, r21
     53c:	e0 f4       	brcc	.+56     	; 0x576 <__udivdi3+0x24e>
     53e:	08 94       	sec
     540:	61 08       	sbc	r6, r1
     542:	71 08       	sbc	r7, r1
     544:	81 08       	sbc	r8, r1
     546:	91 08       	sbc	r9, r1
     548:	a2 0c       	add	r10, r2
     54a:	b3 1c       	adc	r11, r3
     54c:	c4 1c       	adc	r12, r4
     54e:	d5 1c       	adc	r13, r5
     550:	a2 14       	cp	r10, r2
     552:	b3 04       	cpc	r11, r3
     554:	c4 04       	cpc	r12, r4
     556:	d5 04       	cpc	r13, r5
     558:	70 f0       	brcs	.+28     	; 0x576 <__udivdi3+0x24e>
     55a:	a2 16       	cp	r10, r18
     55c:	b3 06       	cpc	r11, r19
     55e:	c4 06       	cpc	r12, r20
     560:	d5 06       	cpc	r13, r21
     562:	48 f4       	brcc	.+18     	; 0x576 <__udivdi3+0x24e>
     564:	08 94       	sec
     566:	61 08       	sbc	r6, r1
     568:	71 08       	sbc	r7, r1
     56a:	81 08       	sbc	r8, r1
     56c:	91 08       	sbc	r9, r1
     56e:	a2 0c       	add	r10, r2
     570:	b3 1c       	adc	r11, r3
     572:	c4 1c       	adc	r12, r4
     574:	d5 1c       	adc	r13, r5
     576:	a2 1a       	sub	r10, r18
     578:	b3 0a       	sbc	r11, r19
     57a:	c4 0a       	sbc	r12, r20
     57c:	d5 0a       	sbc	r13, r21
     57e:	c6 01       	movw	r24, r12
     580:	b5 01       	movw	r22, r10
     582:	2d a9       	ldd	r18, Y+53	; 0x35
     584:	3e a9       	ldd	r19, Y+54	; 0x36
     586:	4f a9       	ldd	r20, Y+55	; 0x37
     588:	58 ad       	ldd	r21, Y+56	; 0x38
     58a:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     58e:	7b 01       	movw	r14, r22
     590:	8c 01       	movw	r16, r24
     592:	c6 01       	movw	r24, r12
     594:	b5 01       	movw	r22, r10
     596:	2d a9       	ldd	r18, Y+53	; 0x35
     598:	3e a9       	ldd	r19, Y+54	; 0x36
     59a:	4f a9       	ldd	r20, Y+55	; 0x37
     59c:	58 ad       	ldd	r21, Y+56	; 0x38
     59e:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     5a2:	c9 01       	movw	r24, r18
     5a4:	da 01       	movw	r26, r20
     5a6:	5c 01       	movw	r10, r24
     5a8:	6d 01       	movw	r12, r26
     5aa:	c6 01       	movw	r24, r12
     5ac:	b5 01       	movw	r22, r10
     5ae:	29 ad       	ldd	r18, Y+57	; 0x39
     5b0:	3a ad       	ldd	r19, Y+58	; 0x3a
     5b2:	4b ad       	ldd	r20, Y+59	; 0x3b
     5b4:	5c ad       	ldd	r21, Y+60	; 0x3c
     5b6:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     5ba:	9b 01       	movw	r18, r22
     5bc:	ac 01       	movw	r20, r24
     5be:	87 01       	movw	r16, r14
     5c0:	ff 24       	eor	r15, r15
     5c2:	ee 24       	eor	r14, r14
     5c4:	8d a5       	ldd	r24, Y+45	; 0x2d
     5c6:	9e a5       	ldd	r25, Y+46	; 0x2e
     5c8:	af a5       	ldd	r26, Y+47	; 0x2f
     5ca:	b8 a9       	ldd	r27, Y+48	; 0x30
     5cc:	a0 70       	andi	r26, 0x00	; 0
     5ce:	b0 70       	andi	r27, 0x00	; 0
     5d0:	e8 2a       	or	r14, r24
     5d2:	f9 2a       	or	r15, r25
     5d4:	0a 2b       	or	r16, r26
     5d6:	1b 2b       	or	r17, r27
     5d8:	e2 16       	cp	r14, r18
     5da:	f3 06       	cpc	r15, r19
     5dc:	04 07       	cpc	r16, r20
     5de:	15 07       	cpc	r17, r21
     5e0:	c0 f4       	brcc	.+48     	; 0x612 <__udivdi3+0x2ea>
     5e2:	08 94       	sec
     5e4:	a1 08       	sbc	r10, r1
     5e6:	b1 08       	sbc	r11, r1
     5e8:	c1 08       	sbc	r12, r1
     5ea:	d1 08       	sbc	r13, r1
     5ec:	e2 0c       	add	r14, r2
     5ee:	f3 1c       	adc	r15, r3
     5f0:	04 1d       	adc	r16, r4
     5f2:	15 1d       	adc	r17, r5
     5f4:	e2 14       	cp	r14, r2
     5f6:	f3 04       	cpc	r15, r3
     5f8:	04 05       	cpc	r16, r4
     5fa:	15 05       	cpc	r17, r5
     5fc:	50 f0       	brcs	.+20     	; 0x612 <__udivdi3+0x2ea>
     5fe:	e2 16       	cp	r14, r18
     600:	f3 06       	cpc	r15, r19
     602:	04 07       	cpc	r16, r20
     604:	15 07       	cpc	r17, r21
     606:	28 f4       	brcc	.+10     	; 0x612 <__udivdi3+0x2ea>
     608:	08 94       	sec
     60a:	a1 08       	sbc	r10, r1
     60c:	b1 08       	sbc	r11, r1
     60e:	c1 08       	sbc	r12, r1
     610:	d1 08       	sbc	r13, r1
     612:	d3 01       	movw	r26, r6
     614:	99 27       	eor	r25, r25
     616:	88 27       	eor	r24, r24
     618:	86 01       	movw	r16, r12
     61a:	75 01       	movw	r14, r10
     61c:	e8 2a       	or	r14, r24
     61e:	f9 2a       	or	r15, r25
     620:	0a 2b       	or	r16, r26
     622:	1b 2b       	or	r17, r27
     624:	e9 aa       	std	Y+49, r14	; 0x31
     626:	fa aa       	std	Y+50, r15	; 0x32
     628:	0b ab       	std	Y+51, r16	; 0x33
     62a:	1c ab       	std	Y+52, r17	; 0x34
     62c:	cf c4       	rjmp	.+2462   	; 0xfcc <__stack+0x76d>
     62e:	21 14       	cp	r2, r1
     630:	31 04       	cpc	r3, r1
     632:	41 04       	cpc	r4, r1
     634:	51 04       	cpc	r5, r1
     636:	71 f4       	brne	.+28     	; 0x654 <__udivdi3+0x32c>
     638:	61 e0       	ldi	r22, 0x01	; 1
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	80 e0       	ldi	r24, 0x00	; 0
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	40 e0       	ldi	r20, 0x00	; 0
     646:	50 e0       	ldi	r21, 0x00	; 0
     648:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     64c:	c9 01       	movw	r24, r18
     64e:	da 01       	movw	r26, r20
     650:	1c 01       	movw	r2, r24
     652:	2d 01       	movw	r4, r26
     654:	00 e0       	ldi	r16, 0x00	; 0
     656:	20 16       	cp	r2, r16
     658:	00 e0       	ldi	r16, 0x00	; 0
     65a:	30 06       	cpc	r3, r16
     65c:	01 e0       	ldi	r16, 0x01	; 1
     65e:	40 06       	cpc	r4, r16
     660:	00 e0       	ldi	r16, 0x00	; 0
     662:	50 06       	cpc	r5, r16
     664:	88 f4       	brcc	.+34     	; 0x688 <__udivdi3+0x360>
     666:	1f ef       	ldi	r17, 0xFF	; 255
     668:	21 16       	cp	r2, r17
     66a:	31 04       	cpc	r3, r1
     66c:	41 04       	cpc	r4, r1
     66e:	51 04       	cpc	r5, r1
     670:	31 f0       	breq	.+12     	; 0x67e <__udivdi3+0x356>
     672:	28 f0       	brcs	.+10     	; 0x67e <__udivdi3+0x356>
     674:	48 e0       	ldi	r20, 0x08	; 8
     676:	50 e0       	ldi	r21, 0x00	; 0
     678:	60 e0       	ldi	r22, 0x00	; 0
     67a:	70 e0       	ldi	r23, 0x00	; 0
     67c:	17 c0       	rjmp	.+46     	; 0x6ac <__udivdi3+0x384>
     67e:	40 e0       	ldi	r20, 0x00	; 0
     680:	50 e0       	ldi	r21, 0x00	; 0
     682:	60 e0       	ldi	r22, 0x00	; 0
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	12 c0       	rjmp	.+36     	; 0x6ac <__udivdi3+0x384>
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	22 16       	cp	r2, r18
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	32 06       	cpc	r3, r18
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	42 06       	cpc	r4, r18
     694:	21 e0       	ldi	r18, 0x01	; 1
     696:	52 06       	cpc	r5, r18
     698:	28 f0       	brcs	.+10     	; 0x6a4 <__udivdi3+0x37c>
     69a:	48 e1       	ldi	r20, 0x18	; 24
     69c:	50 e0       	ldi	r21, 0x00	; 0
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	70 e0       	ldi	r23, 0x00	; 0
     6a2:	04 c0       	rjmp	.+8      	; 0x6ac <__udivdi3+0x384>
     6a4:	40 e1       	ldi	r20, 0x10	; 16
     6a6:	50 e0       	ldi	r21, 0x00	; 0
     6a8:	60 e0       	ldi	r22, 0x00	; 0
     6aa:	70 e0       	ldi	r23, 0x00	; 0
     6ac:	d2 01       	movw	r26, r4
     6ae:	c1 01       	movw	r24, r2
     6b0:	04 2e       	mov	r0, r20
     6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__udivdi3+0x394>
     6b4:	b6 95       	lsr	r27
     6b6:	a7 95       	ror	r26
     6b8:	97 95       	ror	r25
     6ba:	87 95       	ror	r24
     6bc:	0a 94       	dec	r0
     6be:	d2 f7       	brpl	.-12     	; 0x6b4 <__udivdi3+0x38c>
     6c0:	85 57       	subi	r24, 0x75	; 117
     6c2:	9f 4f       	sbci	r25, 0xFF	; 255
     6c4:	dc 01       	movw	r26, r24
     6c6:	2c 91       	ld	r18, X
     6c8:	e0 e2       	ldi	r30, 0x20	; 32
     6ca:	ee 2e       	mov	r14, r30
     6cc:	f1 2c       	mov	r15, r1
     6ce:	01 2d       	mov	r16, r1
     6d0:	11 2d       	mov	r17, r1
     6d2:	d8 01       	movw	r26, r16
     6d4:	c7 01       	movw	r24, r14
     6d6:	84 1b       	sub	r24, r20
     6d8:	95 0b       	sbc	r25, r21
     6da:	a6 0b       	sbc	r26, r22
     6dc:	b7 0b       	sbc	r27, r23
     6de:	82 1b       	sub	r24, r18
     6e0:	91 09       	sbc	r25, r1
     6e2:	a1 09       	sbc	r26, r1
     6e4:	b1 09       	sbc	r27, r1
     6e6:	00 97       	sbiw	r24, 0x00	; 0
     6e8:	a1 05       	cpc	r26, r1
     6ea:	b1 05       	cpc	r27, r1
     6ec:	61 f4       	brne	.+24     	; 0x706 <__udivdi3+0x3de>
     6ee:	64 01       	movw	r12, r8
     6f0:	53 01       	movw	r10, r6
     6f2:	a2 18       	sub	r10, r2
     6f4:	b3 08       	sbc	r11, r3
     6f6:	c4 08       	sbc	r12, r4
     6f8:	d5 08       	sbc	r13, r5
     6fa:	31 e0       	ldi	r19, 0x01	; 1
     6fc:	63 2e       	mov	r6, r19
     6fe:	71 2c       	mov	r7, r1
     700:	81 2c       	mov	r8, r1
     702:	91 2c       	mov	r9, r1
     704:	1e c1       	rjmp	.+572    	; 0x942 <__stack+0xe3>
     706:	6f 96       	adiw	r28, 0x1f	; 31
     708:	8f af       	std	Y+63, r24	; 0x3f
     70a:	6f 97       	sbiw	r28, 0x1f	; 31
     70c:	08 2e       	mov	r0, r24
     70e:	04 c0       	rjmp	.+8      	; 0x718 <__udivdi3+0x3f0>
     710:	22 0c       	add	r2, r2
     712:	33 1c       	adc	r3, r3
     714:	44 1c       	adc	r4, r4
     716:	55 1c       	adc	r5, r5
     718:	0a 94       	dec	r0
     71a:	d2 f7       	brpl	.-12     	; 0x710 <__udivdi3+0x3e8>
     71c:	ee 2d       	mov	r30, r14
     71e:	e8 1b       	sub	r30, r24
     720:	64 01       	movw	r12, r8
     722:	53 01       	movw	r10, r6
     724:	0e 2e       	mov	r0, r30
     726:	04 c0       	rjmp	.+8      	; 0x730 <__udivdi3+0x408>
     728:	d6 94       	lsr	r13
     72a:	c7 94       	ror	r12
     72c:	b7 94       	ror	r11
     72e:	a7 94       	ror	r10
     730:	0a 94       	dec	r0
     732:	d2 f7       	brpl	.-12     	; 0x728 <__udivdi3+0x400>
     734:	a4 01       	movw	r20, r8
     736:	93 01       	movw	r18, r6
     738:	6f 96       	adiw	r28, 0x1f	; 31
     73a:	0f ac       	ldd	r0, Y+63	; 0x3f
     73c:	6f 97       	sbiw	r28, 0x1f	; 31
     73e:	04 c0       	rjmp	.+8      	; 0x748 <__udivdi3+0x420>
     740:	22 0f       	add	r18, r18
     742:	33 1f       	adc	r19, r19
     744:	44 1f       	adc	r20, r20
     746:	55 1f       	adc	r21, r21
     748:	0a 94       	dec	r0
     74a:	d2 f7       	brpl	.-12     	; 0x740 <__udivdi3+0x418>
     74c:	6d a4       	ldd	r6, Y+45	; 0x2d
     74e:	7e a4       	ldd	r7, Y+46	; 0x2e
     750:	8f a4       	ldd	r8, Y+47	; 0x2f
     752:	98 a8       	ldd	r9, Y+48	; 0x30
     754:	0e 2e       	mov	r0, r30
     756:	04 c0       	rjmp	.+8      	; 0x760 <__udivdi3+0x438>
     758:	96 94       	lsr	r9
     75a:	87 94       	ror	r8
     75c:	77 94       	ror	r7
     75e:	67 94       	ror	r6
     760:	0a 94       	dec	r0
     762:	d2 f7       	brpl	.-12     	; 0x758 <__udivdi3+0x430>
     764:	84 01       	movw	r16, r8
     766:	73 01       	movw	r14, r6
     768:	e2 2a       	or	r14, r18
     76a:	f3 2a       	or	r15, r19
     76c:	04 2b       	or	r16, r20
     76e:	15 2b       	or	r17, r21
     770:	e9 a6       	std	Y+41, r14	; 0x29
     772:	fa a6       	std	Y+42, r15	; 0x2a
     774:	0b a7       	std	Y+43, r16	; 0x2b
     776:	1c a7       	std	Y+44, r17	; 0x2c
     778:	32 01       	movw	r6, r4
     77a:	88 24       	eor	r8, r8
     77c:	99 24       	eor	r9, r9
     77e:	92 01       	movw	r18, r4
     780:	81 01       	movw	r16, r2
     782:	20 70       	andi	r18, 0x00	; 0
     784:	30 70       	andi	r19, 0x00	; 0
     786:	21 96       	adiw	r28, 0x01	; 1
     788:	0c af       	std	Y+60, r16	; 0x3c
     78a:	1d af       	std	Y+61, r17	; 0x3d
     78c:	2e af       	std	Y+62, r18	; 0x3e
     78e:	3f af       	std	Y+63, r19	; 0x3f
     790:	21 97       	sbiw	r28, 0x01	; 1
     792:	c6 01       	movw	r24, r12
     794:	b5 01       	movw	r22, r10
     796:	a4 01       	movw	r20, r8
     798:	93 01       	movw	r18, r6
     79a:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     79e:	7b 01       	movw	r14, r22
     7a0:	8c 01       	movw	r16, r24
     7a2:	c6 01       	movw	r24, r12
     7a4:	b5 01       	movw	r22, r10
     7a6:	a4 01       	movw	r20, r8
     7a8:	93 01       	movw	r18, r6
     7aa:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     7ae:	c9 01       	movw	r24, r18
     7b0:	da 01       	movw	r26, r20
     7b2:	25 96       	adiw	r28, 0x05	; 5
     7b4:	8c af       	std	Y+60, r24	; 0x3c
     7b6:	9d af       	std	Y+61, r25	; 0x3d
     7b8:	ae af       	std	Y+62, r26	; 0x3e
     7ba:	bf af       	std	Y+63, r27	; 0x3f
     7bc:	25 97       	sbiw	r28, 0x05	; 5
     7be:	bc 01       	movw	r22, r24
     7c0:	cd 01       	movw	r24, r26
     7c2:	21 96       	adiw	r28, 0x01	; 1
     7c4:	2c ad       	ldd	r18, Y+60	; 0x3c
     7c6:	3d ad       	ldd	r19, Y+61	; 0x3d
     7c8:	4e ad       	ldd	r20, Y+62	; 0x3e
     7ca:	5f ad       	ldd	r21, Y+63	; 0x3f
     7cc:	21 97       	sbiw	r28, 0x01	; 1
     7ce:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     7d2:	9b 01       	movw	r18, r22
     7d4:	ac 01       	movw	r20, r24
     7d6:	87 01       	movw	r16, r14
     7d8:	ff 24       	eor	r15, r15
     7da:	ee 24       	eor	r14, r14
     7dc:	a9 a4       	ldd	r10, Y+41	; 0x29
     7de:	ba a4       	ldd	r11, Y+42	; 0x2a
     7e0:	cb a4       	ldd	r12, Y+43	; 0x2b
     7e2:	dc a4       	ldd	r13, Y+44	; 0x2c
     7e4:	c6 01       	movw	r24, r12
     7e6:	aa 27       	eor	r26, r26
     7e8:	bb 27       	eor	r27, r27
     7ea:	5c 01       	movw	r10, r24
     7ec:	6d 01       	movw	r12, r26
     7ee:	ae 28       	or	r10, r14
     7f0:	bf 28       	or	r11, r15
     7f2:	c0 2a       	or	r12, r16
     7f4:	d1 2a       	or	r13, r17
     7f6:	a2 16       	cp	r10, r18
     7f8:	b3 06       	cpc	r11, r19
     7fa:	c4 06       	cpc	r12, r20
     7fc:	d5 06       	cpc	r13, r21
     7fe:	60 f5       	brcc	.+88     	; 0x858 <__udivdi3+0x530>
     800:	25 96       	adiw	r28, 0x05	; 5
     802:	6c ad       	ldd	r22, Y+60	; 0x3c
     804:	7d ad       	ldd	r23, Y+61	; 0x3d
     806:	8e ad       	ldd	r24, Y+62	; 0x3e
     808:	9f ad       	ldd	r25, Y+63	; 0x3f
     80a:	25 97       	sbiw	r28, 0x05	; 5
     80c:	61 50       	subi	r22, 0x01	; 1
     80e:	70 40       	sbci	r23, 0x00	; 0
     810:	80 40       	sbci	r24, 0x00	; 0
     812:	90 40       	sbci	r25, 0x00	; 0
     814:	25 96       	adiw	r28, 0x05	; 5
     816:	6c af       	std	Y+60, r22	; 0x3c
     818:	7d af       	std	Y+61, r23	; 0x3d
     81a:	8e af       	std	Y+62, r24	; 0x3e
     81c:	9f af       	std	Y+63, r25	; 0x3f
     81e:	25 97       	sbiw	r28, 0x05	; 5
     820:	a2 0c       	add	r10, r2
     822:	b3 1c       	adc	r11, r3
     824:	c4 1c       	adc	r12, r4
     826:	d5 1c       	adc	r13, r5
     828:	a2 14       	cp	r10, r2
     82a:	b3 04       	cpc	r11, r3
     82c:	c4 04       	cpc	r12, r4
     82e:	d5 04       	cpc	r13, r5
     830:	98 f0       	brcs	.+38     	; 0x858 <__udivdi3+0x530>
     832:	a2 16       	cp	r10, r18
     834:	b3 06       	cpc	r11, r19
     836:	c4 06       	cpc	r12, r20
     838:	d5 06       	cpc	r13, r21
     83a:	70 f4       	brcc	.+28     	; 0x858 <__udivdi3+0x530>
     83c:	61 50       	subi	r22, 0x01	; 1
     83e:	70 40       	sbci	r23, 0x00	; 0
     840:	80 40       	sbci	r24, 0x00	; 0
     842:	90 40       	sbci	r25, 0x00	; 0
     844:	25 96       	adiw	r28, 0x05	; 5
     846:	6c af       	std	Y+60, r22	; 0x3c
     848:	7d af       	std	Y+61, r23	; 0x3d
     84a:	8e af       	std	Y+62, r24	; 0x3e
     84c:	9f af       	std	Y+63, r25	; 0x3f
     84e:	25 97       	sbiw	r28, 0x05	; 5
     850:	a2 0c       	add	r10, r2
     852:	b3 1c       	adc	r11, r3
     854:	c4 1c       	adc	r12, r4
     856:	d5 1c       	adc	r13, r5
     858:	a2 1a       	sub	r10, r18
     85a:	b3 0a       	sbc	r11, r19
     85c:	c4 0a       	sbc	r12, r20
     85e:	d5 0a       	sbc	r13, r21
     860:	c6 01       	movw	r24, r12
     862:	b5 01       	movw	r22, r10
     864:	a4 01       	movw	r20, r8
     866:	93 01       	movw	r18, r6
     868:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     86c:	7b 01       	movw	r14, r22
     86e:	8c 01       	movw	r16, r24
     870:	c6 01       	movw	r24, r12
     872:	b5 01       	movw	r22, r10
     874:	a4 01       	movw	r20, r8
     876:	93 01       	movw	r18, r6
     878:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     87c:	c9 01       	movw	r24, r18
     87e:	da 01       	movw	r26, r20
     880:	3c 01       	movw	r6, r24
     882:	4d 01       	movw	r8, r26
     884:	c4 01       	movw	r24, r8
     886:	b3 01       	movw	r22, r6
     888:	21 96       	adiw	r28, 0x01	; 1
     88a:	2c ad       	ldd	r18, Y+60	; 0x3c
     88c:	3d ad       	ldd	r19, Y+61	; 0x3d
     88e:	4e ad       	ldd	r20, Y+62	; 0x3e
     890:	5f ad       	ldd	r21, Y+63	; 0x3f
     892:	21 97       	sbiw	r28, 0x01	; 1
     894:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     898:	9b 01       	movw	r18, r22
     89a:	ac 01       	movw	r20, r24
     89c:	87 01       	movw	r16, r14
     89e:	ff 24       	eor	r15, r15
     8a0:	ee 24       	eor	r14, r14
     8a2:	89 a5       	ldd	r24, Y+41	; 0x29
     8a4:	9a a5       	ldd	r25, Y+42	; 0x2a
     8a6:	ab a5       	ldd	r26, Y+43	; 0x2b
     8a8:	bc a5       	ldd	r27, Y+44	; 0x2c
     8aa:	a0 70       	andi	r26, 0x00	; 0
     8ac:	b0 70       	andi	r27, 0x00	; 0
     8ae:	57 01       	movw	r10, r14
     8b0:	68 01       	movw	r12, r16
     8b2:	a8 2a       	or	r10, r24
     8b4:	b9 2a       	or	r11, r25
     8b6:	ca 2a       	or	r12, r26
     8b8:	db 2a       	or	r13, r27
     8ba:	a2 16       	cp	r10, r18
     8bc:	b3 06       	cpc	r11, r19
     8be:	c4 06       	cpc	r12, r20
     8c0:	d5 06       	cpc	r13, r21
     8c2:	e0 f4       	brcc	.+56     	; 0x8fc <__stack+0x9d>
     8c4:	08 94       	sec
     8c6:	61 08       	sbc	r6, r1
     8c8:	71 08       	sbc	r7, r1
     8ca:	81 08       	sbc	r8, r1
     8cc:	91 08       	sbc	r9, r1
     8ce:	a2 0c       	add	r10, r2
     8d0:	b3 1c       	adc	r11, r3
     8d2:	c4 1c       	adc	r12, r4
     8d4:	d5 1c       	adc	r13, r5
     8d6:	a2 14       	cp	r10, r2
     8d8:	b3 04       	cpc	r11, r3
     8da:	c4 04       	cpc	r12, r4
     8dc:	d5 04       	cpc	r13, r5
     8de:	70 f0       	brcs	.+28     	; 0x8fc <__stack+0x9d>
     8e0:	a2 16       	cp	r10, r18
     8e2:	b3 06       	cpc	r11, r19
     8e4:	c4 06       	cpc	r12, r20
     8e6:	d5 06       	cpc	r13, r21
     8e8:	48 f4       	brcc	.+18     	; 0x8fc <__stack+0x9d>
     8ea:	08 94       	sec
     8ec:	61 08       	sbc	r6, r1
     8ee:	71 08       	sbc	r7, r1
     8f0:	81 08       	sbc	r8, r1
     8f2:	91 08       	sbc	r9, r1
     8f4:	a2 0c       	add	r10, r2
     8f6:	b3 1c       	adc	r11, r3
     8f8:	c4 1c       	adc	r12, r4
     8fa:	d5 1c       	adc	r13, r5
     8fc:	8d a5       	ldd	r24, Y+45	; 0x2d
     8fe:	9e a5       	ldd	r25, Y+46	; 0x2e
     900:	af a5       	ldd	r26, Y+47	; 0x2f
     902:	b8 a9       	ldd	r27, Y+48	; 0x30
     904:	6f 96       	adiw	r28, 0x1f	; 31
     906:	0f ac       	ldd	r0, Y+63	; 0x3f
     908:	6f 97       	sbiw	r28, 0x1f	; 31
     90a:	04 c0       	rjmp	.+8      	; 0x914 <__stack+0xb5>
     90c:	88 0f       	add	r24, r24
     90e:	99 1f       	adc	r25, r25
     910:	aa 1f       	adc	r26, r26
     912:	bb 1f       	adc	r27, r27
     914:	0a 94       	dec	r0
     916:	d2 f7       	brpl	.-12     	; 0x90c <__stack+0xad>
     918:	8d a7       	std	Y+45, r24	; 0x2d
     91a:	9e a7       	std	Y+46, r25	; 0x2e
     91c:	af a7       	std	Y+47, r26	; 0x2f
     91e:	b8 ab       	std	Y+48, r27	; 0x30
     920:	a2 1a       	sub	r10, r18
     922:	b3 0a       	sbc	r11, r19
     924:	c4 0a       	sbc	r12, r20
     926:	d5 0a       	sbc	r13, r21
     928:	25 96       	adiw	r28, 0x05	; 5
     92a:	ec ac       	ldd	r14, Y+60	; 0x3c
     92c:	fd ac       	ldd	r15, Y+61	; 0x3d
     92e:	0e ad       	ldd	r16, Y+62	; 0x3e
     930:	1f ad       	ldd	r17, Y+63	; 0x3f
     932:	25 97       	sbiw	r28, 0x05	; 5
     934:	d7 01       	movw	r26, r14
     936:	99 27       	eor	r25, r25
     938:	88 27       	eor	r24, r24
     93a:	68 2a       	or	r6, r24
     93c:	79 2a       	or	r7, r25
     93e:	8a 2a       	or	r8, r26
     940:	9b 2a       	or	r9, r27
     942:	82 01       	movw	r16, r4
     944:	22 27       	eor	r18, r18
     946:	33 27       	eor	r19, r19
     948:	29 96       	adiw	r28, 0x09	; 9
     94a:	0c af       	std	Y+60, r16	; 0x3c
     94c:	1d af       	std	Y+61, r17	; 0x3d
     94e:	2e af       	std	Y+62, r18	; 0x3e
     950:	3f af       	std	Y+63, r19	; 0x3f
     952:	29 97       	sbiw	r28, 0x09	; 9
     954:	a2 01       	movw	r20, r4
     956:	91 01       	movw	r18, r2
     958:	40 70       	andi	r20, 0x00	; 0
     95a:	50 70       	andi	r21, 0x00	; 0
     95c:	2d 96       	adiw	r28, 0x0d	; 13
     95e:	2c af       	std	Y+60, r18	; 0x3c
     960:	3d af       	std	Y+61, r19	; 0x3d
     962:	4e af       	std	Y+62, r20	; 0x3e
     964:	5f af       	std	Y+63, r21	; 0x3f
     966:	2d 97       	sbiw	r28, 0x0d	; 13
     968:	c6 01       	movw	r24, r12
     96a:	b5 01       	movw	r22, r10
     96c:	29 96       	adiw	r28, 0x09	; 9
     96e:	2c ad       	ldd	r18, Y+60	; 0x3c
     970:	3d ad       	ldd	r19, Y+61	; 0x3d
     972:	4e ad       	ldd	r20, Y+62	; 0x3e
     974:	5f ad       	ldd	r21, Y+63	; 0x3f
     976:	29 97       	sbiw	r28, 0x09	; 9
     978:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     97c:	7b 01       	movw	r14, r22
     97e:	8c 01       	movw	r16, r24
     980:	c6 01       	movw	r24, r12
     982:	b5 01       	movw	r22, r10
     984:	29 96       	adiw	r28, 0x09	; 9
     986:	2c ad       	ldd	r18, Y+60	; 0x3c
     988:	3d ad       	ldd	r19, Y+61	; 0x3d
     98a:	4e ad       	ldd	r20, Y+62	; 0x3e
     98c:	5f ad       	ldd	r21, Y+63	; 0x3f
     98e:	29 97       	sbiw	r28, 0x09	; 9
     990:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     994:	c9 01       	movw	r24, r18
     996:	da 01       	movw	r26, r20
     998:	61 96       	adiw	r28, 0x11	; 17
     99a:	8c af       	std	Y+60, r24	; 0x3c
     99c:	9d af       	std	Y+61, r25	; 0x3d
     99e:	ae af       	std	Y+62, r26	; 0x3e
     9a0:	bf af       	std	Y+63, r27	; 0x3f
     9a2:	61 97       	sbiw	r28, 0x11	; 17
     9a4:	bc 01       	movw	r22, r24
     9a6:	cd 01       	movw	r24, r26
     9a8:	2d 96       	adiw	r28, 0x0d	; 13
     9aa:	2c ad       	ldd	r18, Y+60	; 0x3c
     9ac:	3d ad       	ldd	r19, Y+61	; 0x3d
     9ae:	4e ad       	ldd	r20, Y+62	; 0x3e
     9b0:	5f ad       	ldd	r21, Y+63	; 0x3f
     9b2:	2d 97       	sbiw	r28, 0x0d	; 13
     9b4:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     9b8:	9b 01       	movw	r18, r22
     9ba:	ac 01       	movw	r20, r24
     9bc:	87 01       	movw	r16, r14
     9be:	ff 24       	eor	r15, r15
     9c0:	ee 24       	eor	r14, r14
     9c2:	ad a4       	ldd	r10, Y+45	; 0x2d
     9c4:	be a4       	ldd	r11, Y+46	; 0x2e
     9c6:	cf a4       	ldd	r12, Y+47	; 0x2f
     9c8:	d8 a8       	ldd	r13, Y+48	; 0x30
     9ca:	c6 01       	movw	r24, r12
     9cc:	aa 27       	eor	r26, r26
     9ce:	bb 27       	eor	r27, r27
     9d0:	57 01       	movw	r10, r14
     9d2:	68 01       	movw	r12, r16
     9d4:	a8 2a       	or	r10, r24
     9d6:	b9 2a       	or	r11, r25
     9d8:	ca 2a       	or	r12, r26
     9da:	db 2a       	or	r13, r27
     9dc:	a2 16       	cp	r10, r18
     9de:	b3 06       	cpc	r11, r19
     9e0:	c4 06       	cpc	r12, r20
     9e2:	d5 06       	cpc	r13, r21
     9e4:	60 f5       	brcc	.+88     	; 0xa3e <__stack+0x1df>
     9e6:	61 96       	adiw	r28, 0x11	; 17
     9e8:	6c ad       	ldd	r22, Y+60	; 0x3c
     9ea:	7d ad       	ldd	r23, Y+61	; 0x3d
     9ec:	8e ad       	ldd	r24, Y+62	; 0x3e
     9ee:	9f ad       	ldd	r25, Y+63	; 0x3f
     9f0:	61 97       	sbiw	r28, 0x11	; 17
     9f2:	61 50       	subi	r22, 0x01	; 1
     9f4:	70 40       	sbci	r23, 0x00	; 0
     9f6:	80 40       	sbci	r24, 0x00	; 0
     9f8:	90 40       	sbci	r25, 0x00	; 0
     9fa:	61 96       	adiw	r28, 0x11	; 17
     9fc:	6c af       	std	Y+60, r22	; 0x3c
     9fe:	7d af       	std	Y+61, r23	; 0x3d
     a00:	8e af       	std	Y+62, r24	; 0x3e
     a02:	9f af       	std	Y+63, r25	; 0x3f
     a04:	61 97       	sbiw	r28, 0x11	; 17
     a06:	a2 0c       	add	r10, r2
     a08:	b3 1c       	adc	r11, r3
     a0a:	c4 1c       	adc	r12, r4
     a0c:	d5 1c       	adc	r13, r5
     a0e:	a2 14       	cp	r10, r2
     a10:	b3 04       	cpc	r11, r3
     a12:	c4 04       	cpc	r12, r4
     a14:	d5 04       	cpc	r13, r5
     a16:	98 f0       	brcs	.+38     	; 0xa3e <__stack+0x1df>
     a18:	a2 16       	cp	r10, r18
     a1a:	b3 06       	cpc	r11, r19
     a1c:	c4 06       	cpc	r12, r20
     a1e:	d5 06       	cpc	r13, r21
     a20:	70 f4       	brcc	.+28     	; 0xa3e <__stack+0x1df>
     a22:	61 50       	subi	r22, 0x01	; 1
     a24:	70 40       	sbci	r23, 0x00	; 0
     a26:	80 40       	sbci	r24, 0x00	; 0
     a28:	90 40       	sbci	r25, 0x00	; 0
     a2a:	61 96       	adiw	r28, 0x11	; 17
     a2c:	6c af       	std	Y+60, r22	; 0x3c
     a2e:	7d af       	std	Y+61, r23	; 0x3d
     a30:	8e af       	std	Y+62, r24	; 0x3e
     a32:	9f af       	std	Y+63, r25	; 0x3f
     a34:	61 97       	sbiw	r28, 0x11	; 17
     a36:	a2 0c       	add	r10, r2
     a38:	b3 1c       	adc	r11, r3
     a3a:	c4 1c       	adc	r12, r4
     a3c:	d5 1c       	adc	r13, r5
     a3e:	a2 1a       	sub	r10, r18
     a40:	b3 0a       	sbc	r11, r19
     a42:	c4 0a       	sbc	r12, r20
     a44:	d5 0a       	sbc	r13, r21
     a46:	c6 01       	movw	r24, r12
     a48:	b5 01       	movw	r22, r10
     a4a:	29 96       	adiw	r28, 0x09	; 9
     a4c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a4e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a50:	4e ad       	ldd	r20, Y+62	; 0x3e
     a52:	5f ad       	ldd	r21, Y+63	; 0x3f
     a54:	29 97       	sbiw	r28, 0x09	; 9
     a56:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     a5a:	7b 01       	movw	r14, r22
     a5c:	8c 01       	movw	r16, r24
     a5e:	c6 01       	movw	r24, r12
     a60:	b5 01       	movw	r22, r10
     a62:	29 96       	adiw	r28, 0x09	; 9
     a64:	2c ad       	ldd	r18, Y+60	; 0x3c
     a66:	3d ad       	ldd	r19, Y+61	; 0x3d
     a68:	4e ad       	ldd	r20, Y+62	; 0x3e
     a6a:	5f ad       	ldd	r21, Y+63	; 0x3f
     a6c:	29 97       	sbiw	r28, 0x09	; 9
     a6e:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     a72:	c9 01       	movw	r24, r18
     a74:	da 01       	movw	r26, r20
     a76:	5c 01       	movw	r10, r24
     a78:	6d 01       	movw	r12, r26
     a7a:	c6 01       	movw	r24, r12
     a7c:	b5 01       	movw	r22, r10
     a7e:	2d 96       	adiw	r28, 0x0d	; 13
     a80:	2c ad       	ldd	r18, Y+60	; 0x3c
     a82:	3d ad       	ldd	r19, Y+61	; 0x3d
     a84:	4e ad       	ldd	r20, Y+62	; 0x3e
     a86:	5f ad       	ldd	r21, Y+63	; 0x3f
     a88:	2d 97       	sbiw	r28, 0x0d	; 13
     a8a:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     a8e:	9b 01       	movw	r18, r22
     a90:	ac 01       	movw	r20, r24
     a92:	87 01       	movw	r16, r14
     a94:	ff 24       	eor	r15, r15
     a96:	ee 24       	eor	r14, r14
     a98:	8d a5       	ldd	r24, Y+45	; 0x2d
     a9a:	9e a5       	ldd	r25, Y+46	; 0x2e
     a9c:	af a5       	ldd	r26, Y+47	; 0x2f
     a9e:	b8 a9       	ldd	r27, Y+48	; 0x30
     aa0:	a0 70       	andi	r26, 0x00	; 0
     aa2:	b0 70       	andi	r27, 0x00	; 0
     aa4:	e8 2a       	or	r14, r24
     aa6:	f9 2a       	or	r15, r25
     aa8:	0a 2b       	or	r16, r26
     aaa:	1b 2b       	or	r17, r27
     aac:	e2 16       	cp	r14, r18
     aae:	f3 06       	cpc	r15, r19
     ab0:	04 07       	cpc	r16, r20
     ab2:	15 07       	cpc	r17, r21
     ab4:	c0 f4       	brcc	.+48     	; 0xae6 <__stack+0x287>
     ab6:	08 94       	sec
     ab8:	a1 08       	sbc	r10, r1
     aba:	b1 08       	sbc	r11, r1
     abc:	c1 08       	sbc	r12, r1
     abe:	d1 08       	sbc	r13, r1
     ac0:	e2 0c       	add	r14, r2
     ac2:	f3 1c       	adc	r15, r3
     ac4:	04 1d       	adc	r16, r4
     ac6:	15 1d       	adc	r17, r5
     ac8:	e2 14       	cp	r14, r2
     aca:	f3 04       	cpc	r15, r3
     acc:	04 05       	cpc	r16, r4
     ace:	15 05       	cpc	r17, r5
     ad0:	50 f0       	brcs	.+20     	; 0xae6 <__stack+0x287>
     ad2:	e2 16       	cp	r14, r18
     ad4:	f3 06       	cpc	r15, r19
     ad6:	04 07       	cpc	r16, r20
     ad8:	15 07       	cpc	r17, r21
     ada:	28 f4       	brcc	.+10     	; 0xae6 <__stack+0x287>
     adc:	08 94       	sec
     ade:	a1 08       	sbc	r10, r1
     ae0:	b1 08       	sbc	r11, r1
     ae2:	c1 08       	sbc	r12, r1
     ae4:	d1 08       	sbc	r13, r1
     ae6:	61 96       	adiw	r28, 0x11	; 17
     ae8:	ec ac       	ldd	r14, Y+60	; 0x3c
     aea:	fd ac       	ldd	r15, Y+61	; 0x3d
     aec:	0e ad       	ldd	r16, Y+62	; 0x3e
     aee:	1f ad       	ldd	r17, Y+63	; 0x3f
     af0:	61 97       	sbiw	r28, 0x11	; 17
     af2:	d7 01       	movw	r26, r14
     af4:	99 27       	eor	r25, r25
     af6:	88 27       	eor	r24, r24
     af8:	96 01       	movw	r18, r12
     afa:	85 01       	movw	r16, r10
     afc:	08 2b       	or	r16, r24
     afe:	19 2b       	or	r17, r25
     b00:	2a 2b       	or	r18, r26
     b02:	3b 2b       	or	r19, r27
     b04:	09 ab       	std	Y+49, r16	; 0x31
     b06:	1a ab       	std	Y+50, r17	; 0x32
     b08:	2b ab       	std	Y+51, r18	; 0x33
     b0a:	3c ab       	std	Y+52, r19	; 0x34
     b0c:	62 c2       	rjmp	.+1220   	; 0xfd2 <__stack+0x773>
     b0e:	6e 14       	cp	r6, r14
     b10:	7f 04       	cpc	r7, r15
     b12:	80 06       	cpc	r8, r16
     b14:	91 06       	cpc	r9, r17
     b16:	08 f4       	brcc	.+2      	; 0xb1a <__stack+0x2bb>
     b18:	51 c2       	rjmp	.+1186   	; 0xfbc <__stack+0x75d>
     b1a:	20 e0       	ldi	r18, 0x00	; 0
     b1c:	e2 16       	cp	r14, r18
     b1e:	20 e0       	ldi	r18, 0x00	; 0
     b20:	f2 06       	cpc	r15, r18
     b22:	21 e0       	ldi	r18, 0x01	; 1
     b24:	02 07       	cpc	r16, r18
     b26:	20 e0       	ldi	r18, 0x00	; 0
     b28:	12 07       	cpc	r17, r18
     b2a:	88 f4       	brcc	.+34     	; 0xb4e <__stack+0x2ef>
     b2c:	3f ef       	ldi	r19, 0xFF	; 255
     b2e:	e3 16       	cp	r14, r19
     b30:	f1 04       	cpc	r15, r1
     b32:	01 05       	cpc	r16, r1
     b34:	11 05       	cpc	r17, r1
     b36:	31 f0       	breq	.+12     	; 0xb44 <__stack+0x2e5>
     b38:	28 f0       	brcs	.+10     	; 0xb44 <__stack+0x2e5>
     b3a:	48 e0       	ldi	r20, 0x08	; 8
     b3c:	50 e0       	ldi	r21, 0x00	; 0
     b3e:	60 e0       	ldi	r22, 0x00	; 0
     b40:	70 e0       	ldi	r23, 0x00	; 0
     b42:	17 c0       	rjmp	.+46     	; 0xb72 <__stack+0x313>
     b44:	40 e0       	ldi	r20, 0x00	; 0
     b46:	50 e0       	ldi	r21, 0x00	; 0
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	12 c0       	rjmp	.+36     	; 0xb72 <__stack+0x313>
     b4e:	40 e0       	ldi	r20, 0x00	; 0
     b50:	e4 16       	cp	r14, r20
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	f4 06       	cpc	r15, r20
     b56:	40 e0       	ldi	r20, 0x00	; 0
     b58:	04 07       	cpc	r16, r20
     b5a:	41 e0       	ldi	r20, 0x01	; 1
     b5c:	14 07       	cpc	r17, r20
     b5e:	28 f0       	brcs	.+10     	; 0xb6a <__stack+0x30b>
     b60:	48 e1       	ldi	r20, 0x18	; 24
     b62:	50 e0       	ldi	r21, 0x00	; 0
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <__stack+0x313>
     b6a:	40 e1       	ldi	r20, 0x10	; 16
     b6c:	50 e0       	ldi	r21, 0x00	; 0
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	70 e0       	ldi	r23, 0x00	; 0
     b72:	d8 01       	movw	r26, r16
     b74:	c7 01       	movw	r24, r14
     b76:	04 2e       	mov	r0, r20
     b78:	04 c0       	rjmp	.+8      	; 0xb82 <__stack+0x323>
     b7a:	b6 95       	lsr	r27
     b7c:	a7 95       	ror	r26
     b7e:	97 95       	ror	r25
     b80:	87 95       	ror	r24
     b82:	0a 94       	dec	r0
     b84:	d2 f7       	brpl	.-12     	; 0xb7a <__stack+0x31b>
     b86:	85 57       	subi	r24, 0x75	; 117
     b88:	9f 4f       	sbci	r25, 0xFF	; 255
     b8a:	dc 01       	movw	r26, r24
     b8c:	2c 91       	ld	r18, X
     b8e:	30 e2       	ldi	r19, 0x20	; 32
     b90:	a3 2e       	mov	r10, r19
     b92:	b1 2c       	mov	r11, r1
     b94:	c1 2c       	mov	r12, r1
     b96:	d1 2c       	mov	r13, r1
     b98:	d6 01       	movw	r26, r12
     b9a:	c5 01       	movw	r24, r10
     b9c:	84 1b       	sub	r24, r20
     b9e:	95 0b       	sbc	r25, r21
     ba0:	a6 0b       	sbc	r26, r22
     ba2:	b7 0b       	sbc	r27, r23
     ba4:	82 1b       	sub	r24, r18
     ba6:	91 09       	sbc	r25, r1
     ba8:	a1 09       	sbc	r26, r1
     baa:	b1 09       	sbc	r27, r1
     bac:	00 97       	sbiw	r24, 0x00	; 0
     bae:	a1 05       	cpc	r26, r1
     bb0:	b1 05       	cpc	r27, r1
     bb2:	89 f4       	brne	.+34     	; 0xbd6 <__stack+0x377>
     bb4:	e6 14       	cp	r14, r6
     bb6:	f7 04       	cpc	r15, r7
     bb8:	08 05       	cpc	r16, r8
     bba:	19 05       	cpc	r17, r9
     bbc:	08 f4       	brcc	.+2      	; 0xbc0 <__stack+0x361>
     bbe:	f2 c1       	rjmp	.+996    	; 0xfa4 <__stack+0x745>
     bc0:	6d a4       	ldd	r6, Y+45	; 0x2d
     bc2:	7e a4       	ldd	r7, Y+46	; 0x2e
     bc4:	8f a4       	ldd	r8, Y+47	; 0x2f
     bc6:	98 a8       	ldd	r9, Y+48	; 0x30
     bc8:	62 14       	cp	r6, r2
     bca:	73 04       	cpc	r7, r3
     bcc:	84 04       	cpc	r8, r4
     bce:	95 04       	cpc	r9, r5
     bd0:	08 f0       	brcs	.+2      	; 0xbd4 <__stack+0x375>
     bd2:	e8 c1       	rjmp	.+976    	; 0xfa4 <__stack+0x745>
     bd4:	f3 c1       	rjmp	.+998    	; 0xfbc <__stack+0x75d>
     bd6:	6e 96       	adiw	r28, 0x1e	; 30
     bd8:	8f af       	std	Y+63, r24	; 0x3f
     bda:	6e 97       	sbiw	r28, 0x1e	; 30
     bdc:	08 2e       	mov	r0, r24
     bde:	04 c0       	rjmp	.+8      	; 0xbe8 <__stack+0x389>
     be0:	ee 0c       	add	r14, r14
     be2:	ff 1c       	adc	r15, r15
     be4:	00 1f       	adc	r16, r16
     be6:	11 1f       	adc	r17, r17
     be8:	0a 94       	dec	r0
     bea:	d2 f7       	brpl	.-12     	; 0xbe0 <__stack+0x381>
     bec:	6a 2d       	mov	r22, r10
     bee:	68 1b       	sub	r22, r24
     bf0:	d2 01       	movw	r26, r4
     bf2:	c1 01       	movw	r24, r2
     bf4:	06 2e       	mov	r0, r22
     bf6:	04 c0       	rjmp	.+8      	; 0xc00 <__stack+0x3a1>
     bf8:	b6 95       	lsr	r27
     bfa:	a7 95       	ror	r26
     bfc:	97 95       	ror	r25
     bfe:	87 95       	ror	r24
     c00:	0a 94       	dec	r0
     c02:	d2 f7       	brpl	.-12     	; 0xbf8 <__stack+0x399>
     c04:	5c 01       	movw	r10, r24
     c06:	6d 01       	movw	r12, r26
     c08:	ae 28       	or	r10, r14
     c0a:	bf 28       	or	r11, r15
     c0c:	c0 2a       	or	r12, r16
     c0e:	d1 2a       	or	r13, r17
     c10:	ad a2       	std	Y+37, r10	; 0x25
     c12:	be a2       	std	Y+38, r11	; 0x26
     c14:	cf a2       	std	Y+39, r12	; 0x27
     c16:	d8 a6       	std	Y+40, r13	; 0x28
     c18:	72 01       	movw	r14, r4
     c1a:	61 01       	movw	r12, r2
     c1c:	6e 96       	adiw	r28, 0x1e	; 30
     c1e:	0f ac       	ldd	r0, Y+63	; 0x3f
     c20:	6e 97       	sbiw	r28, 0x1e	; 30
     c22:	04 c0       	rjmp	.+8      	; 0xc2c <__stack+0x3cd>
     c24:	cc 0c       	add	r12, r12
     c26:	dd 1c       	adc	r13, r13
     c28:	ee 1c       	adc	r14, r14
     c2a:	ff 1c       	adc	r15, r15
     c2c:	0a 94       	dec	r0
     c2e:	d2 f7       	brpl	.-12     	; 0xc24 <__stack+0x3c5>
     c30:	c9 a2       	std	Y+33, r12	; 0x21
     c32:	da a2       	std	Y+34, r13	; 0x22
     c34:	eb a2       	std	Y+35, r14	; 0x23
     c36:	fc a2       	std	Y+36, r15	; 0x24
     c38:	64 01       	movw	r12, r8
     c3a:	53 01       	movw	r10, r6
     c3c:	06 2e       	mov	r0, r22
     c3e:	04 c0       	rjmp	.+8      	; 0xc48 <__stack+0x3e9>
     c40:	d6 94       	lsr	r13
     c42:	c7 94       	ror	r12
     c44:	b7 94       	ror	r11
     c46:	a7 94       	ror	r10
     c48:	0a 94       	dec	r0
     c4a:	d2 f7       	brpl	.-12     	; 0xc40 <__stack+0x3e1>
     c4c:	d4 01       	movw	r26, r8
     c4e:	c3 01       	movw	r24, r6
     c50:	6e 96       	adiw	r28, 0x1e	; 30
     c52:	0f ac       	ldd	r0, Y+63	; 0x3f
     c54:	6e 97       	sbiw	r28, 0x1e	; 30
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <__stack+0x401>
     c58:	88 0f       	add	r24, r24
     c5a:	99 1f       	adc	r25, r25
     c5c:	aa 1f       	adc	r26, r26
     c5e:	bb 1f       	adc	r27, r27
     c60:	0a 94       	dec	r0
     c62:	d2 f7       	brpl	.-12     	; 0xc58 <__stack+0x3f9>
     c64:	ed a4       	ldd	r14, Y+45	; 0x2d
     c66:	fe a4       	ldd	r15, Y+46	; 0x2e
     c68:	0f a5       	ldd	r16, Y+47	; 0x2f
     c6a:	18 a9       	ldd	r17, Y+48	; 0x30
     c6c:	04 c0       	rjmp	.+8      	; 0xc76 <__stack+0x417>
     c6e:	16 95       	lsr	r17
     c70:	07 95       	ror	r16
     c72:	f7 94       	ror	r15
     c74:	e7 94       	ror	r14
     c76:	6a 95       	dec	r22
     c78:	d2 f7       	brpl	.-12     	; 0xc6e <__stack+0x40f>
     c7a:	37 01       	movw	r6, r14
     c7c:	48 01       	movw	r8, r16
     c7e:	68 2a       	or	r6, r24
     c80:	79 2a       	or	r7, r25
     c82:	8a 2a       	or	r8, r26
     c84:	9b 2a       	or	r9, r27
     c86:	6d 8e       	std	Y+29, r6	; 0x1d
     c88:	7e 8e       	std	Y+30, r7	; 0x1e
     c8a:	8f 8e       	std	Y+31, r8	; 0x1f
     c8c:	98 a2       	std	Y+32, r9	; 0x20
     c8e:	ed a0       	ldd	r14, Y+37	; 0x25
     c90:	fe a0       	ldd	r15, Y+38	; 0x26
     c92:	0f a1       	ldd	r16, Y+39	; 0x27
     c94:	18 a5       	ldd	r17, Y+40	; 0x28
     c96:	38 01       	movw	r6, r16
     c98:	88 24       	eor	r8, r8
     c9a:	99 24       	eor	r9, r9
     c9c:	98 01       	movw	r18, r16
     c9e:	87 01       	movw	r16, r14
     ca0:	20 70       	andi	r18, 0x00	; 0
     ca2:	30 70       	andi	r19, 0x00	; 0
     ca4:	65 96       	adiw	r28, 0x15	; 21
     ca6:	0c af       	std	Y+60, r16	; 0x3c
     ca8:	1d af       	std	Y+61, r17	; 0x3d
     caa:	2e af       	std	Y+62, r18	; 0x3e
     cac:	3f af       	std	Y+63, r19	; 0x3f
     cae:	65 97       	sbiw	r28, 0x15	; 21
     cb0:	c6 01       	movw	r24, r12
     cb2:	b5 01       	movw	r22, r10
     cb4:	a4 01       	movw	r20, r8
     cb6:	93 01       	movw	r18, r6
     cb8:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     cbc:	7b 01       	movw	r14, r22
     cbe:	8c 01       	movw	r16, r24
     cc0:	c6 01       	movw	r24, r12
     cc2:	b5 01       	movw	r22, r10
     cc4:	a4 01       	movw	r20, r8
     cc6:	93 01       	movw	r18, r6
     cc8:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     ccc:	c9 01       	movw	r24, r18
     cce:	da 01       	movw	r26, r20
     cd0:	1c 01       	movw	r2, r24
     cd2:	2d 01       	movw	r4, r26
     cd4:	c2 01       	movw	r24, r4
     cd6:	b1 01       	movw	r22, r2
     cd8:	65 96       	adiw	r28, 0x15	; 21
     cda:	2c ad       	ldd	r18, Y+60	; 0x3c
     cdc:	3d ad       	ldd	r19, Y+61	; 0x3d
     cde:	4e ad       	ldd	r20, Y+62	; 0x3e
     ce0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ce2:	65 97       	sbiw	r28, 0x15	; 21
     ce4:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     ce8:	9b 01       	movw	r18, r22
     cea:	ac 01       	movw	r20, r24
     cec:	87 01       	movw	r16, r14
     cee:	ff 24       	eor	r15, r15
     cf0:	ee 24       	eor	r14, r14
     cf2:	ad 8c       	ldd	r10, Y+29	; 0x1d
     cf4:	be 8c       	ldd	r11, Y+30	; 0x1e
     cf6:	cf 8c       	ldd	r12, Y+31	; 0x1f
     cf8:	d8 a0       	ldd	r13, Y+32	; 0x20
     cfa:	c6 01       	movw	r24, r12
     cfc:	aa 27       	eor	r26, r26
     cfe:	bb 27       	eor	r27, r27
     d00:	57 01       	movw	r10, r14
     d02:	68 01       	movw	r12, r16
     d04:	a8 2a       	or	r10, r24
     d06:	b9 2a       	or	r11, r25
     d08:	ca 2a       	or	r12, r26
     d0a:	db 2a       	or	r13, r27
     d0c:	a2 16       	cp	r10, r18
     d0e:	b3 06       	cpc	r11, r19
     d10:	c4 06       	cpc	r12, r20
     d12:	d5 06       	cpc	r13, r21
     d14:	00 f5       	brcc	.+64     	; 0xd56 <__stack+0x4f7>
     d16:	08 94       	sec
     d18:	21 08       	sbc	r2, r1
     d1a:	31 08       	sbc	r3, r1
     d1c:	41 08       	sbc	r4, r1
     d1e:	51 08       	sbc	r5, r1
     d20:	ed a0       	ldd	r14, Y+37	; 0x25
     d22:	fe a0       	ldd	r15, Y+38	; 0x26
     d24:	0f a1       	ldd	r16, Y+39	; 0x27
     d26:	18 a5       	ldd	r17, Y+40	; 0x28
     d28:	ae 0c       	add	r10, r14
     d2a:	bf 1c       	adc	r11, r15
     d2c:	c0 1e       	adc	r12, r16
     d2e:	d1 1e       	adc	r13, r17
     d30:	ae 14       	cp	r10, r14
     d32:	bf 04       	cpc	r11, r15
     d34:	c0 06       	cpc	r12, r16
     d36:	d1 06       	cpc	r13, r17
     d38:	70 f0       	brcs	.+28     	; 0xd56 <__stack+0x4f7>
     d3a:	a2 16       	cp	r10, r18
     d3c:	b3 06       	cpc	r11, r19
     d3e:	c4 06       	cpc	r12, r20
     d40:	d5 06       	cpc	r13, r21
     d42:	48 f4       	brcc	.+18     	; 0xd56 <__stack+0x4f7>
     d44:	08 94       	sec
     d46:	21 08       	sbc	r2, r1
     d48:	31 08       	sbc	r3, r1
     d4a:	41 08       	sbc	r4, r1
     d4c:	51 08       	sbc	r5, r1
     d4e:	ae 0c       	add	r10, r14
     d50:	bf 1c       	adc	r11, r15
     d52:	c0 1e       	adc	r12, r16
     d54:	d1 1e       	adc	r13, r17
     d56:	a2 1a       	sub	r10, r18
     d58:	b3 0a       	sbc	r11, r19
     d5a:	c4 0a       	sbc	r12, r20
     d5c:	d5 0a       	sbc	r13, r21
     d5e:	c6 01       	movw	r24, r12
     d60:	b5 01       	movw	r22, r10
     d62:	a4 01       	movw	r20, r8
     d64:	93 01       	movw	r18, r6
     d66:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     d6a:	7b 01       	movw	r14, r22
     d6c:	8c 01       	movw	r16, r24
     d6e:	c6 01       	movw	r24, r12
     d70:	b5 01       	movw	r22, r10
     d72:	a4 01       	movw	r20, r8
     d74:	93 01       	movw	r18, r6
     d76:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
     d7a:	c9 01       	movw	r24, r18
     d7c:	da 01       	movw	r26, r20
     d7e:	3c 01       	movw	r6, r24
     d80:	4d 01       	movw	r8, r26
     d82:	c4 01       	movw	r24, r8
     d84:	b3 01       	movw	r22, r6
     d86:	65 96       	adiw	r28, 0x15	; 21
     d88:	2c ad       	ldd	r18, Y+60	; 0x3c
     d8a:	3d ad       	ldd	r19, Y+61	; 0x3d
     d8c:	4e ad       	ldd	r20, Y+62	; 0x3e
     d8e:	5f ad       	ldd	r21, Y+63	; 0x3f
     d90:	65 97       	sbiw	r28, 0x15	; 21
     d92:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     d96:	9b 01       	movw	r18, r22
     d98:	ac 01       	movw	r20, r24
     d9a:	87 01       	movw	r16, r14
     d9c:	ff 24       	eor	r15, r15
     d9e:	ee 24       	eor	r14, r14
     da0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     da2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     da4:	af 8d       	ldd	r26, Y+31	; 0x1f
     da6:	b8 a1       	ldd	r27, Y+32	; 0x20
     da8:	a0 70       	andi	r26, 0x00	; 0
     daa:	b0 70       	andi	r27, 0x00	; 0
     dac:	57 01       	movw	r10, r14
     dae:	68 01       	movw	r12, r16
     db0:	a8 2a       	or	r10, r24
     db2:	b9 2a       	or	r11, r25
     db4:	ca 2a       	or	r12, r26
     db6:	db 2a       	or	r13, r27
     db8:	a2 16       	cp	r10, r18
     dba:	b3 06       	cpc	r11, r19
     dbc:	c4 06       	cpc	r12, r20
     dbe:	d5 06       	cpc	r13, r21
     dc0:	00 f5       	brcc	.+64     	; 0xe02 <__stack+0x5a3>
     dc2:	08 94       	sec
     dc4:	61 08       	sbc	r6, r1
     dc6:	71 08       	sbc	r7, r1
     dc8:	81 08       	sbc	r8, r1
     dca:	91 08       	sbc	r9, r1
     dcc:	6d a1       	ldd	r22, Y+37	; 0x25
     dce:	7e a1       	ldd	r23, Y+38	; 0x26
     dd0:	8f a1       	ldd	r24, Y+39	; 0x27
     dd2:	98 a5       	ldd	r25, Y+40	; 0x28
     dd4:	a6 0e       	add	r10, r22
     dd6:	b7 1e       	adc	r11, r23
     dd8:	c8 1e       	adc	r12, r24
     dda:	d9 1e       	adc	r13, r25
     ddc:	a6 16       	cp	r10, r22
     dde:	b7 06       	cpc	r11, r23
     de0:	c8 06       	cpc	r12, r24
     de2:	d9 06       	cpc	r13, r25
     de4:	70 f0       	brcs	.+28     	; 0xe02 <__stack+0x5a3>
     de6:	a2 16       	cp	r10, r18
     de8:	b3 06       	cpc	r11, r19
     dea:	c4 06       	cpc	r12, r20
     dec:	d5 06       	cpc	r13, r21
     dee:	48 f4       	brcc	.+18     	; 0xe02 <__stack+0x5a3>
     df0:	08 94       	sec
     df2:	61 08       	sbc	r6, r1
     df4:	71 08       	sbc	r7, r1
     df6:	81 08       	sbc	r8, r1
     df8:	91 08       	sbc	r9, r1
     dfa:	a6 0e       	add	r10, r22
     dfc:	b7 1e       	adc	r11, r23
     dfe:	c8 1e       	adc	r12, r24
     e00:	d9 1e       	adc	r13, r25
     e02:	d6 01       	movw	r26, r12
     e04:	c5 01       	movw	r24, r10
     e06:	82 1b       	sub	r24, r18
     e08:	93 0b       	sbc	r25, r19
     e0a:	a4 0b       	sbc	r26, r20
     e0c:	b5 0b       	sbc	r27, r21
     e0e:	89 8f       	std	Y+25, r24	; 0x19
     e10:	9a 8f       	std	Y+26, r25	; 0x1a
     e12:	ab 8f       	std	Y+27, r26	; 0x1b
     e14:	bc 8f       	std	Y+28, r27	; 0x1c
     e16:	d1 01       	movw	r26, r2
     e18:	99 27       	eor	r25, r25
     e1a:	88 27       	eor	r24, r24
     e1c:	64 01       	movw	r12, r8
     e1e:	53 01       	movw	r10, r6
     e20:	a8 2a       	or	r10, r24
     e22:	b9 2a       	or	r11, r25
     e24:	ca 2a       	or	r12, r26
     e26:	db 2a       	or	r13, r27
     e28:	a9 aa       	std	Y+49, r10	; 0x31
     e2a:	ba aa       	std	Y+50, r11	; 0x32
     e2c:	cb aa       	std	Y+51, r12	; 0x33
     e2e:	dc aa       	std	Y+52, r13	; 0x34
     e30:	86 01       	movw	r16, r12
     e32:	75 01       	movw	r14, r10
     e34:	2f ef       	ldi	r18, 0xFF	; 255
     e36:	3f ef       	ldi	r19, 0xFF	; 255
     e38:	40 e0       	ldi	r20, 0x00	; 0
     e3a:	50 e0       	ldi	r21, 0x00	; 0
     e3c:	e2 22       	and	r14, r18
     e3e:	f3 22       	and	r15, r19
     e40:	04 23       	and	r16, r20
     e42:	15 23       	and	r17, r21
     e44:	a6 01       	movw	r20, r12
     e46:	66 27       	eor	r22, r22
     e48:	77 27       	eor	r23, r23
     e4a:	6d 96       	adiw	r28, 0x1d	; 29
     e4c:	4c af       	std	Y+60, r20	; 0x3c
     e4e:	5d af       	std	Y+61, r21	; 0x3d
     e50:	6e af       	std	Y+62, r22	; 0x3e
     e52:	7f af       	std	Y+63, r23	; 0x3f
     e54:	6d 97       	sbiw	r28, 0x1d	; 29
     e56:	a9 a0       	ldd	r10, Y+33	; 0x21
     e58:	ba a0       	ldd	r11, Y+34	; 0x22
     e5a:	cb a0       	ldd	r12, Y+35	; 0x23
     e5c:	dc a0       	ldd	r13, Y+36	; 0x24
     e5e:	6f ef       	ldi	r22, 0xFF	; 255
     e60:	7f ef       	ldi	r23, 0xFF	; 255
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	a6 22       	and	r10, r22
     e68:	b7 22       	and	r11, r23
     e6a:	c8 22       	and	r12, r24
     e6c:	d9 22       	and	r13, r25
     e6e:	89 a1       	ldd	r24, Y+33	; 0x21
     e70:	9a a1       	ldd	r25, Y+34	; 0x22
     e72:	ab a1       	ldd	r26, Y+35	; 0x23
     e74:	bc a1       	ldd	r27, Y+36	; 0x24
     e76:	1d 01       	movw	r2, r26
     e78:	44 24       	eor	r4, r4
     e7a:	55 24       	eor	r5, r5
     e7c:	c8 01       	movw	r24, r16
     e7e:	b7 01       	movw	r22, r14
     e80:	a6 01       	movw	r20, r12
     e82:	95 01       	movw	r18, r10
     e84:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     e88:	69 96       	adiw	r28, 0x19	; 25
     e8a:	6c af       	std	Y+60, r22	; 0x3c
     e8c:	7d af       	std	Y+61, r23	; 0x3d
     e8e:	8e af       	std	Y+62, r24	; 0x3e
     e90:	9f af       	std	Y+63, r25	; 0x3f
     e92:	69 97       	sbiw	r28, 0x19	; 25
     e94:	c8 01       	movw	r24, r16
     e96:	b7 01       	movw	r22, r14
     e98:	a2 01       	movw	r20, r4
     e9a:	91 01       	movw	r18, r2
     e9c:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     ea0:	3b 01       	movw	r6, r22
     ea2:	4c 01       	movw	r8, r24
     ea4:	6d 96       	adiw	r28, 0x1d	; 29
     ea6:	6c ad       	ldd	r22, Y+60	; 0x3c
     ea8:	7d ad       	ldd	r23, Y+61	; 0x3d
     eaa:	8e ad       	ldd	r24, Y+62	; 0x3e
     eac:	9f ad       	ldd	r25, Y+63	; 0x3f
     eae:	6d 97       	sbiw	r28, 0x1d	; 29
     eb0:	a6 01       	movw	r20, r12
     eb2:	95 01       	movw	r18, r10
     eb4:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     eb8:	7b 01       	movw	r14, r22
     eba:	8c 01       	movw	r16, r24
     ebc:	6d 96       	adiw	r28, 0x1d	; 29
     ebe:	6c ad       	ldd	r22, Y+60	; 0x3c
     ec0:	7d ad       	ldd	r23, Y+61	; 0x3d
     ec2:	8e ad       	ldd	r24, Y+62	; 0x3e
     ec4:	9f ad       	ldd	r25, Y+63	; 0x3f
     ec6:	6d 97       	sbiw	r28, 0x1d	; 29
     ec8:	a2 01       	movw	r20, r4
     eca:	91 01       	movw	r18, r2
     ecc:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
     ed0:	5b 01       	movw	r10, r22
     ed2:	6c 01       	movw	r12, r24
     ed4:	a8 01       	movw	r20, r16
     ed6:	97 01       	movw	r18, r14
     ed8:	26 0d       	add	r18, r6
     eda:	37 1d       	adc	r19, r7
     edc:	48 1d       	adc	r20, r8
     ede:	59 1d       	adc	r21, r9
     ee0:	69 96       	adiw	r28, 0x19	; 25
     ee2:	6c ac       	ldd	r6, Y+60	; 0x3c
     ee4:	7d ac       	ldd	r7, Y+61	; 0x3d
     ee6:	8e ac       	ldd	r8, Y+62	; 0x3e
     ee8:	9f ac       	ldd	r9, Y+63	; 0x3f
     eea:	69 97       	sbiw	r28, 0x19	; 25
     eec:	c4 01       	movw	r24, r8
     eee:	aa 27       	eor	r26, r26
     ef0:	bb 27       	eor	r27, r27
     ef2:	28 0f       	add	r18, r24
     ef4:	39 1f       	adc	r19, r25
     ef6:	4a 1f       	adc	r20, r26
     ef8:	5b 1f       	adc	r21, r27
     efa:	2e 15       	cp	r18, r14
     efc:	3f 05       	cpc	r19, r15
     efe:	40 07       	cpc	r20, r16
     f00:	51 07       	cpc	r21, r17
     f02:	48 f4       	brcc	.+18     	; 0xf16 <__stack+0x6b7>
     f04:	e1 2c       	mov	r14, r1
     f06:	f1 2c       	mov	r15, r1
     f08:	61 e0       	ldi	r22, 0x01	; 1
     f0a:	06 2f       	mov	r16, r22
     f0c:	11 2d       	mov	r17, r1
     f0e:	ae 0c       	add	r10, r14
     f10:	bf 1c       	adc	r11, r15
     f12:	c0 1e       	adc	r12, r16
     f14:	d1 1e       	adc	r13, r17
     f16:	ca 01       	movw	r24, r20
     f18:	aa 27       	eor	r26, r26
     f1a:	bb 27       	eor	r27, r27
     f1c:	bc 01       	movw	r22, r24
     f1e:	cd 01       	movw	r24, r26
     f20:	6a 0d       	add	r22, r10
     f22:	7b 1d       	adc	r23, r11
     f24:	8c 1d       	adc	r24, r12
     f26:	9d 1d       	adc	r25, r13
     f28:	69 8c       	ldd	r6, Y+25	; 0x19
     f2a:	7a 8c       	ldd	r7, Y+26	; 0x1a
     f2c:	8b 8c       	ldd	r8, Y+27	; 0x1b
     f2e:	9c 8c       	ldd	r9, Y+28	; 0x1c
     f30:	66 16       	cp	r6, r22
     f32:	77 06       	cpc	r7, r23
     f34:	88 06       	cpc	r8, r24
     f36:	99 06       	cpc	r9, r25
     f38:	40 f1       	brcs	.+80     	; 0xf8a <__stack+0x72b>
     f3a:	66 15       	cp	r22, r6
     f3c:	77 05       	cpc	r23, r7
     f3e:	88 05       	cpc	r24, r8
     f40:	99 05       	cpc	r25, r9
     f42:	09 f0       	breq	.+2      	; 0xf46 <__stack+0x6e7>
     f44:	43 c0       	rjmp	.+134    	; 0xfcc <__stack+0x76d>
     f46:	d9 01       	movw	r26, r18
     f48:	99 27       	eor	r25, r25
     f4a:	88 27       	eor	r24, r24
     f4c:	69 96       	adiw	r28, 0x19	; 25
     f4e:	2c ad       	ldd	r18, Y+60	; 0x3c
     f50:	3d ad       	ldd	r19, Y+61	; 0x3d
     f52:	4e ad       	ldd	r20, Y+62	; 0x3e
     f54:	5f ad       	ldd	r21, Y+63	; 0x3f
     f56:	69 97       	sbiw	r28, 0x19	; 25
     f58:	40 70       	andi	r20, 0x00	; 0
     f5a:	50 70       	andi	r21, 0x00	; 0
     f5c:	82 0f       	add	r24, r18
     f5e:	93 1f       	adc	r25, r19
     f60:	a4 1f       	adc	r26, r20
     f62:	b5 1f       	adc	r27, r21
     f64:	2d a5       	ldd	r18, Y+45	; 0x2d
     f66:	3e a5       	ldd	r19, Y+46	; 0x2e
     f68:	4f a5       	ldd	r20, Y+47	; 0x2f
     f6a:	58 a9       	ldd	r21, Y+48	; 0x30
     f6c:	6e 96       	adiw	r28, 0x1e	; 30
     f6e:	0f ac       	ldd	r0, Y+63	; 0x3f
     f70:	6e 97       	sbiw	r28, 0x1e	; 30
     f72:	04 c0       	rjmp	.+8      	; 0xf7c <__stack+0x71d>
     f74:	22 0f       	add	r18, r18
     f76:	33 1f       	adc	r19, r19
     f78:	44 1f       	adc	r20, r20
     f7a:	55 1f       	adc	r21, r21
     f7c:	0a 94       	dec	r0
     f7e:	d2 f7       	brpl	.-12     	; 0xf74 <__stack+0x715>
     f80:	28 17       	cp	r18, r24
     f82:	39 07       	cpc	r19, r25
     f84:	4a 07       	cpc	r20, r26
     f86:	5b 07       	cpc	r21, r27
     f88:	08 f5       	brcc	.+66     	; 0xfcc <__stack+0x76d>
     f8a:	09 a9       	ldd	r16, Y+49	; 0x31
     f8c:	1a a9       	ldd	r17, Y+50	; 0x32
     f8e:	2b a9       	ldd	r18, Y+51	; 0x33
     f90:	3c a9       	ldd	r19, Y+52	; 0x34
     f92:	01 50       	subi	r16, 0x01	; 1
     f94:	10 40       	sbci	r17, 0x00	; 0
     f96:	20 40       	sbci	r18, 0x00	; 0
     f98:	30 40       	sbci	r19, 0x00	; 0
     f9a:	09 ab       	std	Y+49, r16	; 0x31
     f9c:	1a ab       	std	Y+50, r17	; 0x32
     f9e:	2b ab       	std	Y+51, r18	; 0x33
     fa0:	3c ab       	std	Y+52, r19	; 0x34
     fa2:	14 c0       	rjmp	.+40     	; 0xfcc <__stack+0x76d>
     fa4:	66 24       	eor	r6, r6
     fa6:	77 24       	eor	r7, r7
     fa8:	43 01       	movw	r8, r6
     faa:	21 e0       	ldi	r18, 0x01	; 1
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	40 e0       	ldi	r20, 0x00	; 0
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	29 ab       	std	Y+49, r18	; 0x31
     fb4:	3a ab       	std	Y+50, r19	; 0x32
     fb6:	4b ab       	std	Y+51, r20	; 0x33
     fb8:	5c ab       	std	Y+52, r21	; 0x34
     fba:	0b c0       	rjmp	.+22     	; 0xfd2 <__stack+0x773>
     fbc:	66 24       	eor	r6, r6
     fbe:	77 24       	eor	r7, r7
     fc0:	43 01       	movw	r8, r6
     fc2:	19 aa       	std	Y+49, r1	; 0x31
     fc4:	1a aa       	std	Y+50, r1	; 0x32
     fc6:	1b aa       	std	Y+51, r1	; 0x33
     fc8:	1c aa       	std	Y+52, r1	; 0x34
     fca:	03 c0       	rjmp	.+6      	; 0xfd2 <__stack+0x773>
     fcc:	66 24       	eor	r6, r6
     fce:	77 24       	eor	r7, r7
     fd0:	43 01       	movw	r8, r6
     fd2:	fe 01       	movw	r30, r28
     fd4:	71 96       	adiw	r30, 0x11	; 17
     fd6:	88 e0       	ldi	r24, 0x08	; 8
     fd8:	df 01       	movw	r26, r30
     fda:	1d 92       	st	X+, r1
     fdc:	8a 95       	dec	r24
     fde:	e9 f7       	brne	.-6      	; 0xfda <__stack+0x77b>
     fe0:	a9 a8       	ldd	r10, Y+49	; 0x31
     fe2:	ba a8       	ldd	r11, Y+50	; 0x32
     fe4:	cb a8       	ldd	r12, Y+51	; 0x33
     fe6:	dc a8       	ldd	r13, Y+52	; 0x34
     fe8:	a9 8a       	std	Y+17, r10	; 0x11
     fea:	ba 8a       	std	Y+18, r11	; 0x12
     fec:	cb 8a       	std	Y+19, r12	; 0x13
     fee:	dc 8a       	std	Y+20, r13	; 0x14
     ff0:	6d 8a       	std	Y+21, r6	; 0x15
     ff2:	7e 8a       	std	Y+22, r7	; 0x16
     ff4:	8f 8a       	std	Y+23, r8	; 0x17
     ff6:	98 8e       	std	Y+24, r9	; 0x18
     ff8:	29 a9       	ldd	r18, Y+49	; 0x31
     ffa:	3a 89       	ldd	r19, Y+18	; 0x12
     ffc:	4b 89       	ldd	r20, Y+19	; 0x13
     ffe:	5c 89       	ldd	r21, Y+20	; 0x14
    1000:	66 2d       	mov	r22, r6
    1002:	7e 89       	ldd	r23, Y+22	; 0x16
    1004:	8f 89       	ldd	r24, Y+23	; 0x17
    1006:	98 8d       	ldd	r25, Y+24	; 0x18
    1008:	c2 5a       	subi	r28, 0xA2	; 162
    100a:	df 4f       	sbci	r29, 0xFF	; 255
    100c:	e2 e1       	ldi	r30, 0x12	; 18
    100e:	0c 94 ec 29 	jmp	0x53d8	; 0x53d8 <__epilogue_restores__>

00001012 <__umoddi3>:
    1012:	ab e5       	ldi	r26, 0x5B	; 91
    1014:	b0 e0       	ldi	r27, 0x00	; 0
    1016:	ef e0       	ldi	r30, 0x0F	; 15
    1018:	f8 e0       	ldi	r31, 0x08	; 8
    101a:	0c 94 d0 29 	jmp	0x53a0	; 0x53a0 <__prologue_saves__>
    101e:	a8 e0       	ldi	r26, 0x08	; 8
    1020:	4e 01       	movw	r8, r28
    1022:	08 94       	sec
    1024:	81 1c       	adc	r8, r1
    1026:	91 1c       	adc	r9, r1
    1028:	f4 01       	movw	r30, r8
    102a:	6a 2e       	mov	r6, r26
    102c:	11 92       	st	Z+, r1
    102e:	6a 94       	dec	r6
    1030:	e9 f7       	brne	.-6      	; 0x102c <__umoddi3+0x1a>
    1032:	29 83       	std	Y+1, r18	; 0x01
    1034:	3a 83       	std	Y+2, r19	; 0x02
    1036:	4b 83       	std	Y+3, r20	; 0x03
    1038:	5c 83       	std	Y+4, r21	; 0x04
    103a:	6d 83       	std	Y+5, r22	; 0x05
    103c:	7e 83       	std	Y+6, r23	; 0x06
    103e:	8f 83       	std	Y+7, r24	; 0x07
    1040:	98 87       	std	Y+8, r25	; 0x08
    1042:	ce 01       	movw	r24, r28
    1044:	09 96       	adiw	r24, 0x09	; 9
    1046:	fc 01       	movw	r30, r24
    1048:	11 92       	st	Z+, r1
    104a:	aa 95       	dec	r26
    104c:	e9 f7       	brne	.-6      	; 0x1048 <__umoddi3+0x36>
    104e:	a9 86       	std	Y+9, r10	; 0x09
    1050:	ba 86       	std	Y+10, r11	; 0x0a
    1052:	cb 86       	std	Y+11, r12	; 0x0b
    1054:	dc 86       	std	Y+12, r13	; 0x0c
    1056:	ed 86       	std	Y+13, r14	; 0x0d
    1058:	fe 86       	std	Y+14, r15	; 0x0e
    105a:	0f 87       	std	Y+15, r16	; 0x0f
    105c:	18 8b       	std	Y+16, r17	; 0x10
    105e:	29 84       	ldd	r2, Y+9	; 0x09
    1060:	3a 84       	ldd	r3, Y+10	; 0x0a
    1062:	4b 84       	ldd	r4, Y+11	; 0x0b
    1064:	5c 84       	ldd	r5, Y+12	; 0x0c
    1066:	ad 84       	ldd	r10, Y+13	; 0x0d
    1068:	be 84       	ldd	r11, Y+14	; 0x0e
    106a:	cf 84       	ldd	r12, Y+15	; 0x0f
    106c:	d8 88       	ldd	r13, Y+16	; 0x10
    106e:	29 81       	ldd	r18, Y+1	; 0x01
    1070:	3a 81       	ldd	r19, Y+2	; 0x02
    1072:	4b 81       	ldd	r20, Y+3	; 0x03
    1074:	5c 81       	ldd	r21, Y+4	; 0x04
    1076:	69 96       	adiw	r28, 0x19	; 25
    1078:	2f af       	std	Y+63, r18	; 0x3f
    107a:	69 97       	sbiw	r28, 0x19	; 25
    107c:	6a 96       	adiw	r28, 0x1a	; 26
    107e:	3f af       	std	Y+63, r19	; 0x3f
    1080:	6a 97       	sbiw	r28, 0x1a	; 26
    1082:	6b 96       	adiw	r28, 0x1b	; 27
    1084:	4f af       	std	Y+63, r20	; 0x3f
    1086:	6b 97       	sbiw	r28, 0x1b	; 27
    1088:	6c 96       	adiw	r28, 0x1c	; 28
    108a:	5f af       	std	Y+63, r21	; 0x3f
    108c:	6c 97       	sbiw	r28, 0x1c	; 28
    108e:	6c 96       	adiw	r28, 0x1c	; 28
    1090:	6c ac       	ldd	r6, Y+60	; 0x3c
    1092:	7d ac       	ldd	r7, Y+61	; 0x3d
    1094:	8e ac       	ldd	r8, Y+62	; 0x3e
    1096:	9f ac       	ldd	r9, Y+63	; 0x3f
    1098:	6c 97       	sbiw	r28, 0x1c	; 28
    109a:	69 aa       	std	Y+49, r6	; 0x31
    109c:	7a aa       	std	Y+50, r7	; 0x32
    109e:	8b aa       	std	Y+51, r8	; 0x33
    10a0:	9c aa       	std	Y+52, r9	; 0x34
    10a2:	6d 81       	ldd	r22, Y+5	; 0x05
    10a4:	7e 81       	ldd	r23, Y+6	; 0x06
    10a6:	8f 81       	ldd	r24, Y+7	; 0x07
    10a8:	98 85       	ldd	r25, Y+8	; 0x08
    10aa:	3b 01       	movw	r6, r22
    10ac:	4c 01       	movw	r8, r24
    10ae:	6d aa       	std	Y+53, r6	; 0x35
    10b0:	7e aa       	std	Y+54, r7	; 0x36
    10b2:	8f aa       	std	Y+55, r8	; 0x37
    10b4:	98 ae       	std	Y+56, r9	; 0x38
    10b6:	a1 14       	cp	r10, r1
    10b8:	b1 04       	cpc	r11, r1
    10ba:	c1 04       	cpc	r12, r1
    10bc:	d1 04       	cpc	r13, r1
    10be:	09 f0       	breq	.+2      	; 0x10c2 <__umoddi3+0xb0>
    10c0:	04 c3       	rjmp	.+1544   	; 0x16ca <__umoddi3+0x6b8>
    10c2:	62 14       	cp	r6, r2
    10c4:	73 04       	cpc	r7, r3
    10c6:	84 04       	cpc	r8, r4
    10c8:	95 04       	cpc	r9, r5
    10ca:	08 f0       	brcs	.+2      	; 0x10ce <__umoddi3+0xbc>
    10cc:	00 c1       	rjmp	.+512    	; 0x12ce <__umoddi3+0x2bc>
    10ce:	00 e0       	ldi	r16, 0x00	; 0
    10d0:	20 16       	cp	r2, r16
    10d2:	00 e0       	ldi	r16, 0x00	; 0
    10d4:	30 06       	cpc	r3, r16
    10d6:	01 e0       	ldi	r16, 0x01	; 1
    10d8:	40 06       	cpc	r4, r16
    10da:	00 e0       	ldi	r16, 0x00	; 0
    10dc:	50 06       	cpc	r5, r16
    10de:	88 f4       	brcc	.+34     	; 0x1102 <__umoddi3+0xf0>
    10e0:	1f ef       	ldi	r17, 0xFF	; 255
    10e2:	21 16       	cp	r2, r17
    10e4:	31 04       	cpc	r3, r1
    10e6:	41 04       	cpc	r4, r1
    10e8:	51 04       	cpc	r5, r1
    10ea:	39 f0       	breq	.+14     	; 0x10fa <__umoddi3+0xe8>
    10ec:	30 f0       	brcs	.+12     	; 0x10fa <__umoddi3+0xe8>
    10ee:	88 e0       	ldi	r24, 0x08	; 8
    10f0:	e8 2e       	mov	r14, r24
    10f2:	f1 2c       	mov	r15, r1
    10f4:	01 2d       	mov	r16, r1
    10f6:	11 2d       	mov	r17, r1
    10f8:	18 c0       	rjmp	.+48     	; 0x112a <__umoddi3+0x118>
    10fa:	ee 24       	eor	r14, r14
    10fc:	ff 24       	eor	r15, r15
    10fe:	87 01       	movw	r16, r14
    1100:	14 c0       	rjmp	.+40     	; 0x112a <__umoddi3+0x118>
    1102:	40 e0       	ldi	r20, 0x00	; 0
    1104:	24 16       	cp	r2, r20
    1106:	40 e0       	ldi	r20, 0x00	; 0
    1108:	34 06       	cpc	r3, r20
    110a:	40 e0       	ldi	r20, 0x00	; 0
    110c:	44 06       	cpc	r4, r20
    110e:	41 e0       	ldi	r20, 0x01	; 1
    1110:	54 06       	cpc	r5, r20
    1112:	30 f0       	brcs	.+12     	; 0x1120 <__umoddi3+0x10e>
    1114:	b8 e1       	ldi	r27, 0x18	; 24
    1116:	eb 2e       	mov	r14, r27
    1118:	f1 2c       	mov	r15, r1
    111a:	01 2d       	mov	r16, r1
    111c:	11 2d       	mov	r17, r1
    111e:	05 c0       	rjmp	.+10     	; 0x112a <__umoddi3+0x118>
    1120:	a0 e1       	ldi	r26, 0x10	; 16
    1122:	ea 2e       	mov	r14, r26
    1124:	f1 2c       	mov	r15, r1
    1126:	01 2d       	mov	r16, r1
    1128:	11 2d       	mov	r17, r1
    112a:	d2 01       	movw	r26, r4
    112c:	c1 01       	movw	r24, r2
    112e:	0e 2c       	mov	r0, r14
    1130:	04 c0       	rjmp	.+8      	; 0x113a <__umoddi3+0x128>
    1132:	b6 95       	lsr	r27
    1134:	a7 95       	ror	r26
    1136:	97 95       	ror	r25
    1138:	87 95       	ror	r24
    113a:	0a 94       	dec	r0
    113c:	d2 f7       	brpl	.-12     	; 0x1132 <__umoddi3+0x120>
    113e:	85 57       	subi	r24, 0x75	; 117
    1140:	9f 4f       	sbci	r25, 0xFF	; 255
    1142:	dc 01       	movw	r26, r24
    1144:	2c 91       	ld	r18, X
    1146:	80 e2       	ldi	r24, 0x20	; 32
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	a0 e0       	ldi	r26, 0x00	; 0
    114c:	b0 e0       	ldi	r27, 0x00	; 0
    114e:	8e 19       	sub	r24, r14
    1150:	9f 09       	sbc	r25, r15
    1152:	a0 0b       	sbc	r26, r16
    1154:	b1 0b       	sbc	r27, r17
    1156:	5c 01       	movw	r10, r24
    1158:	6d 01       	movw	r12, r26
    115a:	a2 1a       	sub	r10, r18
    115c:	b1 08       	sbc	r11, r1
    115e:	c1 08       	sbc	r12, r1
    1160:	d1 08       	sbc	r13, r1
    1162:	a9 ae       	std	Y+57, r10	; 0x39
    1164:	ba ae       	std	Y+58, r11	; 0x3a
    1166:	cb ae       	std	Y+59, r12	; 0x3b
    1168:	dc ae       	std	Y+60, r13	; 0x3c
    116a:	a1 14       	cp	r10, r1
    116c:	b1 04       	cpc	r11, r1
    116e:	c1 04       	cpc	r12, r1
    1170:	d1 04       	cpc	r13, r1
    1172:	09 f4       	brne	.+2      	; 0x1176 <__umoddi3+0x164>
    1174:	3f c0       	rjmp	.+126    	; 0x11f4 <__umoddi3+0x1e2>
    1176:	69 ad       	ldd	r22, Y+57	; 0x39
    1178:	06 2e       	mov	r0, r22
    117a:	04 c0       	rjmp	.+8      	; 0x1184 <__umoddi3+0x172>
    117c:	22 0c       	add	r2, r2
    117e:	33 1c       	adc	r3, r3
    1180:	44 1c       	adc	r4, r4
    1182:	55 1c       	adc	r5, r5
    1184:	0a 94       	dec	r0
    1186:	d2 f7       	brpl	.-12     	; 0x117c <__umoddi3+0x16a>
    1188:	a4 01       	movw	r20, r8
    118a:	93 01       	movw	r18, r6
    118c:	06 2e       	mov	r0, r22
    118e:	04 c0       	rjmp	.+8      	; 0x1198 <__umoddi3+0x186>
    1190:	22 0f       	add	r18, r18
    1192:	33 1f       	adc	r19, r19
    1194:	44 1f       	adc	r20, r20
    1196:	55 1f       	adc	r21, r21
    1198:	0a 94       	dec	r0
    119a:	d2 f7       	brpl	.-12     	; 0x1190 <__umoddi3+0x17e>
    119c:	80 e2       	ldi	r24, 0x20	; 32
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	8a 19       	sub	r24, r10
    11a2:	9b 09       	sbc	r25, r11
    11a4:	6c 96       	adiw	r28, 0x1c	; 28
    11a6:	cc ac       	ldd	r12, Y+60	; 0x3c
    11a8:	dd ac       	ldd	r13, Y+61	; 0x3d
    11aa:	ee ac       	ldd	r14, Y+62	; 0x3e
    11ac:	ff ac       	ldd	r15, Y+63	; 0x3f
    11ae:	6c 97       	sbiw	r28, 0x1c	; 28
    11b0:	04 c0       	rjmp	.+8      	; 0x11ba <__umoddi3+0x1a8>
    11b2:	f6 94       	lsr	r15
    11b4:	e7 94       	ror	r14
    11b6:	d7 94       	ror	r13
    11b8:	c7 94       	ror	r12
    11ba:	8a 95       	dec	r24
    11bc:	d2 f7       	brpl	.-12     	; 0x11b2 <__umoddi3+0x1a0>
    11be:	87 01       	movw	r16, r14
    11c0:	76 01       	movw	r14, r12
    11c2:	e2 2a       	or	r14, r18
    11c4:	f3 2a       	or	r15, r19
    11c6:	04 2b       	or	r16, r20
    11c8:	15 2b       	or	r17, r21
    11ca:	ed aa       	std	Y+53, r14	; 0x35
    11cc:	fe aa       	std	Y+54, r15	; 0x36
    11ce:	0f ab       	std	Y+55, r16	; 0x37
    11d0:	18 af       	std	Y+56, r17	; 0x38
    11d2:	6c 96       	adiw	r28, 0x1c	; 28
    11d4:	8c ad       	ldd	r24, Y+60	; 0x3c
    11d6:	9d ad       	ldd	r25, Y+61	; 0x3d
    11d8:	ae ad       	ldd	r26, Y+62	; 0x3e
    11da:	bf ad       	ldd	r27, Y+63	; 0x3f
    11dc:	6c 97       	sbiw	r28, 0x1c	; 28
    11de:	04 c0       	rjmp	.+8      	; 0x11e8 <__umoddi3+0x1d6>
    11e0:	88 0f       	add	r24, r24
    11e2:	99 1f       	adc	r25, r25
    11e4:	aa 1f       	adc	r26, r26
    11e6:	bb 1f       	adc	r27, r27
    11e8:	6a 95       	dec	r22
    11ea:	d2 f7       	brpl	.-12     	; 0x11e0 <__umoddi3+0x1ce>
    11ec:	89 ab       	std	Y+49, r24	; 0x31
    11ee:	9a ab       	std	Y+50, r25	; 0x32
    11f0:	ab ab       	std	Y+51, r26	; 0x33
    11f2:	bc ab       	std	Y+52, r27	; 0x34
    11f4:	32 01       	movw	r6, r4
    11f6:	88 24       	eor	r8, r8
    11f8:	99 24       	eor	r9, r9
    11fa:	b2 01       	movw	r22, r4
    11fc:	a1 01       	movw	r20, r2
    11fe:	60 70       	andi	r22, 0x00	; 0
    1200:	70 70       	andi	r23, 0x00	; 0
    1202:	21 96       	adiw	r28, 0x01	; 1
    1204:	4c af       	std	Y+60, r20	; 0x3c
    1206:	5d af       	std	Y+61, r21	; 0x3d
    1208:	6e af       	std	Y+62, r22	; 0x3e
    120a:	7f af       	std	Y+63, r23	; 0x3f
    120c:	21 97       	sbiw	r28, 0x01	; 1
    120e:	6d a9       	ldd	r22, Y+53	; 0x35
    1210:	7e a9       	ldd	r23, Y+54	; 0x36
    1212:	8f a9       	ldd	r24, Y+55	; 0x37
    1214:	98 ad       	ldd	r25, Y+56	; 0x38
    1216:	a4 01       	movw	r20, r8
    1218:	93 01       	movw	r18, r6
    121a:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    121e:	7b 01       	movw	r14, r22
    1220:	8c 01       	movw	r16, r24
    1222:	6d a9       	ldd	r22, Y+53	; 0x35
    1224:	7e a9       	ldd	r23, Y+54	; 0x36
    1226:	8f a9       	ldd	r24, Y+55	; 0x37
    1228:	98 ad       	ldd	r25, Y+56	; 0x38
    122a:	a4 01       	movw	r20, r8
    122c:	93 01       	movw	r18, r6
    122e:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1232:	ca 01       	movw	r24, r20
    1234:	b9 01       	movw	r22, r18
    1236:	21 96       	adiw	r28, 0x01	; 1
    1238:	2c ad       	ldd	r18, Y+60	; 0x3c
    123a:	3d ad       	ldd	r19, Y+61	; 0x3d
    123c:	4e ad       	ldd	r20, Y+62	; 0x3e
    123e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1240:	21 97       	sbiw	r28, 0x01	; 1
    1242:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1246:	9b 01       	movw	r18, r22
    1248:	ac 01       	movw	r20, r24
    124a:	87 01       	movw	r16, r14
    124c:	ff 24       	eor	r15, r15
    124e:	ee 24       	eor	r14, r14
    1250:	a9 a8       	ldd	r10, Y+49	; 0x31
    1252:	ba a8       	ldd	r11, Y+50	; 0x32
    1254:	cb a8       	ldd	r12, Y+51	; 0x33
    1256:	dc a8       	ldd	r13, Y+52	; 0x34
    1258:	c6 01       	movw	r24, r12
    125a:	aa 27       	eor	r26, r26
    125c:	bb 27       	eor	r27, r27
    125e:	57 01       	movw	r10, r14
    1260:	68 01       	movw	r12, r16
    1262:	a8 2a       	or	r10, r24
    1264:	b9 2a       	or	r11, r25
    1266:	ca 2a       	or	r12, r26
    1268:	db 2a       	or	r13, r27
    126a:	a2 16       	cp	r10, r18
    126c:	b3 06       	cpc	r11, r19
    126e:	c4 06       	cpc	r12, r20
    1270:	d5 06       	cpc	r13, r21
    1272:	90 f4       	brcc	.+36     	; 0x1298 <__umoddi3+0x286>
    1274:	a2 0c       	add	r10, r2
    1276:	b3 1c       	adc	r11, r3
    1278:	c4 1c       	adc	r12, r4
    127a:	d5 1c       	adc	r13, r5
    127c:	a2 14       	cp	r10, r2
    127e:	b3 04       	cpc	r11, r3
    1280:	c4 04       	cpc	r12, r4
    1282:	d5 04       	cpc	r13, r5
    1284:	48 f0       	brcs	.+18     	; 0x1298 <__umoddi3+0x286>
    1286:	a2 16       	cp	r10, r18
    1288:	b3 06       	cpc	r11, r19
    128a:	c4 06       	cpc	r12, r20
    128c:	d5 06       	cpc	r13, r21
    128e:	20 f4       	brcc	.+8      	; 0x1298 <__umoddi3+0x286>
    1290:	a2 0c       	add	r10, r2
    1292:	b3 1c       	adc	r11, r3
    1294:	c4 1c       	adc	r12, r4
    1296:	d5 1c       	adc	r13, r5
    1298:	a2 1a       	sub	r10, r18
    129a:	b3 0a       	sbc	r11, r19
    129c:	c4 0a       	sbc	r12, r20
    129e:	d5 0a       	sbc	r13, r21
    12a0:	c6 01       	movw	r24, r12
    12a2:	b5 01       	movw	r22, r10
    12a4:	a4 01       	movw	r20, r8
    12a6:	93 01       	movw	r18, r6
    12a8:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    12ac:	7b 01       	movw	r14, r22
    12ae:	8c 01       	movw	r16, r24
    12b0:	c6 01       	movw	r24, r12
    12b2:	b5 01       	movw	r22, r10
    12b4:	a4 01       	movw	r20, r8
    12b6:	93 01       	movw	r18, r6
    12b8:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    12bc:	ca 01       	movw	r24, r20
    12be:	b9 01       	movw	r22, r18
    12c0:	21 96       	adiw	r28, 0x01	; 1
    12c2:	2c ad       	ldd	r18, Y+60	; 0x3c
    12c4:	3d ad       	ldd	r19, Y+61	; 0x3d
    12c6:	4e ad       	ldd	r20, Y+62	; 0x3e
    12c8:	5f ad       	ldd	r21, Y+63	; 0x3f
    12ca:	21 97       	sbiw	r28, 0x01	; 1
    12cc:	ba c1       	rjmp	.+884    	; 0x1642 <__umoddi3+0x630>
    12ce:	21 14       	cp	r2, r1
    12d0:	31 04       	cpc	r3, r1
    12d2:	41 04       	cpc	r4, r1
    12d4:	51 04       	cpc	r5, r1
    12d6:	71 f4       	brne	.+28     	; 0x12f4 <__umoddi3+0x2e2>
    12d8:	61 e0       	ldi	r22, 0x01	; 1
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	40 e0       	ldi	r20, 0x00	; 0
    12e6:	50 e0       	ldi	r21, 0x00	; 0
    12e8:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    12ec:	c9 01       	movw	r24, r18
    12ee:	da 01       	movw	r26, r20
    12f0:	1c 01       	movw	r2, r24
    12f2:	2d 01       	movw	r4, r26
    12f4:	00 e0       	ldi	r16, 0x00	; 0
    12f6:	20 16       	cp	r2, r16
    12f8:	00 e0       	ldi	r16, 0x00	; 0
    12fa:	30 06       	cpc	r3, r16
    12fc:	01 e0       	ldi	r16, 0x01	; 1
    12fe:	40 06       	cpc	r4, r16
    1300:	00 e0       	ldi	r16, 0x00	; 0
    1302:	50 06       	cpc	r5, r16
    1304:	88 f4       	brcc	.+34     	; 0x1328 <__umoddi3+0x316>
    1306:	1f ef       	ldi	r17, 0xFF	; 255
    1308:	21 16       	cp	r2, r17
    130a:	31 04       	cpc	r3, r1
    130c:	41 04       	cpc	r4, r1
    130e:	51 04       	cpc	r5, r1
    1310:	39 f0       	breq	.+14     	; 0x1320 <__umoddi3+0x30e>
    1312:	30 f0       	brcs	.+12     	; 0x1320 <__umoddi3+0x30e>
    1314:	68 e0       	ldi	r22, 0x08	; 8
    1316:	e6 2e       	mov	r14, r22
    1318:	f1 2c       	mov	r15, r1
    131a:	01 2d       	mov	r16, r1
    131c:	11 2d       	mov	r17, r1
    131e:	18 c0       	rjmp	.+48     	; 0x1350 <__umoddi3+0x33e>
    1320:	ee 24       	eor	r14, r14
    1322:	ff 24       	eor	r15, r15
    1324:	87 01       	movw	r16, r14
    1326:	14 c0       	rjmp	.+40     	; 0x1350 <__umoddi3+0x33e>
    1328:	40 e0       	ldi	r20, 0x00	; 0
    132a:	24 16       	cp	r2, r20
    132c:	40 e0       	ldi	r20, 0x00	; 0
    132e:	34 06       	cpc	r3, r20
    1330:	40 e0       	ldi	r20, 0x00	; 0
    1332:	44 06       	cpc	r4, r20
    1334:	41 e0       	ldi	r20, 0x01	; 1
    1336:	54 06       	cpc	r5, r20
    1338:	30 f0       	brcs	.+12     	; 0x1346 <__umoddi3+0x334>
    133a:	58 e1       	ldi	r21, 0x18	; 24
    133c:	e5 2e       	mov	r14, r21
    133e:	f1 2c       	mov	r15, r1
    1340:	01 2d       	mov	r16, r1
    1342:	11 2d       	mov	r17, r1
    1344:	05 c0       	rjmp	.+10     	; 0x1350 <__umoddi3+0x33e>
    1346:	40 e1       	ldi	r20, 0x10	; 16
    1348:	e4 2e       	mov	r14, r20
    134a:	f1 2c       	mov	r15, r1
    134c:	01 2d       	mov	r16, r1
    134e:	11 2d       	mov	r17, r1
    1350:	d2 01       	movw	r26, r4
    1352:	c1 01       	movw	r24, r2
    1354:	0e 2c       	mov	r0, r14
    1356:	04 c0       	rjmp	.+8      	; 0x1360 <__umoddi3+0x34e>
    1358:	b6 95       	lsr	r27
    135a:	a7 95       	ror	r26
    135c:	97 95       	ror	r25
    135e:	87 95       	ror	r24
    1360:	0a 94       	dec	r0
    1362:	d2 f7       	brpl	.-12     	; 0x1358 <__umoddi3+0x346>
    1364:	85 57       	subi	r24, 0x75	; 117
    1366:	9f 4f       	sbci	r25, 0xFF	; 255
    1368:	dc 01       	movw	r26, r24
    136a:	2c 91       	ld	r18, X
    136c:	30 e2       	ldi	r19, 0x20	; 32
    136e:	a3 2e       	mov	r10, r19
    1370:	b1 2c       	mov	r11, r1
    1372:	c1 2c       	mov	r12, r1
    1374:	d1 2c       	mov	r13, r1
    1376:	d6 01       	movw	r26, r12
    1378:	c5 01       	movw	r24, r10
    137a:	8e 19       	sub	r24, r14
    137c:	9f 09       	sbc	r25, r15
    137e:	a0 0b       	sbc	r26, r16
    1380:	b1 0b       	sbc	r27, r17
    1382:	7c 01       	movw	r14, r24
    1384:	8d 01       	movw	r16, r26
    1386:	e2 1a       	sub	r14, r18
    1388:	f1 08       	sbc	r15, r1
    138a:	01 09       	sbc	r16, r1
    138c:	11 09       	sbc	r17, r1
    138e:	e9 ae       	std	Y+57, r14	; 0x39
    1390:	fa ae       	std	Y+58, r15	; 0x3a
    1392:	0b af       	std	Y+59, r16	; 0x3b
    1394:	1c af       	std	Y+60, r17	; 0x3c
    1396:	e1 14       	cp	r14, r1
    1398:	f1 04       	cpc	r15, r1
    139a:	01 05       	cpc	r16, r1
    139c:	11 05       	cpc	r17, r1
    139e:	39 f4       	brne	.+14     	; 0x13ae <__umoddi3+0x39c>
    13a0:	64 01       	movw	r12, r8
    13a2:	53 01       	movw	r10, r6
    13a4:	a2 18       	sub	r10, r2
    13a6:	b3 08       	sbc	r11, r3
    13a8:	c4 08       	sbc	r12, r4
    13aa:	d5 08       	sbc	r13, r5
    13ac:	e2 c0       	rjmp	.+452    	; 0x1572 <__umoddi3+0x560>
    13ae:	f9 ac       	ldd	r15, Y+57	; 0x39
    13b0:	68 96       	adiw	r28, 0x18	; 24
    13b2:	ff ae       	std	Y+63, r15	; 0x3f
    13b4:	68 97       	sbiw	r28, 0x18	; 24
    13b6:	0f 2c       	mov	r0, r15
    13b8:	04 c0       	rjmp	.+8      	; 0x13c2 <__umoddi3+0x3b0>
    13ba:	22 0c       	add	r2, r2
    13bc:	33 1c       	adc	r3, r3
    13be:	44 1c       	adc	r4, r4
    13c0:	55 1c       	adc	r5, r5
    13c2:	0a 94       	dec	r0
    13c4:	d2 f7       	brpl	.-12     	; 0x13ba <__umoddi3+0x3a8>
    13c6:	8a 2d       	mov	r24, r10
    13c8:	8f 19       	sub	r24, r15
    13ca:	64 01       	movw	r12, r8
    13cc:	53 01       	movw	r10, r6
    13ce:	08 2e       	mov	r0, r24
    13d0:	04 c0       	rjmp	.+8      	; 0x13da <__umoddi3+0x3c8>
    13d2:	d6 94       	lsr	r13
    13d4:	c7 94       	ror	r12
    13d6:	b7 94       	ror	r11
    13d8:	a7 94       	ror	r10
    13da:	0a 94       	dec	r0
    13dc:	d2 f7       	brpl	.-12     	; 0x13d2 <__umoddi3+0x3c0>
    13de:	a4 01       	movw	r20, r8
    13e0:	93 01       	movw	r18, r6
    13e2:	04 c0       	rjmp	.+8      	; 0x13ec <__umoddi3+0x3da>
    13e4:	22 0f       	add	r18, r18
    13e6:	33 1f       	adc	r19, r19
    13e8:	44 1f       	adc	r20, r20
    13ea:	55 1f       	adc	r21, r21
    13ec:	fa 94       	dec	r15
    13ee:	d2 f7       	brpl	.-12     	; 0x13e4 <__umoddi3+0x3d2>
    13f0:	6c 96       	adiw	r28, 0x1c	; 28
    13f2:	6c ac       	ldd	r6, Y+60	; 0x3c
    13f4:	7d ac       	ldd	r7, Y+61	; 0x3d
    13f6:	8e ac       	ldd	r8, Y+62	; 0x3e
    13f8:	9f ac       	ldd	r9, Y+63	; 0x3f
    13fa:	6c 97       	sbiw	r28, 0x1c	; 28
    13fc:	04 c0       	rjmp	.+8      	; 0x1406 <__umoddi3+0x3f4>
    13fe:	96 94       	lsr	r9
    1400:	87 94       	ror	r8
    1402:	77 94       	ror	r7
    1404:	67 94       	ror	r6
    1406:	8a 95       	dec	r24
    1408:	d2 f7       	brpl	.-12     	; 0x13fe <__umoddi3+0x3ec>
    140a:	84 01       	movw	r16, r8
    140c:	73 01       	movw	r14, r6
    140e:	e2 2a       	or	r14, r18
    1410:	f3 2a       	or	r15, r19
    1412:	04 2b       	or	r16, r20
    1414:	15 2b       	or	r17, r21
    1416:	ed a6       	std	Y+45, r14	; 0x2d
    1418:	fe a6       	std	Y+46, r15	; 0x2e
    141a:	0f a7       	std	Y+47, r16	; 0x2f
    141c:	18 ab       	std	Y+48, r17	; 0x30
    141e:	32 01       	movw	r6, r4
    1420:	88 24       	eor	r8, r8
    1422:	99 24       	eor	r9, r9
    1424:	b2 01       	movw	r22, r4
    1426:	a1 01       	movw	r20, r2
    1428:	60 70       	andi	r22, 0x00	; 0
    142a:	70 70       	andi	r23, 0x00	; 0
    142c:	25 96       	adiw	r28, 0x05	; 5
    142e:	4c af       	std	Y+60, r20	; 0x3c
    1430:	5d af       	std	Y+61, r21	; 0x3d
    1432:	6e af       	std	Y+62, r22	; 0x3e
    1434:	7f af       	std	Y+63, r23	; 0x3f
    1436:	25 97       	sbiw	r28, 0x05	; 5
    1438:	c6 01       	movw	r24, r12
    143a:	b5 01       	movw	r22, r10
    143c:	a4 01       	movw	r20, r8
    143e:	93 01       	movw	r18, r6
    1440:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1444:	7b 01       	movw	r14, r22
    1446:	8c 01       	movw	r16, r24
    1448:	c6 01       	movw	r24, r12
    144a:	b5 01       	movw	r22, r10
    144c:	a4 01       	movw	r20, r8
    144e:	93 01       	movw	r18, r6
    1450:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1454:	ca 01       	movw	r24, r20
    1456:	b9 01       	movw	r22, r18
    1458:	25 96       	adiw	r28, 0x05	; 5
    145a:	2c ad       	ldd	r18, Y+60	; 0x3c
    145c:	3d ad       	ldd	r19, Y+61	; 0x3d
    145e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1460:	5f ad       	ldd	r21, Y+63	; 0x3f
    1462:	25 97       	sbiw	r28, 0x05	; 5
    1464:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1468:	9b 01       	movw	r18, r22
    146a:	ac 01       	movw	r20, r24
    146c:	87 01       	movw	r16, r14
    146e:	ff 24       	eor	r15, r15
    1470:	ee 24       	eor	r14, r14
    1472:	ad a4       	ldd	r10, Y+45	; 0x2d
    1474:	be a4       	ldd	r11, Y+46	; 0x2e
    1476:	cf a4       	ldd	r12, Y+47	; 0x2f
    1478:	d8 a8       	ldd	r13, Y+48	; 0x30
    147a:	c6 01       	movw	r24, r12
    147c:	aa 27       	eor	r26, r26
    147e:	bb 27       	eor	r27, r27
    1480:	5c 01       	movw	r10, r24
    1482:	6d 01       	movw	r12, r26
    1484:	ae 28       	or	r10, r14
    1486:	bf 28       	or	r11, r15
    1488:	c0 2a       	or	r12, r16
    148a:	d1 2a       	or	r13, r17
    148c:	a2 16       	cp	r10, r18
    148e:	b3 06       	cpc	r11, r19
    1490:	c4 06       	cpc	r12, r20
    1492:	d5 06       	cpc	r13, r21
    1494:	90 f4       	brcc	.+36     	; 0x14ba <__umoddi3+0x4a8>
    1496:	a2 0c       	add	r10, r2
    1498:	b3 1c       	adc	r11, r3
    149a:	c4 1c       	adc	r12, r4
    149c:	d5 1c       	adc	r13, r5
    149e:	a2 14       	cp	r10, r2
    14a0:	b3 04       	cpc	r11, r3
    14a2:	c4 04       	cpc	r12, r4
    14a4:	d5 04       	cpc	r13, r5
    14a6:	48 f0       	brcs	.+18     	; 0x14ba <__umoddi3+0x4a8>
    14a8:	a2 16       	cp	r10, r18
    14aa:	b3 06       	cpc	r11, r19
    14ac:	c4 06       	cpc	r12, r20
    14ae:	d5 06       	cpc	r13, r21
    14b0:	20 f4       	brcc	.+8      	; 0x14ba <__umoddi3+0x4a8>
    14b2:	a2 0c       	add	r10, r2
    14b4:	b3 1c       	adc	r11, r3
    14b6:	c4 1c       	adc	r12, r4
    14b8:	d5 1c       	adc	r13, r5
    14ba:	a2 1a       	sub	r10, r18
    14bc:	b3 0a       	sbc	r11, r19
    14be:	c4 0a       	sbc	r12, r20
    14c0:	d5 0a       	sbc	r13, r21
    14c2:	c6 01       	movw	r24, r12
    14c4:	b5 01       	movw	r22, r10
    14c6:	a4 01       	movw	r20, r8
    14c8:	93 01       	movw	r18, r6
    14ca:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    14ce:	7b 01       	movw	r14, r22
    14d0:	8c 01       	movw	r16, r24
    14d2:	c6 01       	movw	r24, r12
    14d4:	b5 01       	movw	r22, r10
    14d6:	a4 01       	movw	r20, r8
    14d8:	93 01       	movw	r18, r6
    14da:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    14de:	ca 01       	movw	r24, r20
    14e0:	b9 01       	movw	r22, r18
    14e2:	25 96       	adiw	r28, 0x05	; 5
    14e4:	2c ad       	ldd	r18, Y+60	; 0x3c
    14e6:	3d ad       	ldd	r19, Y+61	; 0x3d
    14e8:	4e ad       	ldd	r20, Y+62	; 0x3e
    14ea:	5f ad       	ldd	r21, Y+63	; 0x3f
    14ec:	25 97       	sbiw	r28, 0x05	; 5
    14ee:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    14f2:	9b 01       	movw	r18, r22
    14f4:	ac 01       	movw	r20, r24
    14f6:	87 01       	movw	r16, r14
    14f8:	ff 24       	eor	r15, r15
    14fa:	ee 24       	eor	r14, r14
    14fc:	8d a5       	ldd	r24, Y+45	; 0x2d
    14fe:	9e a5       	ldd	r25, Y+46	; 0x2e
    1500:	af a5       	ldd	r26, Y+47	; 0x2f
    1502:	b8 a9       	ldd	r27, Y+48	; 0x30
    1504:	a0 70       	andi	r26, 0x00	; 0
    1506:	b0 70       	andi	r27, 0x00	; 0
    1508:	57 01       	movw	r10, r14
    150a:	68 01       	movw	r12, r16
    150c:	a8 2a       	or	r10, r24
    150e:	b9 2a       	or	r11, r25
    1510:	ca 2a       	or	r12, r26
    1512:	db 2a       	or	r13, r27
    1514:	a2 16       	cp	r10, r18
    1516:	b3 06       	cpc	r11, r19
    1518:	c4 06       	cpc	r12, r20
    151a:	d5 06       	cpc	r13, r21
    151c:	90 f4       	brcc	.+36     	; 0x1542 <__umoddi3+0x530>
    151e:	a2 0c       	add	r10, r2
    1520:	b3 1c       	adc	r11, r3
    1522:	c4 1c       	adc	r12, r4
    1524:	d5 1c       	adc	r13, r5
    1526:	a2 14       	cp	r10, r2
    1528:	b3 04       	cpc	r11, r3
    152a:	c4 04       	cpc	r12, r4
    152c:	d5 04       	cpc	r13, r5
    152e:	48 f0       	brcs	.+18     	; 0x1542 <__umoddi3+0x530>
    1530:	a2 16       	cp	r10, r18
    1532:	b3 06       	cpc	r11, r19
    1534:	c4 06       	cpc	r12, r20
    1536:	d5 06       	cpc	r13, r21
    1538:	20 f4       	brcc	.+8      	; 0x1542 <__umoddi3+0x530>
    153a:	a2 0c       	add	r10, r2
    153c:	b3 1c       	adc	r11, r3
    153e:	c4 1c       	adc	r12, r4
    1540:	d5 1c       	adc	r13, r5
    1542:	6c 96       	adiw	r28, 0x1c	; 28
    1544:	ec ac       	ldd	r14, Y+60	; 0x3c
    1546:	fd ac       	ldd	r15, Y+61	; 0x3d
    1548:	0e ad       	ldd	r16, Y+62	; 0x3e
    154a:	1f ad       	ldd	r17, Y+63	; 0x3f
    154c:	6c 97       	sbiw	r28, 0x1c	; 28
    154e:	68 96       	adiw	r28, 0x18	; 24
    1550:	0f ac       	ldd	r0, Y+63	; 0x3f
    1552:	68 97       	sbiw	r28, 0x18	; 24
    1554:	04 c0       	rjmp	.+8      	; 0x155e <__umoddi3+0x54c>
    1556:	ee 0c       	add	r14, r14
    1558:	ff 1c       	adc	r15, r15
    155a:	00 1f       	adc	r16, r16
    155c:	11 1f       	adc	r17, r17
    155e:	0a 94       	dec	r0
    1560:	d2 f7       	brpl	.-12     	; 0x1556 <__umoddi3+0x544>
    1562:	e9 aa       	std	Y+49, r14	; 0x31
    1564:	fa aa       	std	Y+50, r15	; 0x32
    1566:	0b ab       	std	Y+51, r16	; 0x33
    1568:	1c ab       	std	Y+52, r17	; 0x34
    156a:	a2 1a       	sub	r10, r18
    156c:	b3 0a       	sbc	r11, r19
    156e:	c4 0a       	sbc	r12, r20
    1570:	d5 0a       	sbc	r13, r21
    1572:	32 01       	movw	r6, r4
    1574:	88 24       	eor	r8, r8
    1576:	99 24       	eor	r9, r9
    1578:	b2 01       	movw	r22, r4
    157a:	a1 01       	movw	r20, r2
    157c:	60 70       	andi	r22, 0x00	; 0
    157e:	70 70       	andi	r23, 0x00	; 0
    1580:	29 96       	adiw	r28, 0x09	; 9
    1582:	4c af       	std	Y+60, r20	; 0x3c
    1584:	5d af       	std	Y+61, r21	; 0x3d
    1586:	6e af       	std	Y+62, r22	; 0x3e
    1588:	7f af       	std	Y+63, r23	; 0x3f
    158a:	29 97       	sbiw	r28, 0x09	; 9
    158c:	c6 01       	movw	r24, r12
    158e:	b5 01       	movw	r22, r10
    1590:	a4 01       	movw	r20, r8
    1592:	93 01       	movw	r18, r6
    1594:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1598:	7b 01       	movw	r14, r22
    159a:	8c 01       	movw	r16, r24
    159c:	c6 01       	movw	r24, r12
    159e:	b5 01       	movw	r22, r10
    15a0:	a4 01       	movw	r20, r8
    15a2:	93 01       	movw	r18, r6
    15a4:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    15a8:	ca 01       	movw	r24, r20
    15aa:	b9 01       	movw	r22, r18
    15ac:	29 96       	adiw	r28, 0x09	; 9
    15ae:	2c ad       	ldd	r18, Y+60	; 0x3c
    15b0:	3d ad       	ldd	r19, Y+61	; 0x3d
    15b2:	4e ad       	ldd	r20, Y+62	; 0x3e
    15b4:	5f ad       	ldd	r21, Y+63	; 0x3f
    15b6:	29 97       	sbiw	r28, 0x09	; 9
    15b8:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    15bc:	9b 01       	movw	r18, r22
    15be:	ac 01       	movw	r20, r24
    15c0:	87 01       	movw	r16, r14
    15c2:	ff 24       	eor	r15, r15
    15c4:	ee 24       	eor	r14, r14
    15c6:	a9 a8       	ldd	r10, Y+49	; 0x31
    15c8:	ba a8       	ldd	r11, Y+50	; 0x32
    15ca:	cb a8       	ldd	r12, Y+51	; 0x33
    15cc:	dc a8       	ldd	r13, Y+52	; 0x34
    15ce:	c6 01       	movw	r24, r12
    15d0:	aa 27       	eor	r26, r26
    15d2:	bb 27       	eor	r27, r27
    15d4:	57 01       	movw	r10, r14
    15d6:	68 01       	movw	r12, r16
    15d8:	a8 2a       	or	r10, r24
    15da:	b9 2a       	or	r11, r25
    15dc:	ca 2a       	or	r12, r26
    15de:	db 2a       	or	r13, r27
    15e0:	a2 16       	cp	r10, r18
    15e2:	b3 06       	cpc	r11, r19
    15e4:	c4 06       	cpc	r12, r20
    15e6:	d5 06       	cpc	r13, r21
    15e8:	90 f4       	brcc	.+36     	; 0x160e <__umoddi3+0x5fc>
    15ea:	a2 0c       	add	r10, r2
    15ec:	b3 1c       	adc	r11, r3
    15ee:	c4 1c       	adc	r12, r4
    15f0:	d5 1c       	adc	r13, r5
    15f2:	a2 14       	cp	r10, r2
    15f4:	b3 04       	cpc	r11, r3
    15f6:	c4 04       	cpc	r12, r4
    15f8:	d5 04       	cpc	r13, r5
    15fa:	48 f0       	brcs	.+18     	; 0x160e <__umoddi3+0x5fc>
    15fc:	a2 16       	cp	r10, r18
    15fe:	b3 06       	cpc	r11, r19
    1600:	c4 06       	cpc	r12, r20
    1602:	d5 06       	cpc	r13, r21
    1604:	20 f4       	brcc	.+8      	; 0x160e <__umoddi3+0x5fc>
    1606:	a2 0c       	add	r10, r2
    1608:	b3 1c       	adc	r11, r3
    160a:	c4 1c       	adc	r12, r4
    160c:	d5 1c       	adc	r13, r5
    160e:	a2 1a       	sub	r10, r18
    1610:	b3 0a       	sbc	r11, r19
    1612:	c4 0a       	sbc	r12, r20
    1614:	d5 0a       	sbc	r13, r21
    1616:	c6 01       	movw	r24, r12
    1618:	b5 01       	movw	r22, r10
    161a:	a4 01       	movw	r20, r8
    161c:	93 01       	movw	r18, r6
    161e:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1622:	7b 01       	movw	r14, r22
    1624:	8c 01       	movw	r16, r24
    1626:	c6 01       	movw	r24, r12
    1628:	b5 01       	movw	r22, r10
    162a:	a4 01       	movw	r20, r8
    162c:	93 01       	movw	r18, r6
    162e:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1632:	ca 01       	movw	r24, r20
    1634:	b9 01       	movw	r22, r18
    1636:	29 96       	adiw	r28, 0x09	; 9
    1638:	2c ad       	ldd	r18, Y+60	; 0x3c
    163a:	3d ad       	ldd	r19, Y+61	; 0x3d
    163c:	4e ad       	ldd	r20, Y+62	; 0x3e
    163e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1640:	29 97       	sbiw	r28, 0x09	; 9
    1642:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1646:	9b 01       	movw	r18, r22
    1648:	ac 01       	movw	r20, r24
    164a:	87 01       	movw	r16, r14
    164c:	ff 24       	eor	r15, r15
    164e:	ee 24       	eor	r14, r14
    1650:	89 a9       	ldd	r24, Y+49	; 0x31
    1652:	9a a9       	ldd	r25, Y+50	; 0x32
    1654:	ab a9       	ldd	r26, Y+51	; 0x33
    1656:	bc a9       	ldd	r27, Y+52	; 0x34
    1658:	a0 70       	andi	r26, 0x00	; 0
    165a:	b0 70       	andi	r27, 0x00	; 0
    165c:	e8 2a       	or	r14, r24
    165e:	f9 2a       	or	r15, r25
    1660:	0a 2b       	or	r16, r26
    1662:	1b 2b       	or	r17, r27
    1664:	e2 16       	cp	r14, r18
    1666:	f3 06       	cpc	r15, r19
    1668:	04 07       	cpc	r16, r20
    166a:	15 07       	cpc	r17, r21
    166c:	90 f4       	brcc	.+36     	; 0x1692 <__umoddi3+0x680>
    166e:	e2 0c       	add	r14, r2
    1670:	f3 1c       	adc	r15, r3
    1672:	04 1d       	adc	r16, r4
    1674:	15 1d       	adc	r17, r5
    1676:	e2 14       	cp	r14, r2
    1678:	f3 04       	cpc	r15, r3
    167a:	04 05       	cpc	r16, r4
    167c:	15 05       	cpc	r17, r5
    167e:	48 f0       	brcs	.+18     	; 0x1692 <__umoddi3+0x680>
    1680:	e2 16       	cp	r14, r18
    1682:	f3 06       	cpc	r15, r19
    1684:	04 07       	cpc	r16, r20
    1686:	15 07       	cpc	r17, r21
    1688:	20 f4       	brcc	.+8      	; 0x1692 <__umoddi3+0x680>
    168a:	e2 0c       	add	r14, r2
    168c:	f3 1c       	adc	r15, r3
    168e:	04 1d       	adc	r16, r4
    1690:	15 1d       	adc	r17, r5
    1692:	e2 1a       	sub	r14, r18
    1694:	f3 0a       	sbc	r15, r19
    1696:	04 0b       	sbc	r16, r20
    1698:	15 0b       	sbc	r17, r21
    169a:	d8 01       	movw	r26, r16
    169c:	c7 01       	movw	r24, r14
    169e:	09 ac       	ldd	r0, Y+57	; 0x39
    16a0:	04 c0       	rjmp	.+8      	; 0x16aa <__umoddi3+0x698>
    16a2:	b6 95       	lsr	r27
    16a4:	a7 95       	ror	r26
    16a6:	97 95       	ror	r25
    16a8:	87 95       	ror	r24
    16aa:	0a 94       	dec	r0
    16ac:	d2 f7       	brpl	.-12     	; 0x16a2 <__umoddi3+0x690>
    16ae:	89 8b       	std	Y+17, r24	; 0x11
    16b0:	9a 8b       	std	Y+18, r25	; 0x12
    16b2:	ab 8b       	std	Y+19, r26	; 0x13
    16b4:	bc 8b       	std	Y+20, r27	; 0x14
    16b6:	1d 8a       	std	Y+21, r1	; 0x15
    16b8:	1e 8a       	std	Y+22, r1	; 0x16
    16ba:	1f 8a       	std	Y+23, r1	; 0x17
    16bc:	18 8e       	std	Y+24, r1	; 0x18
    16be:	28 2f       	mov	r18, r24
    16c0:	3a 89       	ldd	r19, Y+18	; 0x12
    16c2:	4b 89       	ldd	r20, Y+19	; 0x13
    16c4:	5c 89       	ldd	r21, Y+20	; 0x14
    16c6:	6d 89       	ldd	r22, Y+21	; 0x15
    16c8:	0c c3       	rjmp	.+1560   	; 0x1ce2 <__umoddi3+0xcd0>
    16ca:	6a 14       	cp	r6, r10
    16cc:	7b 04       	cpc	r7, r11
    16ce:	8c 04       	cpc	r8, r12
    16d0:	9d 04       	cpc	r9, r13
    16d2:	08 f4       	brcc	.+2      	; 0x16d6 <__umoddi3+0x6c4>
    16d4:	09 c3       	rjmp	.+1554   	; 0x1ce8 <__umoddi3+0xcd6>
    16d6:	00 e0       	ldi	r16, 0x00	; 0
    16d8:	a0 16       	cp	r10, r16
    16da:	00 e0       	ldi	r16, 0x00	; 0
    16dc:	b0 06       	cpc	r11, r16
    16de:	01 e0       	ldi	r16, 0x01	; 1
    16e0:	c0 06       	cpc	r12, r16
    16e2:	00 e0       	ldi	r16, 0x00	; 0
    16e4:	d0 06       	cpc	r13, r16
    16e6:	88 f4       	brcc	.+34     	; 0x170a <__umoddi3+0x6f8>
    16e8:	1f ef       	ldi	r17, 0xFF	; 255
    16ea:	a1 16       	cp	r10, r17
    16ec:	b1 04       	cpc	r11, r1
    16ee:	c1 04       	cpc	r12, r1
    16f0:	d1 04       	cpc	r13, r1
    16f2:	39 f0       	breq	.+14     	; 0x1702 <__umoddi3+0x6f0>
    16f4:	30 f0       	brcs	.+12     	; 0x1702 <__umoddi3+0x6f0>
    16f6:	28 e0       	ldi	r18, 0x08	; 8
    16f8:	e2 2e       	mov	r14, r18
    16fa:	f1 2c       	mov	r15, r1
    16fc:	01 2d       	mov	r16, r1
    16fe:	11 2d       	mov	r17, r1
    1700:	18 c0       	rjmp	.+48     	; 0x1732 <__umoddi3+0x720>
    1702:	ee 24       	eor	r14, r14
    1704:	ff 24       	eor	r15, r15
    1706:	87 01       	movw	r16, r14
    1708:	14 c0       	rjmp	.+40     	; 0x1732 <__umoddi3+0x720>
    170a:	40 e0       	ldi	r20, 0x00	; 0
    170c:	a4 16       	cp	r10, r20
    170e:	40 e0       	ldi	r20, 0x00	; 0
    1710:	b4 06       	cpc	r11, r20
    1712:	40 e0       	ldi	r20, 0x00	; 0
    1714:	c4 06       	cpc	r12, r20
    1716:	41 e0       	ldi	r20, 0x01	; 1
    1718:	d4 06       	cpc	r13, r20
    171a:	30 f0       	brcs	.+12     	; 0x1728 <__umoddi3+0x716>
    171c:	98 e1       	ldi	r25, 0x18	; 24
    171e:	e9 2e       	mov	r14, r25
    1720:	f1 2c       	mov	r15, r1
    1722:	01 2d       	mov	r16, r1
    1724:	11 2d       	mov	r17, r1
    1726:	05 c0       	rjmp	.+10     	; 0x1732 <__umoddi3+0x720>
    1728:	80 e1       	ldi	r24, 0x10	; 16
    172a:	e8 2e       	mov	r14, r24
    172c:	f1 2c       	mov	r15, r1
    172e:	01 2d       	mov	r16, r1
    1730:	11 2d       	mov	r17, r1
    1732:	d6 01       	movw	r26, r12
    1734:	c5 01       	movw	r24, r10
    1736:	0e 2c       	mov	r0, r14
    1738:	04 c0       	rjmp	.+8      	; 0x1742 <__umoddi3+0x730>
    173a:	b6 95       	lsr	r27
    173c:	a7 95       	ror	r26
    173e:	97 95       	ror	r25
    1740:	87 95       	ror	r24
    1742:	0a 94       	dec	r0
    1744:	d2 f7       	brpl	.-12     	; 0x173a <__umoddi3+0x728>
    1746:	85 57       	subi	r24, 0x75	; 117
    1748:	9f 4f       	sbci	r25, 0xFF	; 255
    174a:	dc 01       	movw	r26, r24
    174c:	2c 91       	ld	r18, X
    174e:	80 e2       	ldi	r24, 0x20	; 32
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	a0 e0       	ldi	r26, 0x00	; 0
    1754:	b0 e0       	ldi	r27, 0x00	; 0
    1756:	8e 19       	sub	r24, r14
    1758:	9f 09       	sbc	r25, r15
    175a:	a0 0b       	sbc	r26, r16
    175c:	b1 0b       	sbc	r27, r17
    175e:	82 1b       	sub	r24, r18
    1760:	91 09       	sbc	r25, r1
    1762:	a1 09       	sbc	r26, r1
    1764:	b1 09       	sbc	r27, r1
    1766:	00 97       	sbiw	r24, 0x00	; 0
    1768:	a1 05       	cpc	r26, r1
    176a:	b1 05       	cpc	r27, r1
    176c:	09 f0       	breq	.+2      	; 0x1770 <__umoddi3+0x75e>
    176e:	4f c0       	rjmp	.+158    	; 0x180e <__umoddi3+0x7fc>
    1770:	a6 14       	cp	r10, r6
    1772:	b7 04       	cpc	r11, r7
    1774:	c8 04       	cpc	r12, r8
    1776:	d9 04       	cpc	r13, r9
    1778:	58 f0       	brcs	.+22     	; 0x1790 <__umoddi3+0x77e>
    177a:	6c 96       	adiw	r28, 0x1c	; 28
    177c:	ec ac       	ldd	r14, Y+60	; 0x3c
    177e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1780:	0e ad       	ldd	r16, Y+62	; 0x3e
    1782:	1f ad       	ldd	r17, Y+63	; 0x3f
    1784:	6c 97       	sbiw	r28, 0x1c	; 28
    1786:	e2 14       	cp	r14, r2
    1788:	f3 04       	cpc	r15, r3
    178a:	04 05       	cpc	r16, r4
    178c:	15 05       	cpc	r17, r5
    178e:	68 f1       	brcs	.+90     	; 0x17ea <__umoddi3+0x7d8>
    1790:	6c 96       	adiw	r28, 0x1c	; 28
    1792:	ec ac       	ldd	r14, Y+60	; 0x3c
    1794:	fd ac       	ldd	r15, Y+61	; 0x3d
    1796:	0e ad       	ldd	r16, Y+62	; 0x3e
    1798:	1f ad       	ldd	r17, Y+63	; 0x3f
    179a:	6c 97       	sbiw	r28, 0x1c	; 28
    179c:	e2 18       	sub	r14, r2
    179e:	f3 08       	sbc	r15, r3
    17a0:	04 09       	sbc	r16, r4
    17a2:	15 09       	sbc	r17, r5
    17a4:	a4 01       	movw	r20, r8
    17a6:	93 01       	movw	r18, r6
    17a8:	2a 19       	sub	r18, r10
    17aa:	3b 09       	sbc	r19, r11
    17ac:	4c 09       	sbc	r20, r12
    17ae:	5d 09       	sbc	r21, r13
    17b0:	aa 24       	eor	r10, r10
    17b2:	bb 24       	eor	r11, r11
    17b4:	65 01       	movw	r12, r10
    17b6:	6c 96       	adiw	r28, 0x1c	; 28
    17b8:	6c ad       	ldd	r22, Y+60	; 0x3c
    17ba:	7d ad       	ldd	r23, Y+61	; 0x3d
    17bc:	8e ad       	ldd	r24, Y+62	; 0x3e
    17be:	9f ad       	ldd	r25, Y+63	; 0x3f
    17c0:	6c 97       	sbiw	r28, 0x1c	; 28
    17c2:	6e 15       	cp	r22, r14
    17c4:	7f 05       	cpc	r23, r15
    17c6:	80 07       	cpc	r24, r16
    17c8:	91 07       	cpc	r25, r17
    17ca:	28 f4       	brcc	.+10     	; 0x17d6 <__umoddi3+0x7c4>
    17cc:	b1 e0       	ldi	r27, 0x01	; 1
    17ce:	ab 2e       	mov	r10, r27
    17d0:	b1 2c       	mov	r11, r1
    17d2:	c1 2c       	mov	r12, r1
    17d4:	d1 2c       	mov	r13, r1
    17d6:	da 01       	movw	r26, r20
    17d8:	c9 01       	movw	r24, r18
    17da:	8a 19       	sub	r24, r10
    17dc:	9b 09       	sbc	r25, r11
    17de:	ac 09       	sbc	r26, r12
    17e0:	bd 09       	sbc	r27, r13
    17e2:	8d ab       	std	Y+53, r24	; 0x35
    17e4:	9e ab       	std	Y+54, r25	; 0x36
    17e6:	af ab       	std	Y+55, r26	; 0x37
    17e8:	b8 af       	std	Y+56, r27	; 0x38
    17ea:	e9 8a       	std	Y+17, r14	; 0x11
    17ec:	fa 8a       	std	Y+18, r15	; 0x12
    17ee:	0b 8b       	std	Y+19, r16	; 0x13
    17f0:	1c 8b       	std	Y+20, r17	; 0x14
    17f2:	6d a8       	ldd	r6, Y+53	; 0x35
    17f4:	7e a8       	ldd	r7, Y+54	; 0x36
    17f6:	8f a8       	ldd	r8, Y+55	; 0x37
    17f8:	98 ac       	ldd	r9, Y+56	; 0x38
    17fa:	6d 8a       	std	Y+21, r6	; 0x15
    17fc:	7e 8a       	std	Y+22, r7	; 0x16
    17fe:	8f 8a       	std	Y+23, r8	; 0x17
    1800:	98 8e       	std	Y+24, r9	; 0x18
    1802:	2e 2d       	mov	r18, r14
    1804:	3a 89       	ldd	r19, Y+18	; 0x12
    1806:	4b 89       	ldd	r20, Y+19	; 0x13
    1808:	5c 89       	ldd	r21, Y+20	; 0x14
    180a:	6d a9       	ldd	r22, Y+53	; 0x35
    180c:	6a c2       	rjmp	.+1236   	; 0x1ce2 <__umoddi3+0xcd0>
    180e:	67 96       	adiw	r28, 0x17	; 23
    1810:	8f af       	std	Y+63, r24	; 0x3f
    1812:	67 97       	sbiw	r28, 0x17	; 23
    1814:	a6 01       	movw	r20, r12
    1816:	95 01       	movw	r18, r10
    1818:	08 2e       	mov	r0, r24
    181a:	04 c0       	rjmp	.+8      	; 0x1824 <__umoddi3+0x812>
    181c:	22 0f       	add	r18, r18
    181e:	33 1f       	adc	r19, r19
    1820:	44 1f       	adc	r20, r20
    1822:	55 1f       	adc	r21, r21
    1824:	0a 94       	dec	r0
    1826:	d2 f7       	brpl	.-12     	; 0x181c <__umoddi3+0x80a>
    1828:	a0 e2       	ldi	r26, 0x20	; 32
    182a:	aa 2e       	mov	r10, r26
    182c:	a8 1a       	sub	r10, r24
    182e:	66 96       	adiw	r28, 0x16	; 22
    1830:	af ae       	std	Y+63, r10	; 0x3f
    1832:	66 97       	sbiw	r28, 0x16	; 22
    1834:	d2 01       	movw	r26, r4
    1836:	c1 01       	movw	r24, r2
    1838:	04 c0       	rjmp	.+8      	; 0x1842 <__umoddi3+0x830>
    183a:	b6 95       	lsr	r27
    183c:	a7 95       	ror	r26
    183e:	97 95       	ror	r25
    1840:	87 95       	ror	r24
    1842:	aa 94       	dec	r10
    1844:	d2 f7       	brpl	.-12     	; 0x183a <__umoddi3+0x828>
    1846:	6c 01       	movw	r12, r24
    1848:	7d 01       	movw	r14, r26
    184a:	c2 2a       	or	r12, r18
    184c:	d3 2a       	or	r13, r19
    184e:	e4 2a       	or	r14, r20
    1850:	f5 2a       	or	r15, r21
    1852:	c9 a6       	std	Y+41, r12	; 0x29
    1854:	da a6       	std	Y+42, r13	; 0x2a
    1856:	eb a6       	std	Y+43, r14	; 0x2b
    1858:	fc a6       	std	Y+44, r15	; 0x2c
    185a:	82 01       	movw	r16, r4
    185c:	71 01       	movw	r14, r2
    185e:	67 96       	adiw	r28, 0x17	; 23
    1860:	0f ac       	ldd	r0, Y+63	; 0x3f
    1862:	67 97       	sbiw	r28, 0x17	; 23
    1864:	04 c0       	rjmp	.+8      	; 0x186e <__umoddi3+0x85c>
    1866:	ee 0c       	add	r14, r14
    1868:	ff 1c       	adc	r15, r15
    186a:	00 1f       	adc	r16, r16
    186c:	11 1f       	adc	r17, r17
    186e:	0a 94       	dec	r0
    1870:	d2 f7       	brpl	.-12     	; 0x1866 <__umoddi3+0x854>
    1872:	ed a2       	std	Y+37, r14	; 0x25
    1874:	fe a2       	std	Y+38, r15	; 0x26
    1876:	0f a3       	std	Y+39, r16	; 0x27
    1878:	18 a7       	std	Y+40, r17	; 0x28
    187a:	64 01       	movw	r12, r8
    187c:	53 01       	movw	r10, r6
    187e:	66 96       	adiw	r28, 0x16	; 22
    1880:	0f ac       	ldd	r0, Y+63	; 0x3f
    1882:	66 97       	sbiw	r28, 0x16	; 22
    1884:	04 c0       	rjmp	.+8      	; 0x188e <__umoddi3+0x87c>
    1886:	d6 94       	lsr	r13
    1888:	c7 94       	ror	r12
    188a:	b7 94       	ror	r11
    188c:	a7 94       	ror	r10
    188e:	0a 94       	dec	r0
    1890:	d2 f7       	brpl	.-12     	; 0x1886 <__umoddi3+0x874>
    1892:	a4 01       	movw	r20, r8
    1894:	93 01       	movw	r18, r6
    1896:	67 96       	adiw	r28, 0x17	; 23
    1898:	0f ac       	ldd	r0, Y+63	; 0x3f
    189a:	67 97       	sbiw	r28, 0x17	; 23
    189c:	04 c0       	rjmp	.+8      	; 0x18a6 <__umoddi3+0x894>
    189e:	22 0f       	add	r18, r18
    18a0:	33 1f       	adc	r19, r19
    18a2:	44 1f       	adc	r20, r20
    18a4:	55 1f       	adc	r21, r21
    18a6:	0a 94       	dec	r0
    18a8:	d2 f7       	brpl	.-12     	; 0x189e <__umoddi3+0x88c>
    18aa:	6c 96       	adiw	r28, 0x1c	; 28
    18ac:	8c ad       	ldd	r24, Y+60	; 0x3c
    18ae:	9d ad       	ldd	r25, Y+61	; 0x3d
    18b0:	ae ad       	ldd	r26, Y+62	; 0x3e
    18b2:	bf ad       	ldd	r27, Y+63	; 0x3f
    18b4:	6c 97       	sbiw	r28, 0x1c	; 28
    18b6:	66 96       	adiw	r28, 0x16	; 22
    18b8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18ba:	66 97       	sbiw	r28, 0x16	; 22
    18bc:	04 c0       	rjmp	.+8      	; 0x18c6 <__umoddi3+0x8b4>
    18be:	b6 95       	lsr	r27
    18c0:	a7 95       	ror	r26
    18c2:	97 95       	ror	r25
    18c4:	87 95       	ror	r24
    18c6:	0a 94       	dec	r0
    18c8:	d2 f7       	brpl	.-12     	; 0x18be <__umoddi3+0x8ac>
    18ca:	3c 01       	movw	r6, r24
    18cc:	4d 01       	movw	r8, r26
    18ce:	62 2a       	or	r6, r18
    18d0:	73 2a       	or	r7, r19
    18d2:	84 2a       	or	r8, r20
    18d4:	95 2a       	or	r9, r21
    18d6:	69 a2       	std	Y+33, r6	; 0x21
    18d8:	7a a2       	std	Y+34, r7	; 0x22
    18da:	8b a2       	std	Y+35, r8	; 0x23
    18dc:	9c a2       	std	Y+36, r9	; 0x24
    18de:	6c 96       	adiw	r28, 0x1c	; 28
    18e0:	ec ac       	ldd	r14, Y+60	; 0x3c
    18e2:	fd ac       	ldd	r15, Y+61	; 0x3d
    18e4:	0e ad       	ldd	r16, Y+62	; 0x3e
    18e6:	1f ad       	ldd	r17, Y+63	; 0x3f
    18e8:	6c 97       	sbiw	r28, 0x1c	; 28
    18ea:	67 96       	adiw	r28, 0x17	; 23
    18ec:	0f ac       	ldd	r0, Y+63	; 0x3f
    18ee:	67 97       	sbiw	r28, 0x17	; 23
    18f0:	04 c0       	rjmp	.+8      	; 0x18fa <__umoddi3+0x8e8>
    18f2:	ee 0c       	add	r14, r14
    18f4:	ff 1c       	adc	r15, r15
    18f6:	00 1f       	adc	r16, r16
    18f8:	11 1f       	adc	r17, r17
    18fa:	0a 94       	dec	r0
    18fc:	d2 f7       	brpl	.-12     	; 0x18f2 <__umoddi3+0x8e0>
    18fe:	ed 8e       	std	Y+29, r14	; 0x1d
    1900:	fe 8e       	std	Y+30, r15	; 0x1e
    1902:	0f 8f       	std	Y+31, r16	; 0x1f
    1904:	18 a3       	std	Y+32, r17	; 0x20
    1906:	49 a5       	ldd	r20, Y+41	; 0x29
    1908:	5a a5       	ldd	r21, Y+42	; 0x2a
    190a:	6b a5       	ldd	r22, Y+43	; 0x2b
    190c:	7c a5       	ldd	r23, Y+44	; 0x2c
    190e:	3b 01       	movw	r6, r22
    1910:	88 24       	eor	r8, r8
    1912:	99 24       	eor	r9, r9
    1914:	60 70       	andi	r22, 0x00	; 0
    1916:	70 70       	andi	r23, 0x00	; 0
    1918:	2d 96       	adiw	r28, 0x0d	; 13
    191a:	4c af       	std	Y+60, r20	; 0x3c
    191c:	5d af       	std	Y+61, r21	; 0x3d
    191e:	6e af       	std	Y+62, r22	; 0x3e
    1920:	7f af       	std	Y+63, r23	; 0x3f
    1922:	2d 97       	sbiw	r28, 0x0d	; 13
    1924:	c6 01       	movw	r24, r12
    1926:	b5 01       	movw	r22, r10
    1928:	a4 01       	movw	r20, r8
    192a:	93 01       	movw	r18, r6
    192c:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1930:	7b 01       	movw	r14, r22
    1932:	8c 01       	movw	r16, r24
    1934:	c6 01       	movw	r24, r12
    1936:	b5 01       	movw	r22, r10
    1938:	a4 01       	movw	r20, r8
    193a:	93 01       	movw	r18, r6
    193c:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    1940:	c9 01       	movw	r24, r18
    1942:	da 01       	movw	r26, r20
    1944:	1c 01       	movw	r2, r24
    1946:	2d 01       	movw	r4, r26
    1948:	c2 01       	movw	r24, r4
    194a:	b1 01       	movw	r22, r2
    194c:	2d 96       	adiw	r28, 0x0d	; 13
    194e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1950:	3d ad       	ldd	r19, Y+61	; 0x3d
    1952:	4e ad       	ldd	r20, Y+62	; 0x3e
    1954:	5f ad       	ldd	r21, Y+63	; 0x3f
    1956:	2d 97       	sbiw	r28, 0x0d	; 13
    1958:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    195c:	9b 01       	movw	r18, r22
    195e:	ac 01       	movw	r20, r24
    1960:	87 01       	movw	r16, r14
    1962:	ff 24       	eor	r15, r15
    1964:	ee 24       	eor	r14, r14
    1966:	a9 a0       	ldd	r10, Y+33	; 0x21
    1968:	ba a0       	ldd	r11, Y+34	; 0x22
    196a:	cb a0       	ldd	r12, Y+35	; 0x23
    196c:	dc a0       	ldd	r13, Y+36	; 0x24
    196e:	c6 01       	movw	r24, r12
    1970:	aa 27       	eor	r26, r26
    1972:	bb 27       	eor	r27, r27
    1974:	57 01       	movw	r10, r14
    1976:	68 01       	movw	r12, r16
    1978:	a8 2a       	or	r10, r24
    197a:	b9 2a       	or	r11, r25
    197c:	ca 2a       	or	r12, r26
    197e:	db 2a       	or	r13, r27
    1980:	a2 16       	cp	r10, r18
    1982:	b3 06       	cpc	r11, r19
    1984:	c4 06       	cpc	r12, r20
    1986:	d5 06       	cpc	r13, r21
    1988:	00 f5       	brcc	.+64     	; 0x19ca <__umoddi3+0x9b8>
    198a:	08 94       	sec
    198c:	21 08       	sbc	r2, r1
    198e:	31 08       	sbc	r3, r1
    1990:	41 08       	sbc	r4, r1
    1992:	51 08       	sbc	r5, r1
    1994:	e9 a4       	ldd	r14, Y+41	; 0x29
    1996:	fa a4       	ldd	r15, Y+42	; 0x2a
    1998:	0b a5       	ldd	r16, Y+43	; 0x2b
    199a:	1c a5       	ldd	r17, Y+44	; 0x2c
    199c:	ae 0c       	add	r10, r14
    199e:	bf 1c       	adc	r11, r15
    19a0:	c0 1e       	adc	r12, r16
    19a2:	d1 1e       	adc	r13, r17
    19a4:	ae 14       	cp	r10, r14
    19a6:	bf 04       	cpc	r11, r15
    19a8:	c0 06       	cpc	r12, r16
    19aa:	d1 06       	cpc	r13, r17
    19ac:	70 f0       	brcs	.+28     	; 0x19ca <__umoddi3+0x9b8>
    19ae:	a2 16       	cp	r10, r18
    19b0:	b3 06       	cpc	r11, r19
    19b2:	c4 06       	cpc	r12, r20
    19b4:	d5 06       	cpc	r13, r21
    19b6:	48 f4       	brcc	.+18     	; 0x19ca <__umoddi3+0x9b8>
    19b8:	08 94       	sec
    19ba:	21 08       	sbc	r2, r1
    19bc:	31 08       	sbc	r3, r1
    19be:	41 08       	sbc	r4, r1
    19c0:	51 08       	sbc	r5, r1
    19c2:	ae 0c       	add	r10, r14
    19c4:	bf 1c       	adc	r11, r15
    19c6:	c0 1e       	adc	r12, r16
    19c8:	d1 1e       	adc	r13, r17
    19ca:	a2 1a       	sub	r10, r18
    19cc:	b3 0a       	sbc	r11, r19
    19ce:	c4 0a       	sbc	r12, r20
    19d0:	d5 0a       	sbc	r13, r21
    19d2:	c6 01       	movw	r24, r12
    19d4:	b5 01       	movw	r22, r10
    19d6:	a4 01       	movw	r20, r8
    19d8:	93 01       	movw	r18, r6
    19da:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    19de:	7b 01       	movw	r14, r22
    19e0:	8c 01       	movw	r16, r24
    19e2:	c6 01       	movw	r24, r12
    19e4:	b5 01       	movw	r22, r10
    19e6:	a4 01       	movw	r20, r8
    19e8:	93 01       	movw	r18, r6
    19ea:	0e 94 ae 29 	call	0x535c	; 0x535c <__udivmodsi4>
    19ee:	c9 01       	movw	r24, r18
    19f0:	da 01       	movw	r26, r20
    19f2:	3c 01       	movw	r6, r24
    19f4:	4d 01       	movw	r8, r26
    19f6:	c4 01       	movw	r24, r8
    19f8:	b3 01       	movw	r22, r6
    19fa:	2d 96       	adiw	r28, 0x0d	; 13
    19fc:	2c ad       	ldd	r18, Y+60	; 0x3c
    19fe:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a00:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a02:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a04:	2d 97       	sbiw	r28, 0x0d	; 13
    1a06:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1a0a:	9b 01       	movw	r18, r22
    1a0c:	ac 01       	movw	r20, r24
    1a0e:	87 01       	movw	r16, r14
    1a10:	ff 24       	eor	r15, r15
    1a12:	ee 24       	eor	r14, r14
    1a14:	89 a1       	ldd	r24, Y+33	; 0x21
    1a16:	9a a1       	ldd	r25, Y+34	; 0x22
    1a18:	ab a1       	ldd	r26, Y+35	; 0x23
    1a1a:	bc a1       	ldd	r27, Y+36	; 0x24
    1a1c:	a0 70       	andi	r26, 0x00	; 0
    1a1e:	b0 70       	andi	r27, 0x00	; 0
    1a20:	57 01       	movw	r10, r14
    1a22:	68 01       	movw	r12, r16
    1a24:	a8 2a       	or	r10, r24
    1a26:	b9 2a       	or	r11, r25
    1a28:	ca 2a       	or	r12, r26
    1a2a:	db 2a       	or	r13, r27
    1a2c:	a2 16       	cp	r10, r18
    1a2e:	b3 06       	cpc	r11, r19
    1a30:	c4 06       	cpc	r12, r20
    1a32:	d5 06       	cpc	r13, r21
    1a34:	00 f5       	brcc	.+64     	; 0x1a76 <__umoddi3+0xa64>
    1a36:	08 94       	sec
    1a38:	61 08       	sbc	r6, r1
    1a3a:	71 08       	sbc	r7, r1
    1a3c:	81 08       	sbc	r8, r1
    1a3e:	91 08       	sbc	r9, r1
    1a40:	69 a5       	ldd	r22, Y+41	; 0x29
    1a42:	7a a5       	ldd	r23, Y+42	; 0x2a
    1a44:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a46:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a48:	a6 0e       	add	r10, r22
    1a4a:	b7 1e       	adc	r11, r23
    1a4c:	c8 1e       	adc	r12, r24
    1a4e:	d9 1e       	adc	r13, r25
    1a50:	a6 16       	cp	r10, r22
    1a52:	b7 06       	cpc	r11, r23
    1a54:	c8 06       	cpc	r12, r24
    1a56:	d9 06       	cpc	r13, r25
    1a58:	70 f0       	brcs	.+28     	; 0x1a76 <__umoddi3+0xa64>
    1a5a:	a2 16       	cp	r10, r18
    1a5c:	b3 06       	cpc	r11, r19
    1a5e:	c4 06       	cpc	r12, r20
    1a60:	d5 06       	cpc	r13, r21
    1a62:	48 f4       	brcc	.+18     	; 0x1a76 <__umoddi3+0xa64>
    1a64:	08 94       	sec
    1a66:	61 08       	sbc	r6, r1
    1a68:	71 08       	sbc	r7, r1
    1a6a:	81 08       	sbc	r8, r1
    1a6c:	91 08       	sbc	r9, r1
    1a6e:	a6 0e       	add	r10, r22
    1a70:	b7 1e       	adc	r11, r23
    1a72:	c8 1e       	adc	r12, r24
    1a74:	d9 1e       	adc	r13, r25
    1a76:	d6 01       	movw	r26, r12
    1a78:	c5 01       	movw	r24, r10
    1a7a:	82 1b       	sub	r24, r18
    1a7c:	93 0b       	sbc	r25, r19
    1a7e:	a4 0b       	sbc	r26, r20
    1a80:	b5 0b       	sbc	r27, r21
    1a82:	89 8f       	std	Y+25, r24	; 0x19
    1a84:	9a 8f       	std	Y+26, r25	; 0x1a
    1a86:	ab 8f       	std	Y+27, r26	; 0x1b
    1a88:	bc 8f       	std	Y+28, r27	; 0x1c
    1a8a:	d1 01       	movw	r26, r2
    1a8c:	99 27       	eor	r25, r25
    1a8e:	88 27       	eor	r24, r24
    1a90:	84 01       	movw	r16, r8
    1a92:	73 01       	movw	r14, r6
    1a94:	e8 2a       	or	r14, r24
    1a96:	f9 2a       	or	r15, r25
    1a98:	0a 2b       	or	r16, r26
    1a9a:	1b 2b       	or	r17, r27
    1a9c:	4f ef       	ldi	r20, 0xFF	; 255
    1a9e:	a4 2e       	mov	r10, r20
    1aa0:	4f ef       	ldi	r20, 0xFF	; 255
    1aa2:	b4 2e       	mov	r11, r20
    1aa4:	c1 2c       	mov	r12, r1
    1aa6:	d1 2c       	mov	r13, r1
    1aa8:	ae 20       	and	r10, r14
    1aaa:	bf 20       	and	r11, r15
    1aac:	c0 22       	and	r12, r16
    1aae:	d1 22       	and	r13, r17
    1ab0:	78 01       	movw	r14, r16
    1ab2:	00 27       	eor	r16, r16
    1ab4:	11 27       	eor	r17, r17
    1ab6:	6d a0       	ldd	r6, Y+37	; 0x25
    1ab8:	7e a0       	ldd	r7, Y+38	; 0x26
    1aba:	8f a0       	ldd	r8, Y+39	; 0x27
    1abc:	98 a4       	ldd	r9, Y+40	; 0x28
    1abe:	4f ef       	ldi	r20, 0xFF	; 255
    1ac0:	5f ef       	ldi	r21, 0xFF	; 255
    1ac2:	60 e0       	ldi	r22, 0x00	; 0
    1ac4:	70 e0       	ldi	r23, 0x00	; 0
    1ac6:	64 22       	and	r6, r20
    1ac8:	75 22       	and	r7, r21
    1aca:	86 22       	and	r8, r22
    1acc:	97 22       	and	r9, r23
    1ace:	8d a1       	ldd	r24, Y+37	; 0x25
    1ad0:	9e a1       	ldd	r25, Y+38	; 0x26
    1ad2:	af a1       	ldd	r26, Y+39	; 0x27
    1ad4:	b8 a5       	ldd	r27, Y+40	; 0x28
    1ad6:	bd 01       	movw	r22, r26
    1ad8:	88 27       	eor	r24, r24
    1ada:	99 27       	eor	r25, r25
    1adc:	65 96       	adiw	r28, 0x15	; 21
    1ade:	6c af       	std	Y+60, r22	; 0x3c
    1ae0:	7d af       	std	Y+61, r23	; 0x3d
    1ae2:	8e af       	std	Y+62, r24	; 0x3e
    1ae4:	9f af       	std	Y+63, r25	; 0x3f
    1ae6:	65 97       	sbiw	r28, 0x15	; 21
    1ae8:	c6 01       	movw	r24, r12
    1aea:	b5 01       	movw	r22, r10
    1aec:	a4 01       	movw	r20, r8
    1aee:	93 01       	movw	r18, r6
    1af0:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1af4:	61 96       	adiw	r28, 0x11	; 17
    1af6:	6c af       	std	Y+60, r22	; 0x3c
    1af8:	7d af       	std	Y+61, r23	; 0x3d
    1afa:	8e af       	std	Y+62, r24	; 0x3e
    1afc:	9f af       	std	Y+63, r25	; 0x3f
    1afe:	61 97       	sbiw	r28, 0x11	; 17
    1b00:	c6 01       	movw	r24, r12
    1b02:	b5 01       	movw	r22, r10
    1b04:	65 96       	adiw	r28, 0x15	; 21
    1b06:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b08:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b0a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b0c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b0e:	65 97       	sbiw	r28, 0x15	; 21
    1b10:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1b14:	1b 01       	movw	r2, r22
    1b16:	2c 01       	movw	r4, r24
    1b18:	c8 01       	movw	r24, r16
    1b1a:	b7 01       	movw	r22, r14
    1b1c:	a4 01       	movw	r20, r8
    1b1e:	93 01       	movw	r18, r6
    1b20:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1b24:	5b 01       	movw	r10, r22
    1b26:	6c 01       	movw	r12, r24
    1b28:	c8 01       	movw	r24, r16
    1b2a:	b7 01       	movw	r22, r14
    1b2c:	65 96       	adiw	r28, 0x15	; 21
    1b2e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b30:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b32:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b34:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b36:	65 97       	sbiw	r28, 0x15	; 21
    1b38:	0e 94 8f 29 	call	0x531e	; 0x531e <__mulsi3>
    1b3c:	7b 01       	movw	r14, r22
    1b3e:	8c 01       	movw	r16, r24
    1b40:	a6 01       	movw	r20, r12
    1b42:	95 01       	movw	r18, r10
    1b44:	22 0d       	add	r18, r2
    1b46:	33 1d       	adc	r19, r3
    1b48:	44 1d       	adc	r20, r4
    1b4a:	55 1d       	adc	r21, r5
    1b4c:	61 96       	adiw	r28, 0x11	; 17
    1b4e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1b50:	7d ac       	ldd	r7, Y+61	; 0x3d
    1b52:	8e ac       	ldd	r8, Y+62	; 0x3e
    1b54:	9f ac       	ldd	r9, Y+63	; 0x3f
    1b56:	61 97       	sbiw	r28, 0x11	; 17
    1b58:	c4 01       	movw	r24, r8
    1b5a:	aa 27       	eor	r26, r26
    1b5c:	bb 27       	eor	r27, r27
    1b5e:	28 0f       	add	r18, r24
    1b60:	39 1f       	adc	r19, r25
    1b62:	4a 1f       	adc	r20, r26
    1b64:	5b 1f       	adc	r21, r27
    1b66:	2a 15       	cp	r18, r10
    1b68:	3b 05       	cpc	r19, r11
    1b6a:	4c 05       	cpc	r20, r12
    1b6c:	5d 05       	cpc	r21, r13
    1b6e:	48 f4       	brcc	.+18     	; 0x1b82 <__umoddi3+0xb70>
    1b70:	81 2c       	mov	r8, r1
    1b72:	91 2c       	mov	r9, r1
    1b74:	e1 e0       	ldi	r30, 0x01	; 1
    1b76:	ae 2e       	mov	r10, r30
    1b78:	b1 2c       	mov	r11, r1
    1b7a:	e8 0c       	add	r14, r8
    1b7c:	f9 1c       	adc	r15, r9
    1b7e:	0a 1d       	adc	r16, r10
    1b80:	1b 1d       	adc	r17, r11
    1b82:	ca 01       	movw	r24, r20
    1b84:	aa 27       	eor	r26, r26
    1b86:	bb 27       	eor	r27, r27
    1b88:	57 01       	movw	r10, r14
    1b8a:	68 01       	movw	r12, r16
    1b8c:	a8 0e       	add	r10, r24
    1b8e:	b9 1e       	adc	r11, r25
    1b90:	ca 1e       	adc	r12, r26
    1b92:	db 1e       	adc	r13, r27
    1b94:	a9 01       	movw	r20, r18
    1b96:	33 27       	eor	r19, r19
    1b98:	22 27       	eor	r18, r18
    1b9a:	61 96       	adiw	r28, 0x11	; 17
    1b9c:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b9e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1ba0:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ba2:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ba4:	61 97       	sbiw	r28, 0x11	; 17
    1ba6:	a0 70       	andi	r26, 0x00	; 0
    1ba8:	b0 70       	andi	r27, 0x00	; 0
    1baa:	28 0f       	add	r18, r24
    1bac:	39 1f       	adc	r19, r25
    1bae:	4a 1f       	adc	r20, r26
    1bb0:	5b 1f       	adc	r21, r27
    1bb2:	e9 8c       	ldd	r14, Y+25	; 0x19
    1bb4:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1bb6:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1bb8:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1bba:	ea 14       	cp	r14, r10
    1bbc:	fb 04       	cpc	r15, r11
    1bbe:	0c 05       	cpc	r16, r12
    1bc0:	1d 05       	cpc	r17, r13
    1bc2:	70 f0       	brcs	.+28     	; 0x1be0 <__umoddi3+0xbce>
    1bc4:	ae 14       	cp	r10, r14
    1bc6:	bf 04       	cpc	r11, r15
    1bc8:	c0 06       	cpc	r12, r16
    1bca:	d1 06       	cpc	r13, r17
    1bcc:	69 f5       	brne	.+90     	; 0x1c28 <__umoddi3+0xc16>
    1bce:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1bd0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1bd2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1bd4:	98 a1       	ldd	r25, Y+32	; 0x20
    1bd6:	62 17       	cp	r22, r18
    1bd8:	73 07       	cpc	r23, r19
    1bda:	84 07       	cpc	r24, r20
    1bdc:	95 07       	cpc	r25, r21
    1bde:	20 f5       	brcc	.+72     	; 0x1c28 <__umoddi3+0xc16>
    1be0:	da 01       	movw	r26, r20
    1be2:	c9 01       	movw	r24, r18
    1be4:	6d a0       	ldd	r6, Y+37	; 0x25
    1be6:	7e a0       	ldd	r7, Y+38	; 0x26
    1be8:	8f a0       	ldd	r8, Y+39	; 0x27
    1bea:	98 a4       	ldd	r9, Y+40	; 0x28
    1bec:	86 19       	sub	r24, r6
    1bee:	97 09       	sbc	r25, r7
    1bf0:	a8 09       	sbc	r26, r8
    1bf2:	b9 09       	sbc	r27, r9
    1bf4:	e9 a4       	ldd	r14, Y+41	; 0x29
    1bf6:	fa a4       	ldd	r15, Y+42	; 0x2a
    1bf8:	0b a5       	ldd	r16, Y+43	; 0x2b
    1bfa:	1c a5       	ldd	r17, Y+44	; 0x2c
    1bfc:	ae 18       	sub	r10, r14
    1bfe:	bf 08       	sbc	r11, r15
    1c00:	c0 0a       	sbc	r12, r16
    1c02:	d1 0a       	sbc	r13, r17
    1c04:	ee 24       	eor	r14, r14
    1c06:	ff 24       	eor	r15, r15
    1c08:	87 01       	movw	r16, r14
    1c0a:	28 17       	cp	r18, r24
    1c0c:	39 07       	cpc	r19, r25
    1c0e:	4a 07       	cpc	r20, r26
    1c10:	5b 07       	cpc	r21, r27
    1c12:	28 f4       	brcc	.+10     	; 0x1c1e <__umoddi3+0xc0c>
    1c14:	21 e0       	ldi	r18, 0x01	; 1
    1c16:	e2 2e       	mov	r14, r18
    1c18:	f1 2c       	mov	r15, r1
    1c1a:	01 2d       	mov	r16, r1
    1c1c:	11 2d       	mov	r17, r1
    1c1e:	ae 18       	sub	r10, r14
    1c20:	bf 08       	sbc	r11, r15
    1c22:	c0 0a       	sbc	r12, r16
    1c24:	d1 0a       	sbc	r13, r17
    1c26:	02 c0       	rjmp	.+4      	; 0x1c2c <__umoddi3+0xc1a>
    1c28:	da 01       	movw	r26, r20
    1c2a:	c9 01       	movw	r24, r18
    1c2c:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1c2e:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1c30:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1c32:	98 a0       	ldd	r9, Y+32	; 0x20
    1c34:	68 1a       	sub	r6, r24
    1c36:	79 0a       	sbc	r7, r25
    1c38:	8a 0a       	sbc	r8, r26
    1c3a:	9b 0a       	sbc	r9, r27
    1c3c:	49 8d       	ldd	r20, Y+25	; 0x19
    1c3e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1c40:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1c42:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1c44:	4a 19       	sub	r20, r10
    1c46:	5b 09       	sbc	r21, r11
    1c48:	6c 09       	sbc	r22, r12
    1c4a:	7d 09       	sbc	r23, r13
    1c4c:	5a 01       	movw	r10, r20
    1c4e:	6b 01       	movw	r12, r22
    1c50:	22 24       	eor	r2, r2
    1c52:	33 24       	eor	r3, r3
    1c54:	21 01       	movw	r4, r2
    1c56:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c58:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c5a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c5c:	98 a1       	ldd	r25, Y+32	; 0x20
    1c5e:	66 15       	cp	r22, r6
    1c60:	77 05       	cpc	r23, r7
    1c62:	88 05       	cpc	r24, r8
    1c64:	99 05       	cpc	r25, r9
    1c66:	28 f4       	brcc	.+10     	; 0x1c72 <__umoddi3+0xc60>
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	28 2e       	mov	r2, r24
    1c6c:	31 2c       	mov	r3, r1
    1c6e:	41 2c       	mov	r4, r1
    1c70:	51 2c       	mov	r5, r1
    1c72:	86 01       	movw	r16, r12
    1c74:	75 01       	movw	r14, r10
    1c76:	e2 18       	sub	r14, r2
    1c78:	f3 08       	sbc	r15, r3
    1c7a:	04 09       	sbc	r16, r4
    1c7c:	15 09       	sbc	r17, r5
    1c7e:	a8 01       	movw	r20, r16
    1c80:	97 01       	movw	r18, r14
    1c82:	66 96       	adiw	r28, 0x16	; 22
    1c84:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c86:	66 97       	sbiw	r28, 0x16	; 22
    1c88:	04 c0       	rjmp	.+8      	; 0x1c92 <__umoddi3+0xc80>
    1c8a:	22 0f       	add	r18, r18
    1c8c:	33 1f       	adc	r19, r19
    1c8e:	44 1f       	adc	r20, r20
    1c90:	55 1f       	adc	r21, r21
    1c92:	0a 94       	dec	r0
    1c94:	d2 f7       	brpl	.-12     	; 0x1c8a <__umoddi3+0xc78>
    1c96:	d4 01       	movw	r26, r8
    1c98:	c3 01       	movw	r24, r6
    1c9a:	67 96       	adiw	r28, 0x17	; 23
    1c9c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c9e:	67 97       	sbiw	r28, 0x17	; 23
    1ca0:	04 c0       	rjmp	.+8      	; 0x1caa <__umoddi3+0xc98>
    1ca2:	b6 95       	lsr	r27
    1ca4:	a7 95       	ror	r26
    1ca6:	97 95       	ror	r25
    1ca8:	87 95       	ror	r24
    1caa:	0a 94       	dec	r0
    1cac:	d2 f7       	brpl	.-12     	; 0x1ca2 <__umoddi3+0xc90>
    1cae:	28 2b       	or	r18, r24
    1cb0:	39 2b       	or	r19, r25
    1cb2:	4a 2b       	or	r20, r26
    1cb4:	5b 2b       	or	r21, r27
    1cb6:	29 8b       	std	Y+17, r18	; 0x11
    1cb8:	3a 8b       	std	Y+18, r19	; 0x12
    1cba:	4b 8b       	std	Y+19, r20	; 0x13
    1cbc:	5c 8b       	std	Y+20, r21	; 0x14
    1cbe:	67 96       	adiw	r28, 0x17	; 23
    1cc0:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cc2:	67 97       	sbiw	r28, 0x17	; 23
    1cc4:	04 c0       	rjmp	.+8      	; 0x1cce <__umoddi3+0xcbc>
    1cc6:	16 95       	lsr	r17
    1cc8:	07 95       	ror	r16
    1cca:	f7 94       	ror	r15
    1ccc:	e7 94       	ror	r14
    1cce:	0a 94       	dec	r0
    1cd0:	d2 f7       	brpl	.-12     	; 0x1cc6 <__umoddi3+0xcb4>
    1cd2:	ed 8a       	std	Y+21, r14	; 0x15
    1cd4:	fe 8a       	std	Y+22, r15	; 0x16
    1cd6:	0f 8b       	std	Y+23, r16	; 0x17
    1cd8:	18 8f       	std	Y+24, r17	; 0x18
    1cda:	3a 89       	ldd	r19, Y+18	; 0x12
    1cdc:	4b 89       	ldd	r20, Y+19	; 0x13
    1cde:	5c 89       	ldd	r21, Y+20	; 0x14
    1ce0:	6e 2d       	mov	r22, r14
    1ce2:	7e 89       	ldd	r23, Y+22	; 0x16
    1ce4:	8f 89       	ldd	r24, Y+23	; 0x17
    1ce6:	98 8d       	ldd	r25, Y+24	; 0x18
    1ce8:	c5 5a       	subi	r28, 0xA5	; 165
    1cea:	df 4f       	sbci	r29, 0xFF	; 255
    1cec:	e2 e1       	ldi	r30, 0x12	; 18
    1cee:	0c 94 ec 29 	jmp	0x53d8	; 0x53d8 <__epilogue_restores__>

00001cf2 <_fpadd_parts>:
    1cf2:	a0 e0       	ldi	r26, 0x00	; 0
    1cf4:	b0 e0       	ldi	r27, 0x00	; 0
    1cf6:	ef e7       	ldi	r30, 0x7F	; 127
    1cf8:	fe e0       	ldi	r31, 0x0E	; 14
    1cfa:	0c 94 d0 29 	jmp	0x53a0	; 0x53a0 <__prologue_saves__>
    1cfe:	dc 01       	movw	r26, r24
    1d00:	2b 01       	movw	r4, r22
    1d02:	fa 01       	movw	r30, r20
    1d04:	9c 91       	ld	r25, X
    1d06:	92 30       	cpi	r25, 0x02	; 2
    1d08:	08 f4       	brcc	.+2      	; 0x1d0c <_fpadd_parts+0x1a>
    1d0a:	39 c1       	rjmp	.+626    	; 0x1f7e <_fpadd_parts+0x28c>
    1d0c:	eb 01       	movw	r28, r22
    1d0e:	88 81       	ld	r24, Y
    1d10:	82 30       	cpi	r24, 0x02	; 2
    1d12:	08 f4       	brcc	.+2      	; 0x1d16 <_fpadd_parts+0x24>
    1d14:	33 c1       	rjmp	.+614    	; 0x1f7c <_fpadd_parts+0x28a>
    1d16:	94 30       	cpi	r25, 0x04	; 4
    1d18:	69 f4       	brne	.+26     	; 0x1d34 <_fpadd_parts+0x42>
    1d1a:	84 30       	cpi	r24, 0x04	; 4
    1d1c:	09 f0       	breq	.+2      	; 0x1d20 <_fpadd_parts+0x2e>
    1d1e:	2f c1       	rjmp	.+606    	; 0x1f7e <_fpadd_parts+0x28c>
    1d20:	11 96       	adiw	r26, 0x01	; 1
    1d22:	9c 91       	ld	r25, X
    1d24:	11 97       	sbiw	r26, 0x01	; 1
    1d26:	89 81       	ldd	r24, Y+1	; 0x01
    1d28:	98 17       	cp	r25, r24
    1d2a:	09 f4       	brne	.+2      	; 0x1d2e <_fpadd_parts+0x3c>
    1d2c:	28 c1       	rjmp	.+592    	; 0x1f7e <_fpadd_parts+0x28c>
    1d2e:	a3 e8       	ldi	r26, 0x83	; 131
    1d30:	b0 e0       	ldi	r27, 0x00	; 0
    1d32:	25 c1       	rjmp	.+586    	; 0x1f7e <_fpadd_parts+0x28c>
    1d34:	84 30       	cpi	r24, 0x04	; 4
    1d36:	09 f4       	brne	.+2      	; 0x1d3a <_fpadd_parts+0x48>
    1d38:	21 c1       	rjmp	.+578    	; 0x1f7c <_fpadd_parts+0x28a>
    1d3a:	82 30       	cpi	r24, 0x02	; 2
    1d3c:	a9 f4       	brne	.+42     	; 0x1d68 <_fpadd_parts+0x76>
    1d3e:	92 30       	cpi	r25, 0x02	; 2
    1d40:	09 f0       	breq	.+2      	; 0x1d44 <_fpadd_parts+0x52>
    1d42:	1d c1       	rjmp	.+570    	; 0x1f7e <_fpadd_parts+0x28c>
    1d44:	9a 01       	movw	r18, r20
    1d46:	ad 01       	movw	r20, r26
    1d48:	88 e0       	ldi	r24, 0x08	; 8
    1d4a:	ea 01       	movw	r28, r20
    1d4c:	09 90       	ld	r0, Y+
    1d4e:	ae 01       	movw	r20, r28
    1d50:	e9 01       	movw	r28, r18
    1d52:	09 92       	st	Y+, r0
    1d54:	9e 01       	movw	r18, r28
    1d56:	81 50       	subi	r24, 0x01	; 1
    1d58:	c1 f7       	brne	.-16     	; 0x1d4a <_fpadd_parts+0x58>
    1d5a:	e2 01       	movw	r28, r4
    1d5c:	89 81       	ldd	r24, Y+1	; 0x01
    1d5e:	11 96       	adiw	r26, 0x01	; 1
    1d60:	9c 91       	ld	r25, X
    1d62:	89 23       	and	r24, r25
    1d64:	81 83       	std	Z+1, r24	; 0x01
    1d66:	08 c1       	rjmp	.+528    	; 0x1f78 <_fpadd_parts+0x286>
    1d68:	92 30       	cpi	r25, 0x02	; 2
    1d6a:	09 f4       	brne	.+2      	; 0x1d6e <_fpadd_parts+0x7c>
    1d6c:	07 c1       	rjmp	.+526    	; 0x1f7c <_fpadd_parts+0x28a>
    1d6e:	12 96       	adiw	r26, 0x02	; 2
    1d70:	2d 90       	ld	r2, X+
    1d72:	3c 90       	ld	r3, X
    1d74:	13 97       	sbiw	r26, 0x03	; 3
    1d76:	eb 01       	movw	r28, r22
    1d78:	8a 81       	ldd	r24, Y+2	; 0x02
    1d7a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d7c:	14 96       	adiw	r26, 0x04	; 4
    1d7e:	ad 90       	ld	r10, X+
    1d80:	bd 90       	ld	r11, X+
    1d82:	cd 90       	ld	r12, X+
    1d84:	dc 90       	ld	r13, X
    1d86:	17 97       	sbiw	r26, 0x07	; 7
    1d88:	ec 80       	ldd	r14, Y+4	; 0x04
    1d8a:	fd 80       	ldd	r15, Y+5	; 0x05
    1d8c:	0e 81       	ldd	r16, Y+6	; 0x06
    1d8e:	1f 81       	ldd	r17, Y+7	; 0x07
    1d90:	91 01       	movw	r18, r2
    1d92:	28 1b       	sub	r18, r24
    1d94:	39 0b       	sbc	r19, r25
    1d96:	b9 01       	movw	r22, r18
    1d98:	37 ff       	sbrs	r19, 7
    1d9a:	04 c0       	rjmp	.+8      	; 0x1da4 <_fpadd_parts+0xb2>
    1d9c:	66 27       	eor	r22, r22
    1d9e:	77 27       	eor	r23, r23
    1da0:	62 1b       	sub	r22, r18
    1da2:	73 0b       	sbc	r23, r19
    1da4:	60 32       	cpi	r22, 0x20	; 32
    1da6:	71 05       	cpc	r23, r1
    1da8:	0c f0       	brlt	.+2      	; 0x1dac <_fpadd_parts+0xba>
    1daa:	61 c0       	rjmp	.+194    	; 0x1e6e <_fpadd_parts+0x17c>
    1dac:	12 16       	cp	r1, r18
    1dae:	13 06       	cpc	r1, r19
    1db0:	6c f5       	brge	.+90     	; 0x1e0c <_fpadd_parts+0x11a>
    1db2:	37 01       	movw	r6, r14
    1db4:	48 01       	movw	r8, r16
    1db6:	06 2e       	mov	r0, r22
    1db8:	04 c0       	rjmp	.+8      	; 0x1dc2 <_fpadd_parts+0xd0>
    1dba:	96 94       	lsr	r9
    1dbc:	87 94       	ror	r8
    1dbe:	77 94       	ror	r7
    1dc0:	67 94       	ror	r6
    1dc2:	0a 94       	dec	r0
    1dc4:	d2 f7       	brpl	.-12     	; 0x1dba <_fpadd_parts+0xc8>
    1dc6:	21 e0       	ldi	r18, 0x01	; 1
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	40 e0       	ldi	r20, 0x00	; 0
    1dcc:	50 e0       	ldi	r21, 0x00	; 0
    1dce:	04 c0       	rjmp	.+8      	; 0x1dd8 <_fpadd_parts+0xe6>
    1dd0:	22 0f       	add	r18, r18
    1dd2:	33 1f       	adc	r19, r19
    1dd4:	44 1f       	adc	r20, r20
    1dd6:	55 1f       	adc	r21, r21
    1dd8:	6a 95       	dec	r22
    1dda:	d2 f7       	brpl	.-12     	; 0x1dd0 <_fpadd_parts+0xde>
    1ddc:	21 50       	subi	r18, 0x01	; 1
    1dde:	30 40       	sbci	r19, 0x00	; 0
    1de0:	40 40       	sbci	r20, 0x00	; 0
    1de2:	50 40       	sbci	r21, 0x00	; 0
    1de4:	2e 21       	and	r18, r14
    1de6:	3f 21       	and	r19, r15
    1de8:	40 23       	and	r20, r16
    1dea:	51 23       	and	r21, r17
    1dec:	21 15       	cp	r18, r1
    1dee:	31 05       	cpc	r19, r1
    1df0:	41 05       	cpc	r20, r1
    1df2:	51 05       	cpc	r21, r1
    1df4:	21 f0       	breq	.+8      	; 0x1dfe <_fpadd_parts+0x10c>
    1df6:	21 e0       	ldi	r18, 0x01	; 1
    1df8:	30 e0       	ldi	r19, 0x00	; 0
    1dfa:	40 e0       	ldi	r20, 0x00	; 0
    1dfc:	50 e0       	ldi	r21, 0x00	; 0
    1dfe:	79 01       	movw	r14, r18
    1e00:	8a 01       	movw	r16, r20
    1e02:	e6 28       	or	r14, r6
    1e04:	f7 28       	or	r15, r7
    1e06:	08 29       	or	r16, r8
    1e08:	19 29       	or	r17, r9
    1e0a:	3c c0       	rjmp	.+120    	; 0x1e84 <_fpadd_parts+0x192>
    1e0c:	23 2b       	or	r18, r19
    1e0e:	d1 f1       	breq	.+116    	; 0x1e84 <_fpadd_parts+0x192>
    1e10:	26 0e       	add	r2, r22
    1e12:	37 1e       	adc	r3, r23
    1e14:	35 01       	movw	r6, r10
    1e16:	46 01       	movw	r8, r12
    1e18:	06 2e       	mov	r0, r22
    1e1a:	04 c0       	rjmp	.+8      	; 0x1e24 <_fpadd_parts+0x132>
    1e1c:	96 94       	lsr	r9
    1e1e:	87 94       	ror	r8
    1e20:	77 94       	ror	r7
    1e22:	67 94       	ror	r6
    1e24:	0a 94       	dec	r0
    1e26:	d2 f7       	brpl	.-12     	; 0x1e1c <_fpadd_parts+0x12a>
    1e28:	21 e0       	ldi	r18, 0x01	; 1
    1e2a:	30 e0       	ldi	r19, 0x00	; 0
    1e2c:	40 e0       	ldi	r20, 0x00	; 0
    1e2e:	50 e0       	ldi	r21, 0x00	; 0
    1e30:	04 c0       	rjmp	.+8      	; 0x1e3a <_fpadd_parts+0x148>
    1e32:	22 0f       	add	r18, r18
    1e34:	33 1f       	adc	r19, r19
    1e36:	44 1f       	adc	r20, r20
    1e38:	55 1f       	adc	r21, r21
    1e3a:	6a 95       	dec	r22
    1e3c:	d2 f7       	brpl	.-12     	; 0x1e32 <_fpadd_parts+0x140>
    1e3e:	21 50       	subi	r18, 0x01	; 1
    1e40:	30 40       	sbci	r19, 0x00	; 0
    1e42:	40 40       	sbci	r20, 0x00	; 0
    1e44:	50 40       	sbci	r21, 0x00	; 0
    1e46:	2a 21       	and	r18, r10
    1e48:	3b 21       	and	r19, r11
    1e4a:	4c 21       	and	r20, r12
    1e4c:	5d 21       	and	r21, r13
    1e4e:	21 15       	cp	r18, r1
    1e50:	31 05       	cpc	r19, r1
    1e52:	41 05       	cpc	r20, r1
    1e54:	51 05       	cpc	r21, r1
    1e56:	21 f0       	breq	.+8      	; 0x1e60 <_fpadd_parts+0x16e>
    1e58:	21 e0       	ldi	r18, 0x01	; 1
    1e5a:	30 e0       	ldi	r19, 0x00	; 0
    1e5c:	40 e0       	ldi	r20, 0x00	; 0
    1e5e:	50 e0       	ldi	r21, 0x00	; 0
    1e60:	59 01       	movw	r10, r18
    1e62:	6a 01       	movw	r12, r20
    1e64:	a6 28       	or	r10, r6
    1e66:	b7 28       	or	r11, r7
    1e68:	c8 28       	or	r12, r8
    1e6a:	d9 28       	or	r13, r9
    1e6c:	0b c0       	rjmp	.+22     	; 0x1e84 <_fpadd_parts+0x192>
    1e6e:	82 15       	cp	r24, r2
    1e70:	93 05       	cpc	r25, r3
    1e72:	2c f0       	brlt	.+10     	; 0x1e7e <_fpadd_parts+0x18c>
    1e74:	1c 01       	movw	r2, r24
    1e76:	aa 24       	eor	r10, r10
    1e78:	bb 24       	eor	r11, r11
    1e7a:	65 01       	movw	r12, r10
    1e7c:	03 c0       	rjmp	.+6      	; 0x1e84 <_fpadd_parts+0x192>
    1e7e:	ee 24       	eor	r14, r14
    1e80:	ff 24       	eor	r15, r15
    1e82:	87 01       	movw	r16, r14
    1e84:	11 96       	adiw	r26, 0x01	; 1
    1e86:	9c 91       	ld	r25, X
    1e88:	d2 01       	movw	r26, r4
    1e8a:	11 96       	adiw	r26, 0x01	; 1
    1e8c:	8c 91       	ld	r24, X
    1e8e:	98 17       	cp	r25, r24
    1e90:	09 f4       	brne	.+2      	; 0x1e94 <_fpadd_parts+0x1a2>
    1e92:	45 c0       	rjmp	.+138    	; 0x1f1e <_fpadd_parts+0x22c>
    1e94:	99 23       	and	r25, r25
    1e96:	39 f0       	breq	.+14     	; 0x1ea6 <_fpadd_parts+0x1b4>
    1e98:	a8 01       	movw	r20, r16
    1e9a:	97 01       	movw	r18, r14
    1e9c:	2a 19       	sub	r18, r10
    1e9e:	3b 09       	sbc	r19, r11
    1ea0:	4c 09       	sbc	r20, r12
    1ea2:	5d 09       	sbc	r21, r13
    1ea4:	06 c0       	rjmp	.+12     	; 0x1eb2 <_fpadd_parts+0x1c0>
    1ea6:	a6 01       	movw	r20, r12
    1ea8:	95 01       	movw	r18, r10
    1eaa:	2e 19       	sub	r18, r14
    1eac:	3f 09       	sbc	r19, r15
    1eae:	40 0b       	sbc	r20, r16
    1eb0:	51 0b       	sbc	r21, r17
    1eb2:	57 fd       	sbrc	r21, 7
    1eb4:	08 c0       	rjmp	.+16     	; 0x1ec6 <_fpadd_parts+0x1d4>
    1eb6:	11 82       	std	Z+1, r1	; 0x01
    1eb8:	33 82       	std	Z+3, r3	; 0x03
    1eba:	22 82       	std	Z+2, r2	; 0x02
    1ebc:	24 83       	std	Z+4, r18	; 0x04
    1ebe:	35 83       	std	Z+5, r19	; 0x05
    1ec0:	46 83       	std	Z+6, r20	; 0x06
    1ec2:	57 83       	std	Z+7, r21	; 0x07
    1ec4:	1d c0       	rjmp	.+58     	; 0x1f00 <_fpadd_parts+0x20e>
    1ec6:	81 e0       	ldi	r24, 0x01	; 1
    1ec8:	81 83       	std	Z+1, r24	; 0x01
    1eca:	33 82       	std	Z+3, r3	; 0x03
    1ecc:	22 82       	std	Z+2, r2	; 0x02
    1ece:	88 27       	eor	r24, r24
    1ed0:	99 27       	eor	r25, r25
    1ed2:	dc 01       	movw	r26, r24
    1ed4:	82 1b       	sub	r24, r18
    1ed6:	93 0b       	sbc	r25, r19
    1ed8:	a4 0b       	sbc	r26, r20
    1eda:	b5 0b       	sbc	r27, r21
    1edc:	84 83       	std	Z+4, r24	; 0x04
    1ede:	95 83       	std	Z+5, r25	; 0x05
    1ee0:	a6 83       	std	Z+6, r26	; 0x06
    1ee2:	b7 83       	std	Z+7, r27	; 0x07
    1ee4:	0d c0       	rjmp	.+26     	; 0x1f00 <_fpadd_parts+0x20e>
    1ee6:	22 0f       	add	r18, r18
    1ee8:	33 1f       	adc	r19, r19
    1eea:	44 1f       	adc	r20, r20
    1eec:	55 1f       	adc	r21, r21
    1eee:	24 83       	std	Z+4, r18	; 0x04
    1ef0:	35 83       	std	Z+5, r19	; 0x05
    1ef2:	46 83       	std	Z+6, r20	; 0x06
    1ef4:	57 83       	std	Z+7, r21	; 0x07
    1ef6:	82 81       	ldd	r24, Z+2	; 0x02
    1ef8:	93 81       	ldd	r25, Z+3	; 0x03
    1efa:	01 97       	sbiw	r24, 0x01	; 1
    1efc:	93 83       	std	Z+3, r25	; 0x03
    1efe:	82 83       	std	Z+2, r24	; 0x02
    1f00:	24 81       	ldd	r18, Z+4	; 0x04
    1f02:	35 81       	ldd	r19, Z+5	; 0x05
    1f04:	46 81       	ldd	r20, Z+6	; 0x06
    1f06:	57 81       	ldd	r21, Z+7	; 0x07
    1f08:	da 01       	movw	r26, r20
    1f0a:	c9 01       	movw	r24, r18
    1f0c:	01 97       	sbiw	r24, 0x01	; 1
    1f0e:	a1 09       	sbc	r26, r1
    1f10:	b1 09       	sbc	r27, r1
    1f12:	8f 5f       	subi	r24, 0xFF	; 255
    1f14:	9f 4f       	sbci	r25, 0xFF	; 255
    1f16:	af 4f       	sbci	r26, 0xFF	; 255
    1f18:	bf 43       	sbci	r27, 0x3F	; 63
    1f1a:	28 f3       	brcs	.-54     	; 0x1ee6 <_fpadd_parts+0x1f4>
    1f1c:	0b c0       	rjmp	.+22     	; 0x1f34 <_fpadd_parts+0x242>
    1f1e:	91 83       	std	Z+1, r25	; 0x01
    1f20:	33 82       	std	Z+3, r3	; 0x03
    1f22:	22 82       	std	Z+2, r2	; 0x02
    1f24:	ea 0c       	add	r14, r10
    1f26:	fb 1c       	adc	r15, r11
    1f28:	0c 1d       	adc	r16, r12
    1f2a:	1d 1d       	adc	r17, r13
    1f2c:	e4 82       	std	Z+4, r14	; 0x04
    1f2e:	f5 82       	std	Z+5, r15	; 0x05
    1f30:	06 83       	std	Z+6, r16	; 0x06
    1f32:	17 83       	std	Z+7, r17	; 0x07
    1f34:	83 e0       	ldi	r24, 0x03	; 3
    1f36:	80 83       	st	Z, r24
    1f38:	24 81       	ldd	r18, Z+4	; 0x04
    1f3a:	35 81       	ldd	r19, Z+5	; 0x05
    1f3c:	46 81       	ldd	r20, Z+6	; 0x06
    1f3e:	57 81       	ldd	r21, Z+7	; 0x07
    1f40:	57 ff       	sbrs	r21, 7
    1f42:	1a c0       	rjmp	.+52     	; 0x1f78 <_fpadd_parts+0x286>
    1f44:	c9 01       	movw	r24, r18
    1f46:	aa 27       	eor	r26, r26
    1f48:	97 fd       	sbrc	r25, 7
    1f4a:	a0 95       	com	r26
    1f4c:	ba 2f       	mov	r27, r26
    1f4e:	81 70       	andi	r24, 0x01	; 1
    1f50:	90 70       	andi	r25, 0x00	; 0
    1f52:	a0 70       	andi	r26, 0x00	; 0
    1f54:	b0 70       	andi	r27, 0x00	; 0
    1f56:	56 95       	lsr	r21
    1f58:	47 95       	ror	r20
    1f5a:	37 95       	ror	r19
    1f5c:	27 95       	ror	r18
    1f5e:	82 2b       	or	r24, r18
    1f60:	93 2b       	or	r25, r19
    1f62:	a4 2b       	or	r26, r20
    1f64:	b5 2b       	or	r27, r21
    1f66:	84 83       	std	Z+4, r24	; 0x04
    1f68:	95 83       	std	Z+5, r25	; 0x05
    1f6a:	a6 83       	std	Z+6, r26	; 0x06
    1f6c:	b7 83       	std	Z+7, r27	; 0x07
    1f6e:	82 81       	ldd	r24, Z+2	; 0x02
    1f70:	93 81       	ldd	r25, Z+3	; 0x03
    1f72:	01 96       	adiw	r24, 0x01	; 1
    1f74:	93 83       	std	Z+3, r25	; 0x03
    1f76:	82 83       	std	Z+2, r24	; 0x02
    1f78:	df 01       	movw	r26, r30
    1f7a:	01 c0       	rjmp	.+2      	; 0x1f7e <_fpadd_parts+0x28c>
    1f7c:	d2 01       	movw	r26, r4
    1f7e:	cd 01       	movw	r24, r26
    1f80:	cd b7       	in	r28, 0x3d	; 61
    1f82:	de b7       	in	r29, 0x3e	; 62
    1f84:	e2 e1       	ldi	r30, 0x12	; 18
    1f86:	0c 94 ec 29 	jmp	0x53d8	; 0x53d8 <__epilogue_restores__>

00001f8a <__subsf3>:
    1f8a:	a0 e2       	ldi	r26, 0x20	; 32
    1f8c:	b0 e0       	ldi	r27, 0x00	; 0
    1f8e:	eb ec       	ldi	r30, 0xCB	; 203
    1f90:	ff e0       	ldi	r31, 0x0F	; 15
    1f92:	0c 94 dc 29 	jmp	0x53b8	; 0x53b8 <__prologue_saves__+0x18>
    1f96:	69 83       	std	Y+1, r22	; 0x01
    1f98:	7a 83       	std	Y+2, r23	; 0x02
    1f9a:	8b 83       	std	Y+3, r24	; 0x03
    1f9c:	9c 83       	std	Y+4, r25	; 0x04
    1f9e:	2d 83       	std	Y+5, r18	; 0x05
    1fa0:	3e 83       	std	Y+6, r19	; 0x06
    1fa2:	4f 83       	std	Y+7, r20	; 0x07
    1fa4:	58 87       	std	Y+8, r21	; 0x08
    1fa6:	e9 e0       	ldi	r30, 0x09	; 9
    1fa8:	ee 2e       	mov	r14, r30
    1faa:	f1 2c       	mov	r15, r1
    1fac:	ec 0e       	add	r14, r28
    1fae:	fd 1e       	adc	r15, r29
    1fb0:	ce 01       	movw	r24, r28
    1fb2:	01 96       	adiw	r24, 0x01	; 1
    1fb4:	b7 01       	movw	r22, r14
    1fb6:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1fba:	8e 01       	movw	r16, r28
    1fbc:	0f 5e       	subi	r16, 0xEF	; 239
    1fbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc0:	ce 01       	movw	r24, r28
    1fc2:	05 96       	adiw	r24, 0x05	; 5
    1fc4:	b8 01       	movw	r22, r16
    1fc6:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1fca:	8a 89       	ldd	r24, Y+18	; 0x12
    1fcc:	91 e0       	ldi	r25, 0x01	; 1
    1fce:	89 27       	eor	r24, r25
    1fd0:	8a 8b       	std	Y+18, r24	; 0x12
    1fd2:	c7 01       	movw	r24, r14
    1fd4:	b8 01       	movw	r22, r16
    1fd6:	ae 01       	movw	r20, r28
    1fd8:	47 5e       	subi	r20, 0xE7	; 231
    1fda:	5f 4f       	sbci	r21, 0xFF	; 255
    1fdc:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <_fpadd_parts>
    1fe0:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    1fe4:	a0 96       	adiw	r28, 0x20	; 32
    1fe6:	e6 e0       	ldi	r30, 0x06	; 6
    1fe8:	0c 94 f8 29 	jmp	0x53f0	; 0x53f0 <__epilogue_restores__+0x18>

00001fec <__addsf3>:
    1fec:	a0 e2       	ldi	r26, 0x20	; 32
    1fee:	b0 e0       	ldi	r27, 0x00	; 0
    1ff0:	ec ef       	ldi	r30, 0xFC	; 252
    1ff2:	ff e0       	ldi	r31, 0x0F	; 15
    1ff4:	0c 94 dc 29 	jmp	0x53b8	; 0x53b8 <__prologue_saves__+0x18>
    1ff8:	69 83       	std	Y+1, r22	; 0x01
    1ffa:	7a 83       	std	Y+2, r23	; 0x02
    1ffc:	8b 83       	std	Y+3, r24	; 0x03
    1ffe:	9c 83       	std	Y+4, r25	; 0x04
    2000:	2d 83       	std	Y+5, r18	; 0x05
    2002:	3e 83       	std	Y+6, r19	; 0x06
    2004:	4f 83       	std	Y+7, r20	; 0x07
    2006:	58 87       	std	Y+8, r21	; 0x08
    2008:	f9 e0       	ldi	r31, 0x09	; 9
    200a:	ef 2e       	mov	r14, r31
    200c:	f1 2c       	mov	r15, r1
    200e:	ec 0e       	add	r14, r28
    2010:	fd 1e       	adc	r15, r29
    2012:	ce 01       	movw	r24, r28
    2014:	01 96       	adiw	r24, 0x01	; 1
    2016:	b7 01       	movw	r22, r14
    2018:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    201c:	8e 01       	movw	r16, r28
    201e:	0f 5e       	subi	r16, 0xEF	; 239
    2020:	1f 4f       	sbci	r17, 0xFF	; 255
    2022:	ce 01       	movw	r24, r28
    2024:	05 96       	adiw	r24, 0x05	; 5
    2026:	b8 01       	movw	r22, r16
    2028:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    202c:	c7 01       	movw	r24, r14
    202e:	b8 01       	movw	r22, r16
    2030:	ae 01       	movw	r20, r28
    2032:	47 5e       	subi	r20, 0xE7	; 231
    2034:	5f 4f       	sbci	r21, 0xFF	; 255
    2036:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <_fpadd_parts>
    203a:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    203e:	a0 96       	adiw	r28, 0x20	; 32
    2040:	e6 e0       	ldi	r30, 0x06	; 6
    2042:	0c 94 f8 29 	jmp	0x53f0	; 0x53f0 <__epilogue_restores__+0x18>

00002046 <__mulsf3>:
    2046:	a0 e2       	ldi	r26, 0x20	; 32
    2048:	b0 e0       	ldi	r27, 0x00	; 0
    204a:	e9 e2       	ldi	r30, 0x29	; 41
    204c:	f0 e1       	ldi	r31, 0x10	; 16
    204e:	0c 94 d0 29 	jmp	0x53a0	; 0x53a0 <__prologue_saves__>
    2052:	69 83       	std	Y+1, r22	; 0x01
    2054:	7a 83       	std	Y+2, r23	; 0x02
    2056:	8b 83       	std	Y+3, r24	; 0x03
    2058:	9c 83       	std	Y+4, r25	; 0x04
    205a:	2d 83       	std	Y+5, r18	; 0x05
    205c:	3e 83       	std	Y+6, r19	; 0x06
    205e:	4f 83       	std	Y+7, r20	; 0x07
    2060:	58 87       	std	Y+8, r21	; 0x08
    2062:	ce 01       	movw	r24, r28
    2064:	01 96       	adiw	r24, 0x01	; 1
    2066:	be 01       	movw	r22, r28
    2068:	67 5f       	subi	r22, 0xF7	; 247
    206a:	7f 4f       	sbci	r23, 0xFF	; 255
    206c:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2070:	ce 01       	movw	r24, r28
    2072:	05 96       	adiw	r24, 0x05	; 5
    2074:	be 01       	movw	r22, r28
    2076:	6f 5e       	subi	r22, 0xEF	; 239
    2078:	7f 4f       	sbci	r23, 0xFF	; 255
    207a:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    207e:	99 85       	ldd	r25, Y+9	; 0x09
    2080:	92 30       	cpi	r25, 0x02	; 2
    2082:	88 f0       	brcs	.+34     	; 0x20a6 <__mulsf3+0x60>
    2084:	89 89       	ldd	r24, Y+17	; 0x11
    2086:	82 30       	cpi	r24, 0x02	; 2
    2088:	c8 f0       	brcs	.+50     	; 0x20bc <__mulsf3+0x76>
    208a:	94 30       	cpi	r25, 0x04	; 4
    208c:	19 f4       	brne	.+6      	; 0x2094 <__mulsf3+0x4e>
    208e:	82 30       	cpi	r24, 0x02	; 2
    2090:	51 f4       	brne	.+20     	; 0x20a6 <__mulsf3+0x60>
    2092:	04 c0       	rjmp	.+8      	; 0x209c <__mulsf3+0x56>
    2094:	84 30       	cpi	r24, 0x04	; 4
    2096:	29 f4       	brne	.+10     	; 0x20a2 <__mulsf3+0x5c>
    2098:	92 30       	cpi	r25, 0x02	; 2
    209a:	81 f4       	brne	.+32     	; 0x20bc <__mulsf3+0x76>
    209c:	83 e8       	ldi	r24, 0x83	; 131
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	c6 c0       	rjmp	.+396    	; 0x222e <__mulsf3+0x1e8>
    20a2:	92 30       	cpi	r25, 0x02	; 2
    20a4:	49 f4       	brne	.+18     	; 0x20b8 <__mulsf3+0x72>
    20a6:	20 e0       	ldi	r18, 0x00	; 0
    20a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    20aa:	8a 89       	ldd	r24, Y+18	; 0x12
    20ac:	98 13       	cpse	r25, r24
    20ae:	21 e0       	ldi	r18, 0x01	; 1
    20b0:	2a 87       	std	Y+10, r18	; 0x0a
    20b2:	ce 01       	movw	r24, r28
    20b4:	09 96       	adiw	r24, 0x09	; 9
    20b6:	bb c0       	rjmp	.+374    	; 0x222e <__mulsf3+0x1e8>
    20b8:	82 30       	cpi	r24, 0x02	; 2
    20ba:	49 f4       	brne	.+18     	; 0x20ce <__mulsf3+0x88>
    20bc:	20 e0       	ldi	r18, 0x00	; 0
    20be:	9a 85       	ldd	r25, Y+10	; 0x0a
    20c0:	8a 89       	ldd	r24, Y+18	; 0x12
    20c2:	98 13       	cpse	r25, r24
    20c4:	21 e0       	ldi	r18, 0x01	; 1
    20c6:	2a 8b       	std	Y+18, r18	; 0x12
    20c8:	ce 01       	movw	r24, r28
    20ca:	41 96       	adiw	r24, 0x11	; 17
    20cc:	b0 c0       	rjmp	.+352    	; 0x222e <__mulsf3+0x1e8>
    20ce:	2d 84       	ldd	r2, Y+13	; 0x0d
    20d0:	3e 84       	ldd	r3, Y+14	; 0x0e
    20d2:	4f 84       	ldd	r4, Y+15	; 0x0f
    20d4:	58 88       	ldd	r5, Y+16	; 0x10
    20d6:	6d 88       	ldd	r6, Y+21	; 0x15
    20d8:	7e 88       	ldd	r7, Y+22	; 0x16
    20da:	8f 88       	ldd	r8, Y+23	; 0x17
    20dc:	98 8c       	ldd	r9, Y+24	; 0x18
    20de:	ee 24       	eor	r14, r14
    20e0:	ff 24       	eor	r15, r15
    20e2:	87 01       	movw	r16, r14
    20e4:	aa 24       	eor	r10, r10
    20e6:	bb 24       	eor	r11, r11
    20e8:	65 01       	movw	r12, r10
    20ea:	40 e0       	ldi	r20, 0x00	; 0
    20ec:	50 e0       	ldi	r21, 0x00	; 0
    20ee:	60 e0       	ldi	r22, 0x00	; 0
    20f0:	70 e0       	ldi	r23, 0x00	; 0
    20f2:	e0 e0       	ldi	r30, 0x00	; 0
    20f4:	f0 e0       	ldi	r31, 0x00	; 0
    20f6:	c1 01       	movw	r24, r2
    20f8:	81 70       	andi	r24, 0x01	; 1
    20fa:	90 70       	andi	r25, 0x00	; 0
    20fc:	89 2b       	or	r24, r25
    20fe:	e9 f0       	breq	.+58     	; 0x213a <__mulsf3+0xf4>
    2100:	e6 0c       	add	r14, r6
    2102:	f7 1c       	adc	r15, r7
    2104:	08 1d       	adc	r16, r8
    2106:	19 1d       	adc	r17, r9
    2108:	9a 01       	movw	r18, r20
    210a:	ab 01       	movw	r20, r22
    210c:	2a 0d       	add	r18, r10
    210e:	3b 1d       	adc	r19, r11
    2110:	4c 1d       	adc	r20, r12
    2112:	5d 1d       	adc	r21, r13
    2114:	80 e0       	ldi	r24, 0x00	; 0
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	a0 e0       	ldi	r26, 0x00	; 0
    211a:	b0 e0       	ldi	r27, 0x00	; 0
    211c:	e6 14       	cp	r14, r6
    211e:	f7 04       	cpc	r15, r7
    2120:	08 05       	cpc	r16, r8
    2122:	19 05       	cpc	r17, r9
    2124:	20 f4       	brcc	.+8      	; 0x212e <__mulsf3+0xe8>
    2126:	81 e0       	ldi	r24, 0x01	; 1
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	a0 e0       	ldi	r26, 0x00	; 0
    212c:	b0 e0       	ldi	r27, 0x00	; 0
    212e:	ba 01       	movw	r22, r20
    2130:	a9 01       	movw	r20, r18
    2132:	48 0f       	add	r20, r24
    2134:	59 1f       	adc	r21, r25
    2136:	6a 1f       	adc	r22, r26
    2138:	7b 1f       	adc	r23, r27
    213a:	aa 0c       	add	r10, r10
    213c:	bb 1c       	adc	r11, r11
    213e:	cc 1c       	adc	r12, r12
    2140:	dd 1c       	adc	r13, r13
    2142:	97 fe       	sbrs	r9, 7
    2144:	08 c0       	rjmp	.+16     	; 0x2156 <__mulsf3+0x110>
    2146:	81 e0       	ldi	r24, 0x01	; 1
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	a0 e0       	ldi	r26, 0x00	; 0
    214c:	b0 e0       	ldi	r27, 0x00	; 0
    214e:	a8 2a       	or	r10, r24
    2150:	b9 2a       	or	r11, r25
    2152:	ca 2a       	or	r12, r26
    2154:	db 2a       	or	r13, r27
    2156:	31 96       	adiw	r30, 0x01	; 1
    2158:	e0 32       	cpi	r30, 0x20	; 32
    215a:	f1 05       	cpc	r31, r1
    215c:	49 f0       	breq	.+18     	; 0x2170 <__mulsf3+0x12a>
    215e:	66 0c       	add	r6, r6
    2160:	77 1c       	adc	r7, r7
    2162:	88 1c       	adc	r8, r8
    2164:	99 1c       	adc	r9, r9
    2166:	56 94       	lsr	r5
    2168:	47 94       	ror	r4
    216a:	37 94       	ror	r3
    216c:	27 94       	ror	r2
    216e:	c3 cf       	rjmp	.-122    	; 0x20f6 <__mulsf3+0xb0>
    2170:	fa 85       	ldd	r31, Y+10	; 0x0a
    2172:	ea 89       	ldd	r30, Y+18	; 0x12
    2174:	2b 89       	ldd	r18, Y+19	; 0x13
    2176:	3c 89       	ldd	r19, Y+20	; 0x14
    2178:	8b 85       	ldd	r24, Y+11	; 0x0b
    217a:	9c 85       	ldd	r25, Y+12	; 0x0c
    217c:	28 0f       	add	r18, r24
    217e:	39 1f       	adc	r19, r25
    2180:	2e 5f       	subi	r18, 0xFE	; 254
    2182:	3f 4f       	sbci	r19, 0xFF	; 255
    2184:	17 c0       	rjmp	.+46     	; 0x21b4 <__mulsf3+0x16e>
    2186:	ca 01       	movw	r24, r20
    2188:	81 70       	andi	r24, 0x01	; 1
    218a:	90 70       	andi	r25, 0x00	; 0
    218c:	89 2b       	or	r24, r25
    218e:	61 f0       	breq	.+24     	; 0x21a8 <__mulsf3+0x162>
    2190:	16 95       	lsr	r17
    2192:	07 95       	ror	r16
    2194:	f7 94       	ror	r15
    2196:	e7 94       	ror	r14
    2198:	80 e0       	ldi	r24, 0x00	; 0
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	a0 e0       	ldi	r26, 0x00	; 0
    219e:	b0 e8       	ldi	r27, 0x80	; 128
    21a0:	e8 2a       	or	r14, r24
    21a2:	f9 2a       	or	r15, r25
    21a4:	0a 2b       	or	r16, r26
    21a6:	1b 2b       	or	r17, r27
    21a8:	76 95       	lsr	r23
    21aa:	67 95       	ror	r22
    21ac:	57 95       	ror	r21
    21ae:	47 95       	ror	r20
    21b0:	2f 5f       	subi	r18, 0xFF	; 255
    21b2:	3f 4f       	sbci	r19, 0xFF	; 255
    21b4:	77 fd       	sbrc	r23, 7
    21b6:	e7 cf       	rjmp	.-50     	; 0x2186 <__mulsf3+0x140>
    21b8:	0c c0       	rjmp	.+24     	; 0x21d2 <__mulsf3+0x18c>
    21ba:	44 0f       	add	r20, r20
    21bc:	55 1f       	adc	r21, r21
    21be:	66 1f       	adc	r22, r22
    21c0:	77 1f       	adc	r23, r23
    21c2:	17 fd       	sbrc	r17, 7
    21c4:	41 60       	ori	r20, 0x01	; 1
    21c6:	ee 0c       	add	r14, r14
    21c8:	ff 1c       	adc	r15, r15
    21ca:	00 1f       	adc	r16, r16
    21cc:	11 1f       	adc	r17, r17
    21ce:	21 50       	subi	r18, 0x01	; 1
    21d0:	30 40       	sbci	r19, 0x00	; 0
    21d2:	40 30       	cpi	r20, 0x00	; 0
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	59 07       	cpc	r21, r25
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	69 07       	cpc	r22, r25
    21dc:	90 e4       	ldi	r25, 0x40	; 64
    21de:	79 07       	cpc	r23, r25
    21e0:	60 f3       	brcs	.-40     	; 0x21ba <__mulsf3+0x174>
    21e2:	2b 8f       	std	Y+27, r18	; 0x1b
    21e4:	3c 8f       	std	Y+28, r19	; 0x1c
    21e6:	db 01       	movw	r26, r22
    21e8:	ca 01       	movw	r24, r20
    21ea:	8f 77       	andi	r24, 0x7F	; 127
    21ec:	90 70       	andi	r25, 0x00	; 0
    21ee:	a0 70       	andi	r26, 0x00	; 0
    21f0:	b0 70       	andi	r27, 0x00	; 0
    21f2:	80 34       	cpi	r24, 0x40	; 64
    21f4:	91 05       	cpc	r25, r1
    21f6:	a1 05       	cpc	r26, r1
    21f8:	b1 05       	cpc	r27, r1
    21fa:	61 f4       	brne	.+24     	; 0x2214 <__mulsf3+0x1ce>
    21fc:	47 fd       	sbrc	r20, 7
    21fe:	0a c0       	rjmp	.+20     	; 0x2214 <__mulsf3+0x1ce>
    2200:	e1 14       	cp	r14, r1
    2202:	f1 04       	cpc	r15, r1
    2204:	01 05       	cpc	r16, r1
    2206:	11 05       	cpc	r17, r1
    2208:	29 f0       	breq	.+10     	; 0x2214 <__mulsf3+0x1ce>
    220a:	40 5c       	subi	r20, 0xC0	; 192
    220c:	5f 4f       	sbci	r21, 0xFF	; 255
    220e:	6f 4f       	sbci	r22, 0xFF	; 255
    2210:	7f 4f       	sbci	r23, 0xFF	; 255
    2212:	40 78       	andi	r20, 0x80	; 128
    2214:	1a 8e       	std	Y+26, r1	; 0x1a
    2216:	fe 17       	cp	r31, r30
    2218:	11 f0       	breq	.+4      	; 0x221e <__mulsf3+0x1d8>
    221a:	81 e0       	ldi	r24, 0x01	; 1
    221c:	8a 8f       	std	Y+26, r24	; 0x1a
    221e:	4d 8f       	std	Y+29, r20	; 0x1d
    2220:	5e 8f       	std	Y+30, r21	; 0x1e
    2222:	6f 8f       	std	Y+31, r22	; 0x1f
    2224:	78 a3       	std	Y+32, r23	; 0x20
    2226:	83 e0       	ldi	r24, 0x03	; 3
    2228:	89 8f       	std	Y+25, r24	; 0x19
    222a:	ce 01       	movw	r24, r28
    222c:	49 96       	adiw	r24, 0x19	; 25
    222e:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    2232:	a0 96       	adiw	r28, 0x20	; 32
    2234:	e2 e1       	ldi	r30, 0x12	; 18
    2236:	0c 94 ec 29 	jmp	0x53d8	; 0x53d8 <__epilogue_restores__>

0000223a <__divsf3>:
    223a:	a8 e1       	ldi	r26, 0x18	; 24
    223c:	b0 e0       	ldi	r27, 0x00	; 0
    223e:	e3 e2       	ldi	r30, 0x23	; 35
    2240:	f1 e1       	ldi	r31, 0x11	; 17
    2242:	0c 94 d8 29 	jmp	0x53b0	; 0x53b0 <__prologue_saves__+0x10>
    2246:	69 83       	std	Y+1, r22	; 0x01
    2248:	7a 83       	std	Y+2, r23	; 0x02
    224a:	8b 83       	std	Y+3, r24	; 0x03
    224c:	9c 83       	std	Y+4, r25	; 0x04
    224e:	2d 83       	std	Y+5, r18	; 0x05
    2250:	3e 83       	std	Y+6, r19	; 0x06
    2252:	4f 83       	std	Y+7, r20	; 0x07
    2254:	58 87       	std	Y+8, r21	; 0x08
    2256:	b9 e0       	ldi	r27, 0x09	; 9
    2258:	eb 2e       	mov	r14, r27
    225a:	f1 2c       	mov	r15, r1
    225c:	ec 0e       	add	r14, r28
    225e:	fd 1e       	adc	r15, r29
    2260:	ce 01       	movw	r24, r28
    2262:	01 96       	adiw	r24, 0x01	; 1
    2264:	b7 01       	movw	r22, r14
    2266:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    226a:	8e 01       	movw	r16, r28
    226c:	0f 5e       	subi	r16, 0xEF	; 239
    226e:	1f 4f       	sbci	r17, 0xFF	; 255
    2270:	ce 01       	movw	r24, r28
    2272:	05 96       	adiw	r24, 0x05	; 5
    2274:	b8 01       	movw	r22, r16
    2276:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    227a:	29 85       	ldd	r18, Y+9	; 0x09
    227c:	22 30       	cpi	r18, 0x02	; 2
    227e:	08 f4       	brcc	.+2      	; 0x2282 <__divsf3+0x48>
    2280:	7e c0       	rjmp	.+252    	; 0x237e <__divsf3+0x144>
    2282:	39 89       	ldd	r19, Y+17	; 0x11
    2284:	32 30       	cpi	r19, 0x02	; 2
    2286:	10 f4       	brcc	.+4      	; 0x228c <__divsf3+0x52>
    2288:	b8 01       	movw	r22, r16
    228a:	7c c0       	rjmp	.+248    	; 0x2384 <__divsf3+0x14a>
    228c:	8a 85       	ldd	r24, Y+10	; 0x0a
    228e:	9a 89       	ldd	r25, Y+18	; 0x12
    2290:	89 27       	eor	r24, r25
    2292:	8a 87       	std	Y+10, r24	; 0x0a
    2294:	24 30       	cpi	r18, 0x04	; 4
    2296:	11 f0       	breq	.+4      	; 0x229c <__divsf3+0x62>
    2298:	22 30       	cpi	r18, 0x02	; 2
    229a:	31 f4       	brne	.+12     	; 0x22a8 <__divsf3+0x6e>
    229c:	23 17       	cp	r18, r19
    229e:	09 f0       	breq	.+2      	; 0x22a2 <__divsf3+0x68>
    22a0:	6e c0       	rjmp	.+220    	; 0x237e <__divsf3+0x144>
    22a2:	63 e8       	ldi	r22, 0x83	; 131
    22a4:	70 e0       	ldi	r23, 0x00	; 0
    22a6:	6e c0       	rjmp	.+220    	; 0x2384 <__divsf3+0x14a>
    22a8:	34 30       	cpi	r19, 0x04	; 4
    22aa:	39 f4       	brne	.+14     	; 0x22ba <__divsf3+0x80>
    22ac:	1d 86       	std	Y+13, r1	; 0x0d
    22ae:	1e 86       	std	Y+14, r1	; 0x0e
    22b0:	1f 86       	std	Y+15, r1	; 0x0f
    22b2:	18 8a       	std	Y+16, r1	; 0x10
    22b4:	1c 86       	std	Y+12, r1	; 0x0c
    22b6:	1b 86       	std	Y+11, r1	; 0x0b
    22b8:	04 c0       	rjmp	.+8      	; 0x22c2 <__divsf3+0x88>
    22ba:	32 30       	cpi	r19, 0x02	; 2
    22bc:	21 f4       	brne	.+8      	; 0x22c6 <__divsf3+0x8c>
    22be:	84 e0       	ldi	r24, 0x04	; 4
    22c0:	89 87       	std	Y+9, r24	; 0x09
    22c2:	b7 01       	movw	r22, r14
    22c4:	5f c0       	rjmp	.+190    	; 0x2384 <__divsf3+0x14a>
    22c6:	2b 85       	ldd	r18, Y+11	; 0x0b
    22c8:	3c 85       	ldd	r19, Y+12	; 0x0c
    22ca:	8b 89       	ldd	r24, Y+19	; 0x13
    22cc:	9c 89       	ldd	r25, Y+20	; 0x14
    22ce:	28 1b       	sub	r18, r24
    22d0:	39 0b       	sbc	r19, r25
    22d2:	3c 87       	std	Y+12, r19	; 0x0c
    22d4:	2b 87       	std	Y+11, r18	; 0x0b
    22d6:	ed 84       	ldd	r14, Y+13	; 0x0d
    22d8:	fe 84       	ldd	r15, Y+14	; 0x0e
    22da:	0f 85       	ldd	r16, Y+15	; 0x0f
    22dc:	18 89       	ldd	r17, Y+16	; 0x10
    22de:	ad 88       	ldd	r10, Y+21	; 0x15
    22e0:	be 88       	ldd	r11, Y+22	; 0x16
    22e2:	cf 88       	ldd	r12, Y+23	; 0x17
    22e4:	d8 8c       	ldd	r13, Y+24	; 0x18
    22e6:	ea 14       	cp	r14, r10
    22e8:	fb 04       	cpc	r15, r11
    22ea:	0c 05       	cpc	r16, r12
    22ec:	1d 05       	cpc	r17, r13
    22ee:	40 f4       	brcc	.+16     	; 0x2300 <__divsf3+0xc6>
    22f0:	ee 0c       	add	r14, r14
    22f2:	ff 1c       	adc	r15, r15
    22f4:	00 1f       	adc	r16, r16
    22f6:	11 1f       	adc	r17, r17
    22f8:	21 50       	subi	r18, 0x01	; 1
    22fa:	30 40       	sbci	r19, 0x00	; 0
    22fc:	3c 87       	std	Y+12, r19	; 0x0c
    22fe:	2b 87       	std	Y+11, r18	; 0x0b
    2300:	20 e0       	ldi	r18, 0x00	; 0
    2302:	30 e0       	ldi	r19, 0x00	; 0
    2304:	40 e0       	ldi	r20, 0x00	; 0
    2306:	50 e0       	ldi	r21, 0x00	; 0
    2308:	80 e0       	ldi	r24, 0x00	; 0
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	a0 e0       	ldi	r26, 0x00	; 0
    230e:	b0 e4       	ldi	r27, 0x40	; 64
    2310:	60 e0       	ldi	r22, 0x00	; 0
    2312:	70 e0       	ldi	r23, 0x00	; 0
    2314:	ea 14       	cp	r14, r10
    2316:	fb 04       	cpc	r15, r11
    2318:	0c 05       	cpc	r16, r12
    231a:	1d 05       	cpc	r17, r13
    231c:	40 f0       	brcs	.+16     	; 0x232e <__divsf3+0xf4>
    231e:	28 2b       	or	r18, r24
    2320:	39 2b       	or	r19, r25
    2322:	4a 2b       	or	r20, r26
    2324:	5b 2b       	or	r21, r27
    2326:	ea 18       	sub	r14, r10
    2328:	fb 08       	sbc	r15, r11
    232a:	0c 09       	sbc	r16, r12
    232c:	1d 09       	sbc	r17, r13
    232e:	b6 95       	lsr	r27
    2330:	a7 95       	ror	r26
    2332:	97 95       	ror	r25
    2334:	87 95       	ror	r24
    2336:	ee 0c       	add	r14, r14
    2338:	ff 1c       	adc	r15, r15
    233a:	00 1f       	adc	r16, r16
    233c:	11 1f       	adc	r17, r17
    233e:	6f 5f       	subi	r22, 0xFF	; 255
    2340:	7f 4f       	sbci	r23, 0xFF	; 255
    2342:	6f 31       	cpi	r22, 0x1F	; 31
    2344:	71 05       	cpc	r23, r1
    2346:	31 f7       	brne	.-52     	; 0x2314 <__divsf3+0xda>
    2348:	da 01       	movw	r26, r20
    234a:	c9 01       	movw	r24, r18
    234c:	8f 77       	andi	r24, 0x7F	; 127
    234e:	90 70       	andi	r25, 0x00	; 0
    2350:	a0 70       	andi	r26, 0x00	; 0
    2352:	b0 70       	andi	r27, 0x00	; 0
    2354:	80 34       	cpi	r24, 0x40	; 64
    2356:	91 05       	cpc	r25, r1
    2358:	a1 05       	cpc	r26, r1
    235a:	b1 05       	cpc	r27, r1
    235c:	61 f4       	brne	.+24     	; 0x2376 <__divsf3+0x13c>
    235e:	27 fd       	sbrc	r18, 7
    2360:	0a c0       	rjmp	.+20     	; 0x2376 <__divsf3+0x13c>
    2362:	e1 14       	cp	r14, r1
    2364:	f1 04       	cpc	r15, r1
    2366:	01 05       	cpc	r16, r1
    2368:	11 05       	cpc	r17, r1
    236a:	29 f0       	breq	.+10     	; 0x2376 <__divsf3+0x13c>
    236c:	20 5c       	subi	r18, 0xC0	; 192
    236e:	3f 4f       	sbci	r19, 0xFF	; 255
    2370:	4f 4f       	sbci	r20, 0xFF	; 255
    2372:	5f 4f       	sbci	r21, 0xFF	; 255
    2374:	20 78       	andi	r18, 0x80	; 128
    2376:	2d 87       	std	Y+13, r18	; 0x0d
    2378:	3e 87       	std	Y+14, r19	; 0x0e
    237a:	4f 87       	std	Y+15, r20	; 0x0f
    237c:	58 8b       	std	Y+16, r21	; 0x10
    237e:	be 01       	movw	r22, r28
    2380:	67 5f       	subi	r22, 0xF7	; 247
    2382:	7f 4f       	sbci	r23, 0xFF	; 255
    2384:	cb 01       	movw	r24, r22
    2386:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    238a:	68 96       	adiw	r28, 0x18	; 24
    238c:	ea e0       	ldi	r30, 0x0A	; 10
    238e:	0c 94 f4 29 	jmp	0x53e8	; 0x53e8 <__epilogue_restores__+0x10>

00002392 <__gtsf2>:
    2392:	a8 e1       	ldi	r26, 0x18	; 24
    2394:	b0 e0       	ldi	r27, 0x00	; 0
    2396:	ef ec       	ldi	r30, 0xCF	; 207
    2398:	f1 e1       	ldi	r31, 0x11	; 17
    239a:	0c 94 dc 29 	jmp	0x53b8	; 0x53b8 <__prologue_saves__+0x18>
    239e:	69 83       	std	Y+1, r22	; 0x01
    23a0:	7a 83       	std	Y+2, r23	; 0x02
    23a2:	8b 83       	std	Y+3, r24	; 0x03
    23a4:	9c 83       	std	Y+4, r25	; 0x04
    23a6:	2d 83       	std	Y+5, r18	; 0x05
    23a8:	3e 83       	std	Y+6, r19	; 0x06
    23aa:	4f 83       	std	Y+7, r20	; 0x07
    23ac:	58 87       	std	Y+8, r21	; 0x08
    23ae:	89 e0       	ldi	r24, 0x09	; 9
    23b0:	e8 2e       	mov	r14, r24
    23b2:	f1 2c       	mov	r15, r1
    23b4:	ec 0e       	add	r14, r28
    23b6:	fd 1e       	adc	r15, r29
    23b8:	ce 01       	movw	r24, r28
    23ba:	01 96       	adiw	r24, 0x01	; 1
    23bc:	b7 01       	movw	r22, r14
    23be:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    23c2:	8e 01       	movw	r16, r28
    23c4:	0f 5e       	subi	r16, 0xEF	; 239
    23c6:	1f 4f       	sbci	r17, 0xFF	; 255
    23c8:	ce 01       	movw	r24, r28
    23ca:	05 96       	adiw	r24, 0x05	; 5
    23cc:	b8 01       	movw	r22, r16
    23ce:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    23d2:	89 85       	ldd	r24, Y+9	; 0x09
    23d4:	82 30       	cpi	r24, 0x02	; 2
    23d6:	40 f0       	brcs	.+16     	; 0x23e8 <__gtsf2+0x56>
    23d8:	89 89       	ldd	r24, Y+17	; 0x11
    23da:	82 30       	cpi	r24, 0x02	; 2
    23dc:	28 f0       	brcs	.+10     	; 0x23e8 <__gtsf2+0x56>
    23de:	c7 01       	movw	r24, r14
    23e0:	b8 01       	movw	r22, r16
    23e2:	0e 94 c2 14 	call	0x2984	; 0x2984 <__fpcmp_parts_f>
    23e6:	01 c0       	rjmp	.+2      	; 0x23ea <__gtsf2+0x58>
    23e8:	8f ef       	ldi	r24, 0xFF	; 255
    23ea:	68 96       	adiw	r28, 0x18	; 24
    23ec:	e6 e0       	ldi	r30, 0x06	; 6
    23ee:	0c 94 f8 29 	jmp	0x53f0	; 0x53f0 <__epilogue_restores__+0x18>

000023f2 <__gesf2>:
    23f2:	a8 e1       	ldi	r26, 0x18	; 24
    23f4:	b0 e0       	ldi	r27, 0x00	; 0
    23f6:	ef ef       	ldi	r30, 0xFF	; 255
    23f8:	f1 e1       	ldi	r31, 0x11	; 17
    23fa:	0c 94 dc 29 	jmp	0x53b8	; 0x53b8 <__prologue_saves__+0x18>
    23fe:	69 83       	std	Y+1, r22	; 0x01
    2400:	7a 83       	std	Y+2, r23	; 0x02
    2402:	8b 83       	std	Y+3, r24	; 0x03
    2404:	9c 83       	std	Y+4, r25	; 0x04
    2406:	2d 83       	std	Y+5, r18	; 0x05
    2408:	3e 83       	std	Y+6, r19	; 0x06
    240a:	4f 83       	std	Y+7, r20	; 0x07
    240c:	58 87       	std	Y+8, r21	; 0x08
    240e:	89 e0       	ldi	r24, 0x09	; 9
    2410:	e8 2e       	mov	r14, r24
    2412:	f1 2c       	mov	r15, r1
    2414:	ec 0e       	add	r14, r28
    2416:	fd 1e       	adc	r15, r29
    2418:	ce 01       	movw	r24, r28
    241a:	01 96       	adiw	r24, 0x01	; 1
    241c:	b7 01       	movw	r22, r14
    241e:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2422:	8e 01       	movw	r16, r28
    2424:	0f 5e       	subi	r16, 0xEF	; 239
    2426:	1f 4f       	sbci	r17, 0xFF	; 255
    2428:	ce 01       	movw	r24, r28
    242a:	05 96       	adiw	r24, 0x05	; 5
    242c:	b8 01       	movw	r22, r16
    242e:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2432:	89 85       	ldd	r24, Y+9	; 0x09
    2434:	82 30       	cpi	r24, 0x02	; 2
    2436:	40 f0       	brcs	.+16     	; 0x2448 <__gesf2+0x56>
    2438:	89 89       	ldd	r24, Y+17	; 0x11
    243a:	82 30       	cpi	r24, 0x02	; 2
    243c:	28 f0       	brcs	.+10     	; 0x2448 <__gesf2+0x56>
    243e:	c7 01       	movw	r24, r14
    2440:	b8 01       	movw	r22, r16
    2442:	0e 94 c2 14 	call	0x2984	; 0x2984 <__fpcmp_parts_f>
    2446:	01 c0       	rjmp	.+2      	; 0x244a <__gesf2+0x58>
    2448:	8f ef       	ldi	r24, 0xFF	; 255
    244a:	68 96       	adiw	r28, 0x18	; 24
    244c:	e6 e0       	ldi	r30, 0x06	; 6
    244e:	0c 94 f8 29 	jmp	0x53f0	; 0x53f0 <__epilogue_restores__+0x18>

00002452 <__ltsf2>:
    2452:	a8 e1       	ldi	r26, 0x18	; 24
    2454:	b0 e0       	ldi	r27, 0x00	; 0
    2456:	ef e2       	ldi	r30, 0x2F	; 47
    2458:	f2 e1       	ldi	r31, 0x12	; 18
    245a:	0c 94 dc 29 	jmp	0x53b8	; 0x53b8 <__prologue_saves__+0x18>
    245e:	69 83       	std	Y+1, r22	; 0x01
    2460:	7a 83       	std	Y+2, r23	; 0x02
    2462:	8b 83       	std	Y+3, r24	; 0x03
    2464:	9c 83       	std	Y+4, r25	; 0x04
    2466:	2d 83       	std	Y+5, r18	; 0x05
    2468:	3e 83       	std	Y+6, r19	; 0x06
    246a:	4f 83       	std	Y+7, r20	; 0x07
    246c:	58 87       	std	Y+8, r21	; 0x08
    246e:	89 e0       	ldi	r24, 0x09	; 9
    2470:	e8 2e       	mov	r14, r24
    2472:	f1 2c       	mov	r15, r1
    2474:	ec 0e       	add	r14, r28
    2476:	fd 1e       	adc	r15, r29
    2478:	ce 01       	movw	r24, r28
    247a:	01 96       	adiw	r24, 0x01	; 1
    247c:	b7 01       	movw	r22, r14
    247e:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2482:	8e 01       	movw	r16, r28
    2484:	0f 5e       	subi	r16, 0xEF	; 239
    2486:	1f 4f       	sbci	r17, 0xFF	; 255
    2488:	ce 01       	movw	r24, r28
    248a:	05 96       	adiw	r24, 0x05	; 5
    248c:	b8 01       	movw	r22, r16
    248e:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2492:	89 85       	ldd	r24, Y+9	; 0x09
    2494:	82 30       	cpi	r24, 0x02	; 2
    2496:	40 f0       	brcs	.+16     	; 0x24a8 <__ltsf2+0x56>
    2498:	89 89       	ldd	r24, Y+17	; 0x11
    249a:	82 30       	cpi	r24, 0x02	; 2
    249c:	28 f0       	brcs	.+10     	; 0x24a8 <__ltsf2+0x56>
    249e:	c7 01       	movw	r24, r14
    24a0:	b8 01       	movw	r22, r16
    24a2:	0e 94 c2 14 	call	0x2984	; 0x2984 <__fpcmp_parts_f>
    24a6:	01 c0       	rjmp	.+2      	; 0x24aa <__ltsf2+0x58>
    24a8:	81 e0       	ldi	r24, 0x01	; 1
    24aa:	68 96       	adiw	r28, 0x18	; 24
    24ac:	e6 e0       	ldi	r30, 0x06	; 6
    24ae:	0c 94 f8 29 	jmp	0x53f0	; 0x53f0 <__epilogue_restores__+0x18>

000024b2 <__fixsfsi>:
    24b2:	ac e0       	ldi	r26, 0x0C	; 12
    24b4:	b0 e0       	ldi	r27, 0x00	; 0
    24b6:	ef e5       	ldi	r30, 0x5F	; 95
    24b8:	f2 e1       	ldi	r31, 0x12	; 18
    24ba:	0c 94 e0 29 	jmp	0x53c0	; 0x53c0 <__prologue_saves__+0x20>
    24be:	69 83       	std	Y+1, r22	; 0x01
    24c0:	7a 83       	std	Y+2, r23	; 0x02
    24c2:	8b 83       	std	Y+3, r24	; 0x03
    24c4:	9c 83       	std	Y+4, r25	; 0x04
    24c6:	ce 01       	movw	r24, r28
    24c8:	01 96       	adiw	r24, 0x01	; 1
    24ca:	be 01       	movw	r22, r28
    24cc:	6b 5f       	subi	r22, 0xFB	; 251
    24ce:	7f 4f       	sbci	r23, 0xFF	; 255
    24d0:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    24d4:	8d 81       	ldd	r24, Y+5	; 0x05
    24d6:	82 30       	cpi	r24, 0x02	; 2
    24d8:	61 f1       	breq	.+88     	; 0x2532 <__fixsfsi+0x80>
    24da:	82 30       	cpi	r24, 0x02	; 2
    24dc:	50 f1       	brcs	.+84     	; 0x2532 <__fixsfsi+0x80>
    24de:	84 30       	cpi	r24, 0x04	; 4
    24e0:	21 f4       	brne	.+8      	; 0x24ea <__fixsfsi+0x38>
    24e2:	8e 81       	ldd	r24, Y+6	; 0x06
    24e4:	88 23       	and	r24, r24
    24e6:	51 f1       	breq	.+84     	; 0x253c <__fixsfsi+0x8a>
    24e8:	2e c0       	rjmp	.+92     	; 0x2546 <__fixsfsi+0x94>
    24ea:	2f 81       	ldd	r18, Y+7	; 0x07
    24ec:	38 85       	ldd	r19, Y+8	; 0x08
    24ee:	37 fd       	sbrc	r19, 7
    24f0:	20 c0       	rjmp	.+64     	; 0x2532 <__fixsfsi+0x80>
    24f2:	6e 81       	ldd	r22, Y+6	; 0x06
    24f4:	2f 31       	cpi	r18, 0x1F	; 31
    24f6:	31 05       	cpc	r19, r1
    24f8:	1c f0       	brlt	.+6      	; 0x2500 <__fixsfsi+0x4e>
    24fa:	66 23       	and	r22, r22
    24fc:	f9 f0       	breq	.+62     	; 0x253c <__fixsfsi+0x8a>
    24fe:	23 c0       	rjmp	.+70     	; 0x2546 <__fixsfsi+0x94>
    2500:	8e e1       	ldi	r24, 0x1E	; 30
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	82 1b       	sub	r24, r18
    2506:	93 0b       	sbc	r25, r19
    2508:	29 85       	ldd	r18, Y+9	; 0x09
    250a:	3a 85       	ldd	r19, Y+10	; 0x0a
    250c:	4b 85       	ldd	r20, Y+11	; 0x0b
    250e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2510:	04 c0       	rjmp	.+8      	; 0x251a <__fixsfsi+0x68>
    2512:	56 95       	lsr	r21
    2514:	47 95       	ror	r20
    2516:	37 95       	ror	r19
    2518:	27 95       	ror	r18
    251a:	8a 95       	dec	r24
    251c:	d2 f7       	brpl	.-12     	; 0x2512 <__fixsfsi+0x60>
    251e:	66 23       	and	r22, r22
    2520:	b1 f0       	breq	.+44     	; 0x254e <__fixsfsi+0x9c>
    2522:	50 95       	com	r21
    2524:	40 95       	com	r20
    2526:	30 95       	com	r19
    2528:	21 95       	neg	r18
    252a:	3f 4f       	sbci	r19, 0xFF	; 255
    252c:	4f 4f       	sbci	r20, 0xFF	; 255
    252e:	5f 4f       	sbci	r21, 0xFF	; 255
    2530:	0e c0       	rjmp	.+28     	; 0x254e <__fixsfsi+0x9c>
    2532:	20 e0       	ldi	r18, 0x00	; 0
    2534:	30 e0       	ldi	r19, 0x00	; 0
    2536:	40 e0       	ldi	r20, 0x00	; 0
    2538:	50 e0       	ldi	r21, 0x00	; 0
    253a:	09 c0       	rjmp	.+18     	; 0x254e <__fixsfsi+0x9c>
    253c:	2f ef       	ldi	r18, 0xFF	; 255
    253e:	3f ef       	ldi	r19, 0xFF	; 255
    2540:	4f ef       	ldi	r20, 0xFF	; 255
    2542:	5f e7       	ldi	r21, 0x7F	; 127
    2544:	04 c0       	rjmp	.+8      	; 0x254e <__fixsfsi+0x9c>
    2546:	20 e0       	ldi	r18, 0x00	; 0
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	40 e0       	ldi	r20, 0x00	; 0
    254c:	50 e8       	ldi	r21, 0x80	; 128
    254e:	b9 01       	movw	r22, r18
    2550:	ca 01       	movw	r24, r20
    2552:	2c 96       	adiw	r28, 0x0c	; 12
    2554:	e2 e0       	ldi	r30, 0x02	; 2
    2556:	0c 94 fc 29 	jmp	0x53f8	; 0x53f8 <__epilogue_restores__+0x20>

0000255a <__floatunsisf>:
    255a:	a8 e0       	ldi	r26, 0x08	; 8
    255c:	b0 e0       	ldi	r27, 0x00	; 0
    255e:	e3 eb       	ldi	r30, 0xB3	; 179
    2560:	f2 e1       	ldi	r31, 0x12	; 18
    2562:	0c 94 d8 29 	jmp	0x53b0	; 0x53b0 <__prologue_saves__+0x10>
    2566:	7b 01       	movw	r14, r22
    2568:	8c 01       	movw	r16, r24
    256a:	61 15       	cp	r22, r1
    256c:	71 05       	cpc	r23, r1
    256e:	81 05       	cpc	r24, r1
    2570:	91 05       	cpc	r25, r1
    2572:	19 f4       	brne	.+6      	; 0x257a <__floatunsisf+0x20>
    2574:	82 e0       	ldi	r24, 0x02	; 2
    2576:	89 83       	std	Y+1, r24	; 0x01
    2578:	60 c0       	rjmp	.+192    	; 0x263a <__floatunsisf+0xe0>
    257a:	83 e0       	ldi	r24, 0x03	; 3
    257c:	89 83       	std	Y+1, r24	; 0x01
    257e:	8e e1       	ldi	r24, 0x1E	; 30
    2580:	c8 2e       	mov	r12, r24
    2582:	d1 2c       	mov	r13, r1
    2584:	dc 82       	std	Y+4, r13	; 0x04
    2586:	cb 82       	std	Y+3, r12	; 0x03
    2588:	ed 82       	std	Y+5, r14	; 0x05
    258a:	fe 82       	std	Y+6, r15	; 0x06
    258c:	0f 83       	std	Y+7, r16	; 0x07
    258e:	18 87       	std	Y+8, r17	; 0x08
    2590:	c8 01       	movw	r24, r16
    2592:	b7 01       	movw	r22, r14
    2594:	0e 94 26 13 	call	0x264c	; 0x264c <__clzsi2>
    2598:	fc 01       	movw	r30, r24
    259a:	31 97       	sbiw	r30, 0x01	; 1
    259c:	f7 ff       	sbrs	r31, 7
    259e:	3b c0       	rjmp	.+118    	; 0x2616 <__floatunsisf+0xbc>
    25a0:	22 27       	eor	r18, r18
    25a2:	33 27       	eor	r19, r19
    25a4:	2e 1b       	sub	r18, r30
    25a6:	3f 0b       	sbc	r19, r31
    25a8:	57 01       	movw	r10, r14
    25aa:	68 01       	movw	r12, r16
    25ac:	02 2e       	mov	r0, r18
    25ae:	04 c0       	rjmp	.+8      	; 0x25b8 <__floatunsisf+0x5e>
    25b0:	d6 94       	lsr	r13
    25b2:	c7 94       	ror	r12
    25b4:	b7 94       	ror	r11
    25b6:	a7 94       	ror	r10
    25b8:	0a 94       	dec	r0
    25ba:	d2 f7       	brpl	.-12     	; 0x25b0 <__floatunsisf+0x56>
    25bc:	40 e0       	ldi	r20, 0x00	; 0
    25be:	50 e0       	ldi	r21, 0x00	; 0
    25c0:	60 e0       	ldi	r22, 0x00	; 0
    25c2:	70 e0       	ldi	r23, 0x00	; 0
    25c4:	81 e0       	ldi	r24, 0x01	; 1
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	a0 e0       	ldi	r26, 0x00	; 0
    25ca:	b0 e0       	ldi	r27, 0x00	; 0
    25cc:	04 c0       	rjmp	.+8      	; 0x25d6 <__floatunsisf+0x7c>
    25ce:	88 0f       	add	r24, r24
    25d0:	99 1f       	adc	r25, r25
    25d2:	aa 1f       	adc	r26, r26
    25d4:	bb 1f       	adc	r27, r27
    25d6:	2a 95       	dec	r18
    25d8:	d2 f7       	brpl	.-12     	; 0x25ce <__floatunsisf+0x74>
    25da:	01 97       	sbiw	r24, 0x01	; 1
    25dc:	a1 09       	sbc	r26, r1
    25de:	b1 09       	sbc	r27, r1
    25e0:	8e 21       	and	r24, r14
    25e2:	9f 21       	and	r25, r15
    25e4:	a0 23       	and	r26, r16
    25e6:	b1 23       	and	r27, r17
    25e8:	00 97       	sbiw	r24, 0x00	; 0
    25ea:	a1 05       	cpc	r26, r1
    25ec:	b1 05       	cpc	r27, r1
    25ee:	21 f0       	breq	.+8      	; 0x25f8 <__floatunsisf+0x9e>
    25f0:	41 e0       	ldi	r20, 0x01	; 1
    25f2:	50 e0       	ldi	r21, 0x00	; 0
    25f4:	60 e0       	ldi	r22, 0x00	; 0
    25f6:	70 e0       	ldi	r23, 0x00	; 0
    25f8:	4a 29       	or	r20, r10
    25fa:	5b 29       	or	r21, r11
    25fc:	6c 29       	or	r22, r12
    25fe:	7d 29       	or	r23, r13
    2600:	4d 83       	std	Y+5, r20	; 0x05
    2602:	5e 83       	std	Y+6, r21	; 0x06
    2604:	6f 83       	std	Y+7, r22	; 0x07
    2606:	78 87       	std	Y+8, r23	; 0x08
    2608:	8e e1       	ldi	r24, 0x1E	; 30
    260a:	90 e0       	ldi	r25, 0x00	; 0
    260c:	8e 1b       	sub	r24, r30
    260e:	9f 0b       	sbc	r25, r31
    2610:	9c 83       	std	Y+4, r25	; 0x04
    2612:	8b 83       	std	Y+3, r24	; 0x03
    2614:	12 c0       	rjmp	.+36     	; 0x263a <__floatunsisf+0xe0>
    2616:	30 97       	sbiw	r30, 0x00	; 0
    2618:	81 f0       	breq	.+32     	; 0x263a <__floatunsisf+0xe0>
    261a:	0e 2e       	mov	r0, r30
    261c:	04 c0       	rjmp	.+8      	; 0x2626 <__floatunsisf+0xcc>
    261e:	ee 0c       	add	r14, r14
    2620:	ff 1c       	adc	r15, r15
    2622:	00 1f       	adc	r16, r16
    2624:	11 1f       	adc	r17, r17
    2626:	0a 94       	dec	r0
    2628:	d2 f7       	brpl	.-12     	; 0x261e <__floatunsisf+0xc4>
    262a:	ed 82       	std	Y+5, r14	; 0x05
    262c:	fe 82       	std	Y+6, r15	; 0x06
    262e:	0f 83       	std	Y+7, r16	; 0x07
    2630:	18 87       	std	Y+8, r17	; 0x08
    2632:	ce 1a       	sub	r12, r30
    2634:	df 0a       	sbc	r13, r31
    2636:	dc 82       	std	Y+4, r13	; 0x04
    2638:	cb 82       	std	Y+3, r12	; 0x03
    263a:	1a 82       	std	Y+2, r1	; 0x02
    263c:	ce 01       	movw	r24, r28
    263e:	01 96       	adiw	r24, 0x01	; 1
    2640:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    2644:	28 96       	adiw	r28, 0x08	; 8
    2646:	ea e0       	ldi	r30, 0x0A	; 10
    2648:	0c 94 f4 29 	jmp	0x53e8	; 0x53e8 <__epilogue_restores__+0x10>

0000264c <__clzsi2>:
    264c:	ef 92       	push	r14
    264e:	ff 92       	push	r15
    2650:	0f 93       	push	r16
    2652:	1f 93       	push	r17
    2654:	7b 01       	movw	r14, r22
    2656:	8c 01       	movw	r16, r24
    2658:	80 e0       	ldi	r24, 0x00	; 0
    265a:	e8 16       	cp	r14, r24
    265c:	80 e0       	ldi	r24, 0x00	; 0
    265e:	f8 06       	cpc	r15, r24
    2660:	81 e0       	ldi	r24, 0x01	; 1
    2662:	08 07       	cpc	r16, r24
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	18 07       	cpc	r17, r24
    2668:	88 f4       	brcc	.+34     	; 0x268c <__clzsi2+0x40>
    266a:	8f ef       	ldi	r24, 0xFF	; 255
    266c:	e8 16       	cp	r14, r24
    266e:	f1 04       	cpc	r15, r1
    2670:	01 05       	cpc	r16, r1
    2672:	11 05       	cpc	r17, r1
    2674:	31 f0       	breq	.+12     	; 0x2682 <__clzsi2+0x36>
    2676:	28 f0       	brcs	.+10     	; 0x2682 <__clzsi2+0x36>
    2678:	88 e0       	ldi	r24, 0x08	; 8
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	a0 e0       	ldi	r26, 0x00	; 0
    267e:	b0 e0       	ldi	r27, 0x00	; 0
    2680:	17 c0       	rjmp	.+46     	; 0x26b0 <__clzsi2+0x64>
    2682:	80 e0       	ldi	r24, 0x00	; 0
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	a0 e0       	ldi	r26, 0x00	; 0
    2688:	b0 e0       	ldi	r27, 0x00	; 0
    268a:	12 c0       	rjmp	.+36     	; 0x26b0 <__clzsi2+0x64>
    268c:	80 e0       	ldi	r24, 0x00	; 0
    268e:	e8 16       	cp	r14, r24
    2690:	80 e0       	ldi	r24, 0x00	; 0
    2692:	f8 06       	cpc	r15, r24
    2694:	80 e0       	ldi	r24, 0x00	; 0
    2696:	08 07       	cpc	r16, r24
    2698:	81 e0       	ldi	r24, 0x01	; 1
    269a:	18 07       	cpc	r17, r24
    269c:	28 f0       	brcs	.+10     	; 0x26a8 <__clzsi2+0x5c>
    269e:	88 e1       	ldi	r24, 0x18	; 24
    26a0:	90 e0       	ldi	r25, 0x00	; 0
    26a2:	a0 e0       	ldi	r26, 0x00	; 0
    26a4:	b0 e0       	ldi	r27, 0x00	; 0
    26a6:	04 c0       	rjmp	.+8      	; 0x26b0 <__clzsi2+0x64>
    26a8:	80 e1       	ldi	r24, 0x10	; 16
    26aa:	90 e0       	ldi	r25, 0x00	; 0
    26ac:	a0 e0       	ldi	r26, 0x00	; 0
    26ae:	b0 e0       	ldi	r27, 0x00	; 0
    26b0:	20 e2       	ldi	r18, 0x20	; 32
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	40 e0       	ldi	r20, 0x00	; 0
    26b6:	50 e0       	ldi	r21, 0x00	; 0
    26b8:	28 1b       	sub	r18, r24
    26ba:	39 0b       	sbc	r19, r25
    26bc:	4a 0b       	sbc	r20, r26
    26be:	5b 0b       	sbc	r21, r27
    26c0:	04 c0       	rjmp	.+8      	; 0x26ca <__clzsi2+0x7e>
    26c2:	16 95       	lsr	r17
    26c4:	07 95       	ror	r16
    26c6:	f7 94       	ror	r15
    26c8:	e7 94       	ror	r14
    26ca:	8a 95       	dec	r24
    26cc:	d2 f7       	brpl	.-12     	; 0x26c2 <__clzsi2+0x76>
    26ce:	f7 01       	movw	r30, r14
    26d0:	e5 57       	subi	r30, 0x75	; 117
    26d2:	ff 4f       	sbci	r31, 0xFF	; 255
    26d4:	80 81       	ld	r24, Z
    26d6:	28 1b       	sub	r18, r24
    26d8:	31 09       	sbc	r19, r1
    26da:	41 09       	sbc	r20, r1
    26dc:	51 09       	sbc	r21, r1
    26de:	c9 01       	movw	r24, r18
    26e0:	1f 91       	pop	r17
    26e2:	0f 91       	pop	r16
    26e4:	ff 90       	pop	r15
    26e6:	ef 90       	pop	r14
    26e8:	08 95       	ret

000026ea <__pack_f>:
    26ea:	df 92       	push	r13
    26ec:	ef 92       	push	r14
    26ee:	ff 92       	push	r15
    26f0:	0f 93       	push	r16
    26f2:	1f 93       	push	r17
    26f4:	fc 01       	movw	r30, r24
    26f6:	e4 80       	ldd	r14, Z+4	; 0x04
    26f8:	f5 80       	ldd	r15, Z+5	; 0x05
    26fa:	06 81       	ldd	r16, Z+6	; 0x06
    26fc:	17 81       	ldd	r17, Z+7	; 0x07
    26fe:	d1 80       	ldd	r13, Z+1	; 0x01
    2700:	80 81       	ld	r24, Z
    2702:	82 30       	cpi	r24, 0x02	; 2
    2704:	48 f4       	brcc	.+18     	; 0x2718 <__pack_f+0x2e>
    2706:	80 e0       	ldi	r24, 0x00	; 0
    2708:	90 e0       	ldi	r25, 0x00	; 0
    270a:	a0 e1       	ldi	r26, 0x10	; 16
    270c:	b0 e0       	ldi	r27, 0x00	; 0
    270e:	e8 2a       	or	r14, r24
    2710:	f9 2a       	or	r15, r25
    2712:	0a 2b       	or	r16, r26
    2714:	1b 2b       	or	r17, r27
    2716:	a5 c0       	rjmp	.+330    	; 0x2862 <__pack_f+0x178>
    2718:	84 30       	cpi	r24, 0x04	; 4
    271a:	09 f4       	brne	.+2      	; 0x271e <__pack_f+0x34>
    271c:	9f c0       	rjmp	.+318    	; 0x285c <__pack_f+0x172>
    271e:	82 30       	cpi	r24, 0x02	; 2
    2720:	21 f4       	brne	.+8      	; 0x272a <__pack_f+0x40>
    2722:	ee 24       	eor	r14, r14
    2724:	ff 24       	eor	r15, r15
    2726:	87 01       	movw	r16, r14
    2728:	05 c0       	rjmp	.+10     	; 0x2734 <__pack_f+0x4a>
    272a:	e1 14       	cp	r14, r1
    272c:	f1 04       	cpc	r15, r1
    272e:	01 05       	cpc	r16, r1
    2730:	11 05       	cpc	r17, r1
    2732:	19 f4       	brne	.+6      	; 0x273a <__pack_f+0x50>
    2734:	e0 e0       	ldi	r30, 0x00	; 0
    2736:	f0 e0       	ldi	r31, 0x00	; 0
    2738:	96 c0       	rjmp	.+300    	; 0x2866 <__pack_f+0x17c>
    273a:	62 81       	ldd	r22, Z+2	; 0x02
    273c:	73 81       	ldd	r23, Z+3	; 0x03
    273e:	9f ef       	ldi	r25, 0xFF	; 255
    2740:	62 38       	cpi	r22, 0x82	; 130
    2742:	79 07       	cpc	r23, r25
    2744:	0c f0       	brlt	.+2      	; 0x2748 <__pack_f+0x5e>
    2746:	5b c0       	rjmp	.+182    	; 0x27fe <__pack_f+0x114>
    2748:	22 e8       	ldi	r18, 0x82	; 130
    274a:	3f ef       	ldi	r19, 0xFF	; 255
    274c:	26 1b       	sub	r18, r22
    274e:	37 0b       	sbc	r19, r23
    2750:	2a 31       	cpi	r18, 0x1A	; 26
    2752:	31 05       	cpc	r19, r1
    2754:	2c f0       	brlt	.+10     	; 0x2760 <__pack_f+0x76>
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	30 e0       	ldi	r19, 0x00	; 0
    275a:	40 e0       	ldi	r20, 0x00	; 0
    275c:	50 e0       	ldi	r21, 0x00	; 0
    275e:	2a c0       	rjmp	.+84     	; 0x27b4 <__pack_f+0xca>
    2760:	b8 01       	movw	r22, r16
    2762:	a7 01       	movw	r20, r14
    2764:	02 2e       	mov	r0, r18
    2766:	04 c0       	rjmp	.+8      	; 0x2770 <__pack_f+0x86>
    2768:	76 95       	lsr	r23
    276a:	67 95       	ror	r22
    276c:	57 95       	ror	r21
    276e:	47 95       	ror	r20
    2770:	0a 94       	dec	r0
    2772:	d2 f7       	brpl	.-12     	; 0x2768 <__pack_f+0x7e>
    2774:	81 e0       	ldi	r24, 0x01	; 1
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	a0 e0       	ldi	r26, 0x00	; 0
    277a:	b0 e0       	ldi	r27, 0x00	; 0
    277c:	04 c0       	rjmp	.+8      	; 0x2786 <__pack_f+0x9c>
    277e:	88 0f       	add	r24, r24
    2780:	99 1f       	adc	r25, r25
    2782:	aa 1f       	adc	r26, r26
    2784:	bb 1f       	adc	r27, r27
    2786:	2a 95       	dec	r18
    2788:	d2 f7       	brpl	.-12     	; 0x277e <__pack_f+0x94>
    278a:	01 97       	sbiw	r24, 0x01	; 1
    278c:	a1 09       	sbc	r26, r1
    278e:	b1 09       	sbc	r27, r1
    2790:	8e 21       	and	r24, r14
    2792:	9f 21       	and	r25, r15
    2794:	a0 23       	and	r26, r16
    2796:	b1 23       	and	r27, r17
    2798:	00 97       	sbiw	r24, 0x00	; 0
    279a:	a1 05       	cpc	r26, r1
    279c:	b1 05       	cpc	r27, r1
    279e:	21 f0       	breq	.+8      	; 0x27a8 <__pack_f+0xbe>
    27a0:	81 e0       	ldi	r24, 0x01	; 1
    27a2:	90 e0       	ldi	r25, 0x00	; 0
    27a4:	a0 e0       	ldi	r26, 0x00	; 0
    27a6:	b0 e0       	ldi	r27, 0x00	; 0
    27a8:	9a 01       	movw	r18, r20
    27aa:	ab 01       	movw	r20, r22
    27ac:	28 2b       	or	r18, r24
    27ae:	39 2b       	or	r19, r25
    27b0:	4a 2b       	or	r20, r26
    27b2:	5b 2b       	or	r21, r27
    27b4:	da 01       	movw	r26, r20
    27b6:	c9 01       	movw	r24, r18
    27b8:	8f 77       	andi	r24, 0x7F	; 127
    27ba:	90 70       	andi	r25, 0x00	; 0
    27bc:	a0 70       	andi	r26, 0x00	; 0
    27be:	b0 70       	andi	r27, 0x00	; 0
    27c0:	80 34       	cpi	r24, 0x40	; 64
    27c2:	91 05       	cpc	r25, r1
    27c4:	a1 05       	cpc	r26, r1
    27c6:	b1 05       	cpc	r27, r1
    27c8:	39 f4       	brne	.+14     	; 0x27d8 <__pack_f+0xee>
    27ca:	27 ff       	sbrs	r18, 7
    27cc:	09 c0       	rjmp	.+18     	; 0x27e0 <__pack_f+0xf6>
    27ce:	20 5c       	subi	r18, 0xC0	; 192
    27d0:	3f 4f       	sbci	r19, 0xFF	; 255
    27d2:	4f 4f       	sbci	r20, 0xFF	; 255
    27d4:	5f 4f       	sbci	r21, 0xFF	; 255
    27d6:	04 c0       	rjmp	.+8      	; 0x27e0 <__pack_f+0xf6>
    27d8:	21 5c       	subi	r18, 0xC1	; 193
    27da:	3f 4f       	sbci	r19, 0xFF	; 255
    27dc:	4f 4f       	sbci	r20, 0xFF	; 255
    27de:	5f 4f       	sbci	r21, 0xFF	; 255
    27e0:	e0 e0       	ldi	r30, 0x00	; 0
    27e2:	f0 e0       	ldi	r31, 0x00	; 0
    27e4:	20 30       	cpi	r18, 0x00	; 0
    27e6:	a0 e0       	ldi	r26, 0x00	; 0
    27e8:	3a 07       	cpc	r19, r26
    27ea:	a0 e0       	ldi	r26, 0x00	; 0
    27ec:	4a 07       	cpc	r20, r26
    27ee:	a0 e4       	ldi	r26, 0x40	; 64
    27f0:	5a 07       	cpc	r21, r26
    27f2:	10 f0       	brcs	.+4      	; 0x27f8 <__pack_f+0x10e>
    27f4:	e1 e0       	ldi	r30, 0x01	; 1
    27f6:	f0 e0       	ldi	r31, 0x00	; 0
    27f8:	79 01       	movw	r14, r18
    27fa:	8a 01       	movw	r16, r20
    27fc:	27 c0       	rjmp	.+78     	; 0x284c <__pack_f+0x162>
    27fe:	60 38       	cpi	r22, 0x80	; 128
    2800:	71 05       	cpc	r23, r1
    2802:	64 f5       	brge	.+88     	; 0x285c <__pack_f+0x172>
    2804:	fb 01       	movw	r30, r22
    2806:	e1 58       	subi	r30, 0x81	; 129
    2808:	ff 4f       	sbci	r31, 0xFF	; 255
    280a:	d8 01       	movw	r26, r16
    280c:	c7 01       	movw	r24, r14
    280e:	8f 77       	andi	r24, 0x7F	; 127
    2810:	90 70       	andi	r25, 0x00	; 0
    2812:	a0 70       	andi	r26, 0x00	; 0
    2814:	b0 70       	andi	r27, 0x00	; 0
    2816:	80 34       	cpi	r24, 0x40	; 64
    2818:	91 05       	cpc	r25, r1
    281a:	a1 05       	cpc	r26, r1
    281c:	b1 05       	cpc	r27, r1
    281e:	39 f4       	brne	.+14     	; 0x282e <__pack_f+0x144>
    2820:	e7 fe       	sbrs	r14, 7
    2822:	0d c0       	rjmp	.+26     	; 0x283e <__pack_f+0x154>
    2824:	80 e4       	ldi	r24, 0x40	; 64
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	a0 e0       	ldi	r26, 0x00	; 0
    282a:	b0 e0       	ldi	r27, 0x00	; 0
    282c:	04 c0       	rjmp	.+8      	; 0x2836 <__pack_f+0x14c>
    282e:	8f e3       	ldi	r24, 0x3F	; 63
    2830:	90 e0       	ldi	r25, 0x00	; 0
    2832:	a0 e0       	ldi	r26, 0x00	; 0
    2834:	b0 e0       	ldi	r27, 0x00	; 0
    2836:	e8 0e       	add	r14, r24
    2838:	f9 1e       	adc	r15, r25
    283a:	0a 1f       	adc	r16, r26
    283c:	1b 1f       	adc	r17, r27
    283e:	17 ff       	sbrs	r17, 7
    2840:	05 c0       	rjmp	.+10     	; 0x284c <__pack_f+0x162>
    2842:	16 95       	lsr	r17
    2844:	07 95       	ror	r16
    2846:	f7 94       	ror	r15
    2848:	e7 94       	ror	r14
    284a:	31 96       	adiw	r30, 0x01	; 1
    284c:	87 e0       	ldi	r24, 0x07	; 7
    284e:	16 95       	lsr	r17
    2850:	07 95       	ror	r16
    2852:	f7 94       	ror	r15
    2854:	e7 94       	ror	r14
    2856:	8a 95       	dec	r24
    2858:	d1 f7       	brne	.-12     	; 0x284e <__pack_f+0x164>
    285a:	05 c0       	rjmp	.+10     	; 0x2866 <__pack_f+0x17c>
    285c:	ee 24       	eor	r14, r14
    285e:	ff 24       	eor	r15, r15
    2860:	87 01       	movw	r16, r14
    2862:	ef ef       	ldi	r30, 0xFF	; 255
    2864:	f0 e0       	ldi	r31, 0x00	; 0
    2866:	6e 2f       	mov	r22, r30
    2868:	67 95       	ror	r22
    286a:	66 27       	eor	r22, r22
    286c:	67 95       	ror	r22
    286e:	90 2f       	mov	r25, r16
    2870:	9f 77       	andi	r25, 0x7F	; 127
    2872:	d7 94       	ror	r13
    2874:	dd 24       	eor	r13, r13
    2876:	d7 94       	ror	r13
    2878:	8e 2f       	mov	r24, r30
    287a:	86 95       	lsr	r24
    287c:	49 2f       	mov	r20, r25
    287e:	46 2b       	or	r20, r22
    2880:	58 2f       	mov	r21, r24
    2882:	5d 29       	or	r21, r13
    2884:	b7 01       	movw	r22, r14
    2886:	ca 01       	movw	r24, r20
    2888:	1f 91       	pop	r17
    288a:	0f 91       	pop	r16
    288c:	ff 90       	pop	r15
    288e:	ef 90       	pop	r14
    2890:	df 90       	pop	r13
    2892:	08 95       	ret

00002894 <__unpack_f>:
    2894:	fc 01       	movw	r30, r24
    2896:	db 01       	movw	r26, r22
    2898:	40 81       	ld	r20, Z
    289a:	51 81       	ldd	r21, Z+1	; 0x01
    289c:	22 81       	ldd	r18, Z+2	; 0x02
    289e:	62 2f       	mov	r22, r18
    28a0:	6f 77       	andi	r22, 0x7F	; 127
    28a2:	70 e0       	ldi	r23, 0x00	; 0
    28a4:	22 1f       	adc	r18, r18
    28a6:	22 27       	eor	r18, r18
    28a8:	22 1f       	adc	r18, r18
    28aa:	93 81       	ldd	r25, Z+3	; 0x03
    28ac:	89 2f       	mov	r24, r25
    28ae:	88 0f       	add	r24, r24
    28b0:	82 2b       	or	r24, r18
    28b2:	28 2f       	mov	r18, r24
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	99 1f       	adc	r25, r25
    28b8:	99 27       	eor	r25, r25
    28ba:	99 1f       	adc	r25, r25
    28bc:	11 96       	adiw	r26, 0x01	; 1
    28be:	9c 93       	st	X, r25
    28c0:	11 97       	sbiw	r26, 0x01	; 1
    28c2:	21 15       	cp	r18, r1
    28c4:	31 05       	cpc	r19, r1
    28c6:	a9 f5       	brne	.+106    	; 0x2932 <__unpack_f+0x9e>
    28c8:	41 15       	cp	r20, r1
    28ca:	51 05       	cpc	r21, r1
    28cc:	61 05       	cpc	r22, r1
    28ce:	71 05       	cpc	r23, r1
    28d0:	11 f4       	brne	.+4      	; 0x28d6 <__unpack_f+0x42>
    28d2:	82 e0       	ldi	r24, 0x02	; 2
    28d4:	37 c0       	rjmp	.+110    	; 0x2944 <__unpack_f+0xb0>
    28d6:	82 e8       	ldi	r24, 0x82	; 130
    28d8:	9f ef       	ldi	r25, 0xFF	; 255
    28da:	13 96       	adiw	r26, 0x03	; 3
    28dc:	9c 93       	st	X, r25
    28de:	8e 93       	st	-X, r24
    28e0:	12 97       	sbiw	r26, 0x02	; 2
    28e2:	9a 01       	movw	r18, r20
    28e4:	ab 01       	movw	r20, r22
    28e6:	67 e0       	ldi	r22, 0x07	; 7
    28e8:	22 0f       	add	r18, r18
    28ea:	33 1f       	adc	r19, r19
    28ec:	44 1f       	adc	r20, r20
    28ee:	55 1f       	adc	r21, r21
    28f0:	6a 95       	dec	r22
    28f2:	d1 f7       	brne	.-12     	; 0x28e8 <__unpack_f+0x54>
    28f4:	83 e0       	ldi	r24, 0x03	; 3
    28f6:	8c 93       	st	X, r24
    28f8:	0d c0       	rjmp	.+26     	; 0x2914 <__unpack_f+0x80>
    28fa:	22 0f       	add	r18, r18
    28fc:	33 1f       	adc	r19, r19
    28fe:	44 1f       	adc	r20, r20
    2900:	55 1f       	adc	r21, r21
    2902:	12 96       	adiw	r26, 0x02	; 2
    2904:	8d 91       	ld	r24, X+
    2906:	9c 91       	ld	r25, X
    2908:	13 97       	sbiw	r26, 0x03	; 3
    290a:	01 97       	sbiw	r24, 0x01	; 1
    290c:	13 96       	adiw	r26, 0x03	; 3
    290e:	9c 93       	st	X, r25
    2910:	8e 93       	st	-X, r24
    2912:	12 97       	sbiw	r26, 0x02	; 2
    2914:	20 30       	cpi	r18, 0x00	; 0
    2916:	80 e0       	ldi	r24, 0x00	; 0
    2918:	38 07       	cpc	r19, r24
    291a:	80 e0       	ldi	r24, 0x00	; 0
    291c:	48 07       	cpc	r20, r24
    291e:	80 e4       	ldi	r24, 0x40	; 64
    2920:	58 07       	cpc	r21, r24
    2922:	58 f3       	brcs	.-42     	; 0x28fa <__unpack_f+0x66>
    2924:	14 96       	adiw	r26, 0x04	; 4
    2926:	2d 93       	st	X+, r18
    2928:	3d 93       	st	X+, r19
    292a:	4d 93       	st	X+, r20
    292c:	5c 93       	st	X, r21
    292e:	17 97       	sbiw	r26, 0x07	; 7
    2930:	08 95       	ret
    2932:	2f 3f       	cpi	r18, 0xFF	; 255
    2934:	31 05       	cpc	r19, r1
    2936:	79 f4       	brne	.+30     	; 0x2956 <__unpack_f+0xc2>
    2938:	41 15       	cp	r20, r1
    293a:	51 05       	cpc	r21, r1
    293c:	61 05       	cpc	r22, r1
    293e:	71 05       	cpc	r23, r1
    2940:	19 f4       	brne	.+6      	; 0x2948 <__unpack_f+0xb4>
    2942:	84 e0       	ldi	r24, 0x04	; 4
    2944:	8c 93       	st	X, r24
    2946:	08 95       	ret
    2948:	64 ff       	sbrs	r22, 4
    294a:	03 c0       	rjmp	.+6      	; 0x2952 <__unpack_f+0xbe>
    294c:	81 e0       	ldi	r24, 0x01	; 1
    294e:	8c 93       	st	X, r24
    2950:	12 c0       	rjmp	.+36     	; 0x2976 <__unpack_f+0xe2>
    2952:	1c 92       	st	X, r1
    2954:	10 c0       	rjmp	.+32     	; 0x2976 <__unpack_f+0xe2>
    2956:	2f 57       	subi	r18, 0x7F	; 127
    2958:	30 40       	sbci	r19, 0x00	; 0
    295a:	13 96       	adiw	r26, 0x03	; 3
    295c:	3c 93       	st	X, r19
    295e:	2e 93       	st	-X, r18
    2960:	12 97       	sbiw	r26, 0x02	; 2
    2962:	83 e0       	ldi	r24, 0x03	; 3
    2964:	8c 93       	st	X, r24
    2966:	87 e0       	ldi	r24, 0x07	; 7
    2968:	44 0f       	add	r20, r20
    296a:	55 1f       	adc	r21, r21
    296c:	66 1f       	adc	r22, r22
    296e:	77 1f       	adc	r23, r23
    2970:	8a 95       	dec	r24
    2972:	d1 f7       	brne	.-12     	; 0x2968 <__unpack_f+0xd4>
    2974:	70 64       	ori	r23, 0x40	; 64
    2976:	14 96       	adiw	r26, 0x04	; 4
    2978:	4d 93       	st	X+, r20
    297a:	5d 93       	st	X+, r21
    297c:	6d 93       	st	X+, r22
    297e:	7c 93       	st	X, r23
    2980:	17 97       	sbiw	r26, 0x07	; 7
    2982:	08 95       	ret

00002984 <__fpcmp_parts_f>:
    2984:	1f 93       	push	r17
    2986:	dc 01       	movw	r26, r24
    2988:	fb 01       	movw	r30, r22
    298a:	9c 91       	ld	r25, X
    298c:	92 30       	cpi	r25, 0x02	; 2
    298e:	08 f4       	brcc	.+2      	; 0x2992 <__fpcmp_parts_f+0xe>
    2990:	47 c0       	rjmp	.+142    	; 0x2a20 <__fpcmp_parts_f+0x9c>
    2992:	80 81       	ld	r24, Z
    2994:	82 30       	cpi	r24, 0x02	; 2
    2996:	08 f4       	brcc	.+2      	; 0x299a <__fpcmp_parts_f+0x16>
    2998:	43 c0       	rjmp	.+134    	; 0x2a20 <__fpcmp_parts_f+0x9c>
    299a:	94 30       	cpi	r25, 0x04	; 4
    299c:	51 f4       	brne	.+20     	; 0x29b2 <__fpcmp_parts_f+0x2e>
    299e:	11 96       	adiw	r26, 0x01	; 1
    29a0:	1c 91       	ld	r17, X
    29a2:	84 30       	cpi	r24, 0x04	; 4
    29a4:	99 f5       	brne	.+102    	; 0x2a0c <__fpcmp_parts_f+0x88>
    29a6:	81 81       	ldd	r24, Z+1	; 0x01
    29a8:	68 2f       	mov	r22, r24
    29aa:	70 e0       	ldi	r23, 0x00	; 0
    29ac:	61 1b       	sub	r22, r17
    29ae:	71 09       	sbc	r23, r1
    29b0:	3f c0       	rjmp	.+126    	; 0x2a30 <__fpcmp_parts_f+0xac>
    29b2:	84 30       	cpi	r24, 0x04	; 4
    29b4:	21 f0       	breq	.+8      	; 0x29be <__fpcmp_parts_f+0x3a>
    29b6:	92 30       	cpi	r25, 0x02	; 2
    29b8:	31 f4       	brne	.+12     	; 0x29c6 <__fpcmp_parts_f+0x42>
    29ba:	82 30       	cpi	r24, 0x02	; 2
    29bc:	b9 f1       	breq	.+110    	; 0x2a2c <__fpcmp_parts_f+0xa8>
    29be:	81 81       	ldd	r24, Z+1	; 0x01
    29c0:	88 23       	and	r24, r24
    29c2:	89 f1       	breq	.+98     	; 0x2a26 <__fpcmp_parts_f+0xa2>
    29c4:	2d c0       	rjmp	.+90     	; 0x2a20 <__fpcmp_parts_f+0x9c>
    29c6:	11 96       	adiw	r26, 0x01	; 1
    29c8:	1c 91       	ld	r17, X
    29ca:	11 97       	sbiw	r26, 0x01	; 1
    29cc:	82 30       	cpi	r24, 0x02	; 2
    29ce:	f1 f0       	breq	.+60     	; 0x2a0c <__fpcmp_parts_f+0x88>
    29d0:	81 81       	ldd	r24, Z+1	; 0x01
    29d2:	18 17       	cp	r17, r24
    29d4:	d9 f4       	brne	.+54     	; 0x2a0c <__fpcmp_parts_f+0x88>
    29d6:	12 96       	adiw	r26, 0x02	; 2
    29d8:	2d 91       	ld	r18, X+
    29da:	3c 91       	ld	r19, X
    29dc:	13 97       	sbiw	r26, 0x03	; 3
    29de:	82 81       	ldd	r24, Z+2	; 0x02
    29e0:	93 81       	ldd	r25, Z+3	; 0x03
    29e2:	82 17       	cp	r24, r18
    29e4:	93 07       	cpc	r25, r19
    29e6:	94 f0       	brlt	.+36     	; 0x2a0c <__fpcmp_parts_f+0x88>
    29e8:	28 17       	cp	r18, r24
    29ea:	39 07       	cpc	r19, r25
    29ec:	bc f0       	brlt	.+46     	; 0x2a1c <__fpcmp_parts_f+0x98>
    29ee:	14 96       	adiw	r26, 0x04	; 4
    29f0:	8d 91       	ld	r24, X+
    29f2:	9d 91       	ld	r25, X+
    29f4:	0d 90       	ld	r0, X+
    29f6:	bc 91       	ld	r27, X
    29f8:	a0 2d       	mov	r26, r0
    29fa:	24 81       	ldd	r18, Z+4	; 0x04
    29fc:	35 81       	ldd	r19, Z+5	; 0x05
    29fe:	46 81       	ldd	r20, Z+6	; 0x06
    2a00:	57 81       	ldd	r21, Z+7	; 0x07
    2a02:	28 17       	cp	r18, r24
    2a04:	39 07       	cpc	r19, r25
    2a06:	4a 07       	cpc	r20, r26
    2a08:	5b 07       	cpc	r21, r27
    2a0a:	18 f4       	brcc	.+6      	; 0x2a12 <__fpcmp_parts_f+0x8e>
    2a0c:	11 23       	and	r17, r17
    2a0e:	41 f0       	breq	.+16     	; 0x2a20 <__fpcmp_parts_f+0x9c>
    2a10:	0a c0       	rjmp	.+20     	; 0x2a26 <__fpcmp_parts_f+0xa2>
    2a12:	82 17       	cp	r24, r18
    2a14:	93 07       	cpc	r25, r19
    2a16:	a4 07       	cpc	r26, r20
    2a18:	b5 07       	cpc	r27, r21
    2a1a:	40 f4       	brcc	.+16     	; 0x2a2c <__fpcmp_parts_f+0xa8>
    2a1c:	11 23       	and	r17, r17
    2a1e:	19 f0       	breq	.+6      	; 0x2a26 <__fpcmp_parts_f+0xa2>
    2a20:	61 e0       	ldi	r22, 0x01	; 1
    2a22:	70 e0       	ldi	r23, 0x00	; 0
    2a24:	05 c0       	rjmp	.+10     	; 0x2a30 <__fpcmp_parts_f+0xac>
    2a26:	6f ef       	ldi	r22, 0xFF	; 255
    2a28:	7f ef       	ldi	r23, 0xFF	; 255
    2a2a:	02 c0       	rjmp	.+4      	; 0x2a30 <__fpcmp_parts_f+0xac>
    2a2c:	60 e0       	ldi	r22, 0x00	; 0
    2a2e:	70 e0       	ldi	r23, 0x00	; 0
    2a30:	cb 01       	movw	r24, r22
    2a32:	1f 91       	pop	r17
    2a34:	08 95       	ret

00002a36 <MUART_voidInitialization>:
#include "UART_interface.h"
#include "UART_config.h"

#include <avr/delay.h>
void MUART_voidInitialization(void)
{
    2a36:	df 93       	push	r29
    2a38:	cf 93       	push	r28
    2a3a:	cd b7       	in	r28, 0x3d	; 61
    2a3c:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(UCSRB ,UCSRB_TXEN) ;
    2a3e:	aa e2       	ldi	r26, 0x2A	; 42
    2a40:	b0 e0       	ldi	r27, 0x00	; 0
    2a42:	ea e2       	ldi	r30, 0x2A	; 42
    2a44:	f0 e0       	ldi	r31, 0x00	; 0
    2a46:	80 81       	ld	r24, Z
    2a48:	88 60       	ori	r24, 0x08	; 8
    2a4a:	8c 93       	st	X, r24
	SET_BIT(UCSRB ,UCSRB_RXEN) ;
    2a4c:	aa e2       	ldi	r26, 0x2A	; 42
    2a4e:	b0 e0       	ldi	r27, 0x00	; 0
    2a50:	ea e2       	ldi	r30, 0x2A	; 42
    2a52:	f0 e0       	ldi	r31, 0x00	; 0
    2a54:	80 81       	ld	r24, Z
    2a56:	80 61       	ori	r24, 0x10	; 16
    2a58:	8c 93       	st	X, r24
	#elif NUMBER_OF_DATA_BITS == UCSZ_6_BIT
	        UCSRC = (1<<UCSRC_URSEL) | (1<<UCSRC_UCSZ0) ;
	#elif NUMBER_OF_DATA_BITS == UCSZ_7_BIT
	        UCSRC = (1<<UCSRC_URSEL) | (1<<UCSRC_UCSZ1) ;
	#elif NUMBER_OF_DATA_BITS == UCSZ_8_BIT
	        UCSRC = (1<<UCSRC_URSEL) | (1<<UCSRC_UCSZ0) | (1<<UCSRC_UCSZ1) ; 
    2a5a:	e0 e4       	ldi	r30, 0x40	; 64
    2a5c:	f0 e0       	ldi	r31, 0x00	; 0
    2a5e:	86 e8       	ldi	r24, 0x86	; 134
    2a60:	80 83       	st	Z, r24
			SET_BIT (UCSRB , UCSRB_RXB8) ;
			SET_BIT (UCSRB , UCSRB_UCSZ2) ;
	        UCSRC = (1<<UCSRC_URSEL) | (1<<UCSRC_UCSZ1) | (1<<UCSRC_UCSZ0) ; 
	#endif
	
	UBRRL=51;
    2a62:	e9 e2       	ldi	r30, 0x29	; 41
    2a64:	f0 e0       	ldi	r31, 0x00	; 0
    2a66:	83 e3       	ldi	r24, 0x33	; 51
    2a68:	80 83       	st	Z, r24
}
    2a6a:	cf 91       	pop	r28
    2a6c:	df 91       	pop	r29
    2a6e:	08 95       	ret

00002a70 <MUART_voidSendData>:
	
void MUART_voidSendData(u8 A_u8Data)
{
    2a70:	df 93       	push	r29
    2a72:	cf 93       	push	r28
    2a74:	0f 92       	push	r0
    2a76:	cd b7       	in	r28, 0x3d	; 61
    2a78:	de b7       	in	r29, 0x3e	; 62
    2a7a:	89 83       	std	Y+1, r24	; 0x01
	while(GET_BIT(UCSRA, UCSRA_UDRE)==0);
    2a7c:	eb e2       	ldi	r30, 0x2B	; 43
    2a7e:	f0 e0       	ldi	r31, 0x00	; 0
    2a80:	80 81       	ld	r24, Z
    2a82:	82 95       	swap	r24
    2a84:	86 95       	lsr	r24
    2a86:	87 70       	andi	r24, 0x07	; 7
    2a88:	88 2f       	mov	r24, r24
    2a8a:	90 e0       	ldi	r25, 0x00	; 0
    2a8c:	81 70       	andi	r24, 0x01	; 1
    2a8e:	90 70       	andi	r25, 0x00	; 0
    2a90:	00 97       	sbiw	r24, 0x00	; 0
    2a92:	a1 f3       	breq	.-24     	; 0x2a7c <MUART_voidSendData+0xc>
	

	UDR=A_u8Data ;
    2a94:	ec e2       	ldi	r30, 0x2C	; 44
    2a96:	f0 e0       	ldi	r31, 0x00	; 0
    2a98:	89 81       	ldd	r24, Y+1	; 0x01
    2a9a:	80 83       	st	Z, r24
}
    2a9c:	0f 90       	pop	r0
    2a9e:	cf 91       	pop	r28
    2aa0:	df 91       	pop	r29
    2aa2:	08 95       	ret

00002aa4 <MUART_voidSendString>:

void MUART_voidSendString(u8 * A_ptrString)
{
    2aa4:	df 93       	push	r29
    2aa6:	cf 93       	push	r28
    2aa8:	cd b7       	in	r28, 0x3d	; 61
    2aaa:	de b7       	in	r29, 0x3e	; 62
    2aac:	61 97       	sbiw	r28, 0x11	; 17
    2aae:	0f b6       	in	r0, 0x3f	; 63
    2ab0:	f8 94       	cli
    2ab2:	de bf       	out	0x3e, r29	; 62
    2ab4:	0f be       	out	0x3f, r0	; 63
    2ab6:	cd bf       	out	0x3d, r28	; 61
    2ab8:	99 8b       	std	Y+17, r25	; 0x11
    2aba:	88 8b       	std	Y+16, r24	; 0x10
	u8 LOC_u8Iterator=0;
    2abc:	1f 86       	std	Y+15, r1	; 0x0f
    2abe:	80 c0       	rjmp	.+256    	; 0x2bc0 <MUART_voidSendString+0x11c>
	while( A_ptrString[LOC_u8Iterator])
    2ac0:	80 e0       	ldi	r24, 0x00	; 0
    2ac2:	90 e0       	ldi	r25, 0x00	; 0
    2ac4:	a8 e4       	ldi	r26, 0x48	; 72
    2ac6:	b2 e4       	ldi	r27, 0x42	; 66
    2ac8:	8b 87       	std	Y+11, r24	; 0x0b
    2aca:	9c 87       	std	Y+12, r25	; 0x0c
    2acc:	ad 87       	std	Y+13, r26	; 0x0d
    2ace:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ad0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ad2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ad4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ad6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ad8:	20 e0       	ldi	r18, 0x00	; 0
    2ada:	30 e0       	ldi	r19, 0x00	; 0
    2adc:	4a ef       	ldi	r20, 0xFA	; 250
    2ade:	54 e4       	ldi	r21, 0x44	; 68
    2ae0:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    2ae4:	dc 01       	movw	r26, r24
    2ae6:	cb 01       	movw	r24, r22
    2ae8:	8f 83       	std	Y+7, r24	; 0x07
    2aea:	98 87       	std	Y+8, r25	; 0x08
    2aec:	a9 87       	std	Y+9, r26	; 0x09
    2aee:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2af0:	6f 81       	ldd	r22, Y+7	; 0x07
    2af2:	78 85       	ldd	r23, Y+8	; 0x08
    2af4:	89 85       	ldd	r24, Y+9	; 0x09
    2af6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2af8:	20 e0       	ldi	r18, 0x00	; 0
    2afa:	30 e0       	ldi	r19, 0x00	; 0
    2afc:	40 e8       	ldi	r20, 0x80	; 128
    2afe:	5f e3       	ldi	r21, 0x3F	; 63
    2b00:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    2b04:	88 23       	and	r24, r24
    2b06:	2c f4       	brge	.+10     	; 0x2b12 <MUART_voidSendString+0x6e>
		__ticks = 1;
    2b08:	81 e0       	ldi	r24, 0x01	; 1
    2b0a:	90 e0       	ldi	r25, 0x00	; 0
    2b0c:	9e 83       	std	Y+6, r25	; 0x06
    2b0e:	8d 83       	std	Y+5, r24	; 0x05
    2b10:	3f c0       	rjmp	.+126    	; 0x2b90 <MUART_voidSendString+0xec>
	else if (__tmp > 65535)
    2b12:	6f 81       	ldd	r22, Y+7	; 0x07
    2b14:	78 85       	ldd	r23, Y+8	; 0x08
    2b16:	89 85       	ldd	r24, Y+9	; 0x09
    2b18:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b1a:	20 e0       	ldi	r18, 0x00	; 0
    2b1c:	3f ef       	ldi	r19, 0xFF	; 255
    2b1e:	4f e7       	ldi	r20, 0x7F	; 127
    2b20:	57 e4       	ldi	r21, 0x47	; 71
    2b22:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    2b26:	18 16       	cp	r1, r24
    2b28:	4c f5       	brge	.+82     	; 0x2b7c <MUART_voidSendString+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b2a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b2c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b2e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b30:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b32:	20 e0       	ldi	r18, 0x00	; 0
    2b34:	30 e0       	ldi	r19, 0x00	; 0
    2b36:	40 e2       	ldi	r20, 0x20	; 32
    2b38:	51 e4       	ldi	r21, 0x41	; 65
    2b3a:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    2b3e:	dc 01       	movw	r26, r24
    2b40:	cb 01       	movw	r24, r22
    2b42:	bc 01       	movw	r22, r24
    2b44:	cd 01       	movw	r24, r26
    2b46:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    2b4a:	dc 01       	movw	r26, r24
    2b4c:	cb 01       	movw	r24, r22
    2b4e:	9e 83       	std	Y+6, r25	; 0x06
    2b50:	8d 83       	std	Y+5, r24	; 0x05
    2b52:	0f c0       	rjmp	.+30     	; 0x2b72 <MUART_voidSendString+0xce>
    2b54:	88 ec       	ldi	r24, 0xC8	; 200
    2b56:	90 e0       	ldi	r25, 0x00	; 0
    2b58:	9c 83       	std	Y+4, r25	; 0x04
    2b5a:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2b5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b5e:	9c 81       	ldd	r25, Y+4	; 0x04
    2b60:	01 97       	sbiw	r24, 0x01	; 1
    2b62:	f1 f7       	brne	.-4      	; 0x2b60 <MUART_voidSendString+0xbc>
    2b64:	9c 83       	std	Y+4, r25	; 0x04
    2b66:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b68:	8d 81       	ldd	r24, Y+5	; 0x05
    2b6a:	9e 81       	ldd	r25, Y+6	; 0x06
    2b6c:	01 97       	sbiw	r24, 0x01	; 1
    2b6e:	9e 83       	std	Y+6, r25	; 0x06
    2b70:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b72:	8d 81       	ldd	r24, Y+5	; 0x05
    2b74:	9e 81       	ldd	r25, Y+6	; 0x06
    2b76:	00 97       	sbiw	r24, 0x00	; 0
    2b78:	69 f7       	brne	.-38     	; 0x2b54 <MUART_voidSendString+0xb0>
    2b7a:	14 c0       	rjmp	.+40     	; 0x2ba4 <MUART_voidSendString+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b7c:	6f 81       	ldd	r22, Y+7	; 0x07
    2b7e:	78 85       	ldd	r23, Y+8	; 0x08
    2b80:	89 85       	ldd	r24, Y+9	; 0x09
    2b82:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b84:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    2b88:	dc 01       	movw	r26, r24
    2b8a:	cb 01       	movw	r24, r22
    2b8c:	9e 83       	std	Y+6, r25	; 0x06
    2b8e:	8d 83       	std	Y+5, r24	; 0x05
    2b90:	8d 81       	ldd	r24, Y+5	; 0x05
    2b92:	9e 81       	ldd	r25, Y+6	; 0x06
    2b94:	9a 83       	std	Y+2, r25	; 0x02
    2b96:	89 83       	std	Y+1, r24	; 0x01
    2b98:	89 81       	ldd	r24, Y+1	; 0x01
    2b9a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b9c:	01 97       	sbiw	r24, 0x01	; 1
    2b9e:	f1 f7       	brne	.-4      	; 0x2b9c <MUART_voidSendString+0xf8>
    2ba0:	9a 83       	std	Y+2, r25	; 0x02
    2ba2:	89 83       	std	Y+1, r24	; 0x01
	{
		_delay_ms(50);
		MUART_voidSendData( A_ptrString[LOC_u8Iterator]);
    2ba4:	8f 85       	ldd	r24, Y+15	; 0x0f
    2ba6:	28 2f       	mov	r18, r24
    2ba8:	30 e0       	ldi	r19, 0x00	; 0
    2baa:	88 89       	ldd	r24, Y+16	; 0x10
    2bac:	99 89       	ldd	r25, Y+17	; 0x11
    2bae:	fc 01       	movw	r30, r24
    2bb0:	e2 0f       	add	r30, r18
    2bb2:	f3 1f       	adc	r31, r19
    2bb4:	80 81       	ld	r24, Z
    2bb6:	0e 94 38 15 	call	0x2a70	; 0x2a70 <MUART_voidSendData>
		LOC_u8Iterator++;
    2bba:	8f 85       	ldd	r24, Y+15	; 0x0f
    2bbc:	8f 5f       	subi	r24, 0xFF	; 255
    2bbe:	8f 87       	std	Y+15, r24	; 0x0f
}

void MUART_voidSendString(u8 * A_ptrString)
{
	u8 LOC_u8Iterator=0;
	while( A_ptrString[LOC_u8Iterator])
    2bc0:	8f 85       	ldd	r24, Y+15	; 0x0f
    2bc2:	28 2f       	mov	r18, r24
    2bc4:	30 e0       	ldi	r19, 0x00	; 0
    2bc6:	88 89       	ldd	r24, Y+16	; 0x10
    2bc8:	99 89       	ldd	r25, Y+17	; 0x11
    2bca:	fc 01       	movw	r30, r24
    2bcc:	e2 0f       	add	r30, r18
    2bce:	f3 1f       	adc	r31, r19
    2bd0:	80 81       	ld	r24, Z
    2bd2:	88 23       	and	r24, r24
    2bd4:	09 f0       	breq	.+2      	; 0x2bd8 <MUART_voidSendString+0x134>
    2bd6:	74 cf       	rjmp	.-280    	; 0x2ac0 <MUART_voidSendString+0x1c>
		MUART_voidSendData( A_ptrString[LOC_u8Iterator]);
		LOC_u8Iterator++;

	}

}
    2bd8:	61 96       	adiw	r28, 0x11	; 17
    2bda:	0f b6       	in	r0, 0x3f	; 63
    2bdc:	f8 94       	cli
    2bde:	de bf       	out	0x3e, r29	; 62
    2be0:	0f be       	out	0x3f, r0	; 63
    2be2:	cd bf       	out	0x3d, r28	; 61
    2be4:	cf 91       	pop	r28
    2be6:	df 91       	pop	r29
    2be8:	08 95       	ret

00002bea <MUART_voidRecieveData>:

u8 MUART_voidRecieveData(void)
{
    2bea:	df 93       	push	r29
    2bec:	cf 93       	push	r28
    2bee:	cd b7       	in	r28, 0x3d	; 61
    2bf0:	de b7       	in	r29, 0x3e	; 62
	while(GET_BIT(UCSRA, UCSRA_RXC)==0);
    2bf2:	eb e2       	ldi	r30, 0x2B	; 43
    2bf4:	f0 e0       	ldi	r31, 0x00	; 0
    2bf6:	80 81       	ld	r24, Z
    2bf8:	88 23       	and	r24, r24
    2bfa:	dc f7       	brge	.-10     	; 0x2bf2 <MUART_voidRecieveData+0x8>
	
	return UDR;
    2bfc:	ec e2       	ldi	r30, 0x2C	; 44
    2bfe:	f0 e0       	ldi	r31, 0x00	; 0
    2c00:	80 81       	ld	r24, Z
}
    2c02:	cf 91       	pop	r28
    2c04:	df 91       	pop	r29
    2c06:	08 95       	ret

00002c08 <MUART_voidRecieveString>:

void MUART_voidRecieveString(u8 * A_ptrString)
{
    2c08:	0f 93       	push	r16
    2c0a:	1f 93       	push	r17
    2c0c:	df 93       	push	r29
    2c0e:	cf 93       	push	r28
    2c10:	00 d0       	rcall	.+0      	; 0x2c12 <MUART_voidRecieveString+0xa>
    2c12:	0f 92       	push	r0
    2c14:	cd b7       	in	r28, 0x3d	; 61
    2c16:	de b7       	in	r29, 0x3e	; 62
    2c18:	9b 83       	std	Y+3, r25	; 0x03
    2c1a:	8a 83       	std	Y+2, r24	; 0x02
	u8 LOC_u8Iterator=0;
    2c1c:	19 82       	std	Y+1, r1	; 0x01
	A_ptrString[LOC_u8Iterator]=MUART_voidRecieveData();
    2c1e:	89 81       	ldd	r24, Y+1	; 0x01
    2c20:	28 2f       	mov	r18, r24
    2c22:	30 e0       	ldi	r19, 0x00	; 0
    2c24:	8a 81       	ldd	r24, Y+2	; 0x02
    2c26:	9b 81       	ldd	r25, Y+3	; 0x03
    2c28:	8c 01       	movw	r16, r24
    2c2a:	02 0f       	add	r16, r18
    2c2c:	13 1f       	adc	r17, r19
    2c2e:	0e 94 f5 15 	call	0x2bea	; 0x2bea <MUART_voidRecieveData>
    2c32:	f8 01       	movw	r30, r16
    2c34:	80 83       	st	Z, r24
    2c36:	0f c0       	rjmp	.+30     	; 0x2c56 <MUART_voidRecieveString+0x4e>
	while( A_ptrString[LOC_u8Iterator])
	{	LOC_u8Iterator++;
    2c38:	89 81       	ldd	r24, Y+1	; 0x01
    2c3a:	8f 5f       	subi	r24, 0xFF	; 255
    2c3c:	89 83       	std	Y+1, r24	; 0x01

		A_ptrString[LOC_u8Iterator]=MUART_voidRecieveData();
    2c3e:	89 81       	ldd	r24, Y+1	; 0x01
    2c40:	28 2f       	mov	r18, r24
    2c42:	30 e0       	ldi	r19, 0x00	; 0
    2c44:	8a 81       	ldd	r24, Y+2	; 0x02
    2c46:	9b 81       	ldd	r25, Y+3	; 0x03
    2c48:	8c 01       	movw	r16, r24
    2c4a:	02 0f       	add	r16, r18
    2c4c:	13 1f       	adc	r17, r19
    2c4e:	0e 94 f5 15 	call	0x2bea	; 0x2bea <MUART_voidRecieveData>
    2c52:	f8 01       	movw	r30, r16
    2c54:	80 83       	st	Z, r24

void MUART_voidRecieveString(u8 * A_ptrString)
{
	u8 LOC_u8Iterator=0;
	A_ptrString[LOC_u8Iterator]=MUART_voidRecieveData();
	while( A_ptrString[LOC_u8Iterator])
    2c56:	89 81       	ldd	r24, Y+1	; 0x01
    2c58:	28 2f       	mov	r18, r24
    2c5a:	30 e0       	ldi	r19, 0x00	; 0
    2c5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c5e:	9b 81       	ldd	r25, Y+3	; 0x03
    2c60:	fc 01       	movw	r30, r24
    2c62:	e2 0f       	add	r30, r18
    2c64:	f3 1f       	adc	r31, r19
    2c66:	80 81       	ld	r24, Z
    2c68:	88 23       	and	r24, r24
    2c6a:	31 f7       	brne	.-52     	; 0x2c38 <MUART_voidRecieveString+0x30>
	{	LOC_u8Iterator++;

		A_ptrString[LOC_u8Iterator]=MUART_voidRecieveData();

	}
}
    2c6c:	0f 90       	pop	r0
    2c6e:	0f 90       	pop	r0
    2c70:	0f 90       	pop	r0
    2c72:	cf 91       	pop	r28
    2c74:	df 91       	pop	r29
    2c76:	1f 91       	pop	r17
    2c78:	0f 91       	pop	r16
    2c7a:	08 95       	ret

00002c7c <DIO_enumSetPortDirection>:
#include "DIO_interface.h"


   /* function to set the port input or output */
DIO_ErrorStatus DIO_enumSetPortDirection(u8 copy_u8PORT,u8 copy_u8Direction)
{
    2c7c:	df 93       	push	r29
    2c7e:	cf 93       	push	r28
    2c80:	00 d0       	rcall	.+0      	; 0x2c82 <DIO_enumSetPortDirection+0x6>
    2c82:	00 d0       	rcall	.+0      	; 0x2c84 <DIO_enumSetPortDirection+0x8>
    2c84:	0f 92       	push	r0
    2c86:	cd b7       	in	r28, 0x3d	; 61
    2c88:	de b7       	in	r29, 0x3e	; 62
    2c8a:	8a 83       	std	Y+2, r24	; 0x02
    2c8c:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus Loc_enumState =DIO_OK;
    2c8e:	81 e0       	ldi	r24, 0x01	; 1
    2c90:	89 83       	std	Y+1, r24	; 0x01

		switch(copy_u8PORT)
    2c92:	8a 81       	ldd	r24, Y+2	; 0x02
    2c94:	28 2f       	mov	r18, r24
    2c96:	30 e0       	ldi	r19, 0x00	; 0
    2c98:	3d 83       	std	Y+5, r19	; 0x05
    2c9a:	2c 83       	std	Y+4, r18	; 0x04
    2c9c:	8c 81       	ldd	r24, Y+4	; 0x04
    2c9e:	9d 81       	ldd	r25, Y+5	; 0x05
    2ca0:	81 30       	cpi	r24, 0x01	; 1
    2ca2:	91 05       	cpc	r25, r1
    2ca4:	d1 f0       	breq	.+52     	; 0x2cda <DIO_enumSetPortDirection+0x5e>
    2ca6:	2c 81       	ldd	r18, Y+4	; 0x04
    2ca8:	3d 81       	ldd	r19, Y+5	; 0x05
    2caa:	22 30       	cpi	r18, 0x02	; 2
    2cac:	31 05       	cpc	r19, r1
    2cae:	2c f4       	brge	.+10     	; 0x2cba <DIO_enumSetPortDirection+0x3e>
    2cb0:	8c 81       	ldd	r24, Y+4	; 0x04
    2cb2:	9d 81       	ldd	r25, Y+5	; 0x05
    2cb4:	00 97       	sbiw	r24, 0x00	; 0
    2cb6:	61 f0       	breq	.+24     	; 0x2cd0 <DIO_enumSetPortDirection+0x54>
    2cb8:	1f c0       	rjmp	.+62     	; 0x2cf8 <DIO_enumSetPortDirection+0x7c>
    2cba:	2c 81       	ldd	r18, Y+4	; 0x04
    2cbc:	3d 81       	ldd	r19, Y+5	; 0x05
    2cbe:	22 30       	cpi	r18, 0x02	; 2
    2cc0:	31 05       	cpc	r19, r1
    2cc2:	81 f0       	breq	.+32     	; 0x2ce4 <DIO_enumSetPortDirection+0x68>
    2cc4:	8c 81       	ldd	r24, Y+4	; 0x04
    2cc6:	9d 81       	ldd	r25, Y+5	; 0x05
    2cc8:	83 30       	cpi	r24, 0x03	; 3
    2cca:	91 05       	cpc	r25, r1
    2ccc:	81 f0       	breq	.+32     	; 0x2cee <DIO_enumSetPortDirection+0x72>
    2cce:	14 c0       	rjmp	.+40     	; 0x2cf8 <DIO_enumSetPortDirection+0x7c>
		{
			case DIO_PORTA: DDRA_REG =copy_u8Direction;break;
    2cd0:	ea e3       	ldi	r30, 0x3A	; 58
    2cd2:	f0 e0       	ldi	r31, 0x00	; 0
    2cd4:	8b 81       	ldd	r24, Y+3	; 0x03
    2cd6:	80 83       	st	Z, r24
    2cd8:	10 c0       	rjmp	.+32     	; 0x2cfa <DIO_enumSetPortDirection+0x7e>
			case DIO_PORTB: DDRB_REG =copy_u8Direction;break;
    2cda:	e7 e3       	ldi	r30, 0x37	; 55
    2cdc:	f0 e0       	ldi	r31, 0x00	; 0
    2cde:	8b 81       	ldd	r24, Y+3	; 0x03
    2ce0:	80 83       	st	Z, r24
    2ce2:	0b c0       	rjmp	.+22     	; 0x2cfa <DIO_enumSetPortDirection+0x7e>
			case DIO_PORTC: DDRC_REG =copy_u8Direction;break;
    2ce4:	e4 e3       	ldi	r30, 0x34	; 52
    2ce6:	f0 e0       	ldi	r31, 0x00	; 0
    2ce8:	8b 81       	ldd	r24, Y+3	; 0x03
    2cea:	80 83       	st	Z, r24
    2cec:	06 c0       	rjmp	.+12     	; 0x2cfa <DIO_enumSetPortDirection+0x7e>
			case DIO_PORTD: DDRD_REG =copy_u8Direction;break;
    2cee:	e1 e3       	ldi	r30, 0x31	; 49
    2cf0:	f0 e0       	ldi	r31, 0x00	; 0
    2cf2:	8b 81       	ldd	r24, Y+3	; 0x03
    2cf4:	80 83       	st	Z, r24
    2cf6:	01 c0       	rjmp	.+2      	; 0x2cfa <DIO_enumSetPortDirection+0x7e>
			default: Loc_enumState =DIO_NOK;
    2cf8:	19 82       	std	Y+1, r1	; 0x01
		}

		
 return Loc_enumState;
    2cfa:	89 81       	ldd	r24, Y+1	; 0x01
}
    2cfc:	0f 90       	pop	r0
    2cfe:	0f 90       	pop	r0
    2d00:	0f 90       	pop	r0
    2d02:	0f 90       	pop	r0
    2d04:	0f 90       	pop	r0
    2d06:	cf 91       	pop	r28
    2d08:	df 91       	pop	r29
    2d0a:	08 95       	ret

00002d0c <DIO_enumSetPortValue>:

   /* function to set the value(high or low) in port */ 
DIO_ErrorStatus DIO_enumSetPortValue(u8 copy_u8PORT,u8 copy_u8Value)
{
    2d0c:	df 93       	push	r29
    2d0e:	cf 93       	push	r28
    2d10:	00 d0       	rcall	.+0      	; 0x2d12 <DIO_enumSetPortValue+0x6>
    2d12:	00 d0       	rcall	.+0      	; 0x2d14 <DIO_enumSetPortValue+0x8>
    2d14:	0f 92       	push	r0
    2d16:	cd b7       	in	r28, 0x3d	; 61
    2d18:	de b7       	in	r29, 0x3e	; 62
    2d1a:	8a 83       	std	Y+2, r24	; 0x02
    2d1c:	6b 83       	std	Y+3, r22	; 0x03
   DIO_ErrorStatus Loc_enumState=DIO_OK;
    2d1e:	81 e0       	ldi	r24, 0x01	; 1
    2d20:	89 83       	std	Y+1, r24	; 0x01
   
	 switch(copy_u8PORT)
    2d22:	8a 81       	ldd	r24, Y+2	; 0x02
    2d24:	28 2f       	mov	r18, r24
    2d26:	30 e0       	ldi	r19, 0x00	; 0
    2d28:	3d 83       	std	Y+5, r19	; 0x05
    2d2a:	2c 83       	std	Y+4, r18	; 0x04
    2d2c:	8c 81       	ldd	r24, Y+4	; 0x04
    2d2e:	9d 81       	ldd	r25, Y+5	; 0x05
    2d30:	81 30       	cpi	r24, 0x01	; 1
    2d32:	91 05       	cpc	r25, r1
    2d34:	d1 f0       	breq	.+52     	; 0x2d6a <DIO_enumSetPortValue+0x5e>
    2d36:	2c 81       	ldd	r18, Y+4	; 0x04
    2d38:	3d 81       	ldd	r19, Y+5	; 0x05
    2d3a:	22 30       	cpi	r18, 0x02	; 2
    2d3c:	31 05       	cpc	r19, r1
    2d3e:	2c f4       	brge	.+10     	; 0x2d4a <DIO_enumSetPortValue+0x3e>
    2d40:	8c 81       	ldd	r24, Y+4	; 0x04
    2d42:	9d 81       	ldd	r25, Y+5	; 0x05
    2d44:	00 97       	sbiw	r24, 0x00	; 0
    2d46:	61 f0       	breq	.+24     	; 0x2d60 <DIO_enumSetPortValue+0x54>
    2d48:	1f c0       	rjmp	.+62     	; 0x2d88 <DIO_enumSetPortValue+0x7c>
    2d4a:	2c 81       	ldd	r18, Y+4	; 0x04
    2d4c:	3d 81       	ldd	r19, Y+5	; 0x05
    2d4e:	22 30       	cpi	r18, 0x02	; 2
    2d50:	31 05       	cpc	r19, r1
    2d52:	81 f0       	breq	.+32     	; 0x2d74 <DIO_enumSetPortValue+0x68>
    2d54:	8c 81       	ldd	r24, Y+4	; 0x04
    2d56:	9d 81       	ldd	r25, Y+5	; 0x05
    2d58:	83 30       	cpi	r24, 0x03	; 3
    2d5a:	91 05       	cpc	r25, r1
    2d5c:	81 f0       	breq	.+32     	; 0x2d7e <DIO_enumSetPortValue+0x72>
    2d5e:	14 c0       	rjmp	.+40     	; 0x2d88 <DIO_enumSetPortValue+0x7c>
	 {
		 case DIO_PORTA:PORTA_REG=copy_u8Value;break;
    2d60:	eb e3       	ldi	r30, 0x3B	; 59
    2d62:	f0 e0       	ldi	r31, 0x00	; 0
    2d64:	8b 81       	ldd	r24, Y+3	; 0x03
    2d66:	80 83       	st	Z, r24
    2d68:	10 c0       	rjmp	.+32     	; 0x2d8a <DIO_enumSetPortValue+0x7e>
		 case DIO_PORTB:PORTB_REG=copy_u8Value;break;
    2d6a:	e8 e3       	ldi	r30, 0x38	; 56
    2d6c:	f0 e0       	ldi	r31, 0x00	; 0
    2d6e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d70:	80 83       	st	Z, r24
    2d72:	0b c0       	rjmp	.+22     	; 0x2d8a <DIO_enumSetPortValue+0x7e>
		 case DIO_PORTC:PORTC_REG=copy_u8Value;break;
    2d74:	e5 e3       	ldi	r30, 0x35	; 53
    2d76:	f0 e0       	ldi	r31, 0x00	; 0
    2d78:	8b 81       	ldd	r24, Y+3	; 0x03
    2d7a:	80 83       	st	Z, r24
    2d7c:	06 c0       	rjmp	.+12     	; 0x2d8a <DIO_enumSetPortValue+0x7e>
		 case DIO_PORTD:PORTD_REG=copy_u8Value;break;
    2d7e:	e2 e3       	ldi	r30, 0x32	; 50
    2d80:	f0 e0       	ldi	r31, 0x00	; 0
    2d82:	8b 81       	ldd	r24, Y+3	; 0x03
    2d84:	80 83       	st	Z, r24
    2d86:	01 c0       	rjmp	.+2      	; 0x2d8a <DIO_enumSetPortValue+0x7e>
		 default: Loc_enumState=DIO_NOK;
    2d88:	19 82       	std	Y+1, r1	; 0x01
	 } 
   
   
	 
 return Loc_enumState;
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
}
    2d8c:	0f 90       	pop	r0
    2d8e:	0f 90       	pop	r0
    2d90:	0f 90       	pop	r0
    2d92:	0f 90       	pop	r0
    2d94:	0f 90       	pop	r0
    2d96:	cf 91       	pop	r28
    2d98:	df 91       	pop	r29
    2d9a:	08 95       	ret

00002d9c <DIO_enumGetPortValue>:

  /* function to get the value(high or low) from port */ 
DIO_ErrorStatus DIO_enumGetPortValue(u8 copy_u8PORT,u8 *copy_PtrData)
{
    2d9c:	df 93       	push	r29
    2d9e:	cf 93       	push	r28
    2da0:	00 d0       	rcall	.+0      	; 0x2da2 <DIO_enumGetPortValue+0x6>
    2da2:	00 d0       	rcall	.+0      	; 0x2da4 <DIO_enumGetPortValue+0x8>
    2da4:	00 d0       	rcall	.+0      	; 0x2da6 <DIO_enumGetPortValue+0xa>
    2da6:	cd b7       	in	r28, 0x3d	; 61
    2da8:	de b7       	in	r29, 0x3e	; 62
    2daa:	8a 83       	std	Y+2, r24	; 0x02
    2dac:	7c 83       	std	Y+4, r23	; 0x04
    2dae:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus Loc_enumState=DIO_OK;
    2db0:	81 e0       	ldi	r24, 0x01	; 1
    2db2:	89 83       	std	Y+1, r24	; 0x01
	 switch(copy_u8PORT)
    2db4:	8a 81       	ldd	r24, Y+2	; 0x02
    2db6:	28 2f       	mov	r18, r24
    2db8:	30 e0       	ldi	r19, 0x00	; 0
    2dba:	3e 83       	std	Y+6, r19	; 0x06
    2dbc:	2d 83       	std	Y+5, r18	; 0x05
    2dbe:	8d 81       	ldd	r24, Y+5	; 0x05
    2dc0:	9e 81       	ldd	r25, Y+6	; 0x06
    2dc2:	81 30       	cpi	r24, 0x01	; 1
    2dc4:	91 05       	cpc	r25, r1
    2dc6:	e1 f0       	breq	.+56     	; 0x2e00 <DIO_enumGetPortValue+0x64>
    2dc8:	2d 81       	ldd	r18, Y+5	; 0x05
    2dca:	3e 81       	ldd	r19, Y+6	; 0x06
    2dcc:	22 30       	cpi	r18, 0x02	; 2
    2dce:	31 05       	cpc	r19, r1
    2dd0:	2c f4       	brge	.+10     	; 0x2ddc <DIO_enumGetPortValue+0x40>
    2dd2:	8d 81       	ldd	r24, Y+5	; 0x05
    2dd4:	9e 81       	ldd	r25, Y+6	; 0x06
    2dd6:	00 97       	sbiw	r24, 0x00	; 0
    2dd8:	61 f0       	breq	.+24     	; 0x2df2 <DIO_enumGetPortValue+0x56>
    2dda:	27 c0       	rjmp	.+78     	; 0x2e2a <DIO_enumGetPortValue+0x8e>
    2ddc:	2d 81       	ldd	r18, Y+5	; 0x05
    2dde:	3e 81       	ldd	r19, Y+6	; 0x06
    2de0:	22 30       	cpi	r18, 0x02	; 2
    2de2:	31 05       	cpc	r19, r1
    2de4:	a1 f0       	breq	.+40     	; 0x2e0e <DIO_enumGetPortValue+0x72>
    2de6:	8d 81       	ldd	r24, Y+5	; 0x05
    2de8:	9e 81       	ldd	r25, Y+6	; 0x06
    2dea:	83 30       	cpi	r24, 0x03	; 3
    2dec:	91 05       	cpc	r25, r1
    2dee:	b1 f0       	breq	.+44     	; 0x2e1c <DIO_enumGetPortValue+0x80>
    2df0:	1c c0       	rjmp	.+56     	; 0x2e2a <DIO_enumGetPortValue+0x8e>
	 {
		 case DIO_PORTA:*copy_PtrData=PINA_REG;break;
    2df2:	e9 e3       	ldi	r30, 0x39	; 57
    2df4:	f0 e0       	ldi	r31, 0x00	; 0
    2df6:	80 81       	ld	r24, Z
    2df8:	eb 81       	ldd	r30, Y+3	; 0x03
    2dfa:	fc 81       	ldd	r31, Y+4	; 0x04
    2dfc:	80 83       	st	Z, r24
    2dfe:	16 c0       	rjmp	.+44     	; 0x2e2c <DIO_enumGetPortValue+0x90>
		 case DIO_PORTB:*copy_PtrData=PINB_REG;break;
    2e00:	e6 e3       	ldi	r30, 0x36	; 54
    2e02:	f0 e0       	ldi	r31, 0x00	; 0
    2e04:	80 81       	ld	r24, Z
    2e06:	eb 81       	ldd	r30, Y+3	; 0x03
    2e08:	fc 81       	ldd	r31, Y+4	; 0x04
    2e0a:	80 83       	st	Z, r24
    2e0c:	0f c0       	rjmp	.+30     	; 0x2e2c <DIO_enumGetPortValue+0x90>
		 case DIO_PORTC:*copy_PtrData=PINC_REG;break;
    2e0e:	e3 e3       	ldi	r30, 0x33	; 51
    2e10:	f0 e0       	ldi	r31, 0x00	; 0
    2e12:	80 81       	ld	r24, Z
    2e14:	eb 81       	ldd	r30, Y+3	; 0x03
    2e16:	fc 81       	ldd	r31, Y+4	; 0x04
    2e18:	80 83       	st	Z, r24
    2e1a:	08 c0       	rjmp	.+16     	; 0x2e2c <DIO_enumGetPortValue+0x90>
		 case DIO_PORTD:*copy_PtrData=PIND_REG;break;
    2e1c:	e0 e3       	ldi	r30, 0x30	; 48
    2e1e:	f0 e0       	ldi	r31, 0x00	; 0
    2e20:	80 81       	ld	r24, Z
    2e22:	eb 81       	ldd	r30, Y+3	; 0x03
    2e24:	fc 81       	ldd	r31, Y+4	; 0x04
    2e26:	80 83       	st	Z, r24
    2e28:	01 c0       	rjmp	.+2      	; 0x2e2c <DIO_enumGetPortValue+0x90>
		 default: Loc_enumState=DIO_NOK;
    2e2a:	19 82       	std	Y+1, r1	; 0x01
	 } 
	
 return Loc_enumState;
    2e2c:	89 81       	ldd	r24, Y+1	; 0x01
}
    2e2e:	26 96       	adiw	r28, 0x06	; 6
    2e30:	0f b6       	in	r0, 0x3f	; 63
    2e32:	f8 94       	cli
    2e34:	de bf       	out	0x3e, r29	; 62
    2e36:	0f be       	out	0x3f, r0	; 63
    2e38:	cd bf       	out	0x3d, r28	; 61
    2e3a:	cf 91       	pop	r28
    2e3c:	df 91       	pop	r29
    2e3e:	08 95       	ret

00002e40 <DIO_enumTogglePortValue>:

 /* function to toggle the value(high or low) in port */  
DIO_ErrorStatus DIO_enumTogglePortValue(u8 copy_u8PORT)
{
    2e40:	df 93       	push	r29
    2e42:	cf 93       	push	r28
    2e44:	00 d0       	rcall	.+0      	; 0x2e46 <DIO_enumTogglePortValue+0x6>
    2e46:	00 d0       	rcall	.+0      	; 0x2e48 <DIO_enumTogglePortValue+0x8>
    2e48:	cd b7       	in	r28, 0x3d	; 61
    2e4a:	de b7       	in	r29, 0x3e	; 62
    2e4c:	8a 83       	std	Y+2, r24	; 0x02
	DIO_ErrorStatus Loc_enumState=DIO_OK;
    2e4e:	81 e0       	ldi	r24, 0x01	; 1
    2e50:	89 83       	std	Y+1, r24	; 0x01
	 switch(copy_u8PORT)
    2e52:	8a 81       	ldd	r24, Y+2	; 0x02
    2e54:	28 2f       	mov	r18, r24
    2e56:	30 e0       	ldi	r19, 0x00	; 0
    2e58:	3c 83       	std	Y+4, r19	; 0x04
    2e5a:	2b 83       	std	Y+3, r18	; 0x03
    2e5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e5e:	9c 81       	ldd	r25, Y+4	; 0x04
    2e60:	81 30       	cpi	r24, 0x01	; 1
    2e62:	91 05       	cpc	r25, r1
    2e64:	e9 f0       	breq	.+58     	; 0x2ea0 <DIO_enumTogglePortValue+0x60>
    2e66:	2b 81       	ldd	r18, Y+3	; 0x03
    2e68:	3c 81       	ldd	r19, Y+4	; 0x04
    2e6a:	22 30       	cpi	r18, 0x02	; 2
    2e6c:	31 05       	cpc	r19, r1
    2e6e:	2c f4       	brge	.+10     	; 0x2e7a <DIO_enumTogglePortValue+0x3a>
    2e70:	8b 81       	ldd	r24, Y+3	; 0x03
    2e72:	9c 81       	ldd	r25, Y+4	; 0x04
    2e74:	00 97       	sbiw	r24, 0x00	; 0
    2e76:	61 f0       	breq	.+24     	; 0x2e90 <DIO_enumTogglePortValue+0x50>
    2e78:	2b c0       	rjmp	.+86     	; 0x2ed0 <DIO_enumTogglePortValue+0x90>
    2e7a:	2b 81       	ldd	r18, Y+3	; 0x03
    2e7c:	3c 81       	ldd	r19, Y+4	; 0x04
    2e7e:	22 30       	cpi	r18, 0x02	; 2
    2e80:	31 05       	cpc	r19, r1
    2e82:	b1 f0       	breq	.+44     	; 0x2eb0 <DIO_enumTogglePortValue+0x70>
    2e84:	8b 81       	ldd	r24, Y+3	; 0x03
    2e86:	9c 81       	ldd	r25, Y+4	; 0x04
    2e88:	83 30       	cpi	r24, 0x03	; 3
    2e8a:	91 05       	cpc	r25, r1
    2e8c:	c9 f0       	breq	.+50     	; 0x2ec0 <DIO_enumTogglePortValue+0x80>
    2e8e:	20 c0       	rjmp	.+64     	; 0x2ed0 <DIO_enumTogglePortValue+0x90>
	 {
		 case DIO_PORTA:PORTA_REG^=0xff;break;
    2e90:	ab e3       	ldi	r26, 0x3B	; 59
    2e92:	b0 e0       	ldi	r27, 0x00	; 0
    2e94:	eb e3       	ldi	r30, 0x3B	; 59
    2e96:	f0 e0       	ldi	r31, 0x00	; 0
    2e98:	80 81       	ld	r24, Z
    2e9a:	80 95       	com	r24
    2e9c:	8c 93       	st	X, r24
    2e9e:	19 c0       	rjmp	.+50     	; 0x2ed2 <DIO_enumTogglePortValue+0x92>
		 case DIO_PORTB:PORTB_REG^=0xff;break;
    2ea0:	a8 e3       	ldi	r26, 0x38	; 56
    2ea2:	b0 e0       	ldi	r27, 0x00	; 0
    2ea4:	e8 e3       	ldi	r30, 0x38	; 56
    2ea6:	f0 e0       	ldi	r31, 0x00	; 0
    2ea8:	80 81       	ld	r24, Z
    2eaa:	80 95       	com	r24
    2eac:	8c 93       	st	X, r24
    2eae:	11 c0       	rjmp	.+34     	; 0x2ed2 <DIO_enumTogglePortValue+0x92>
		 case DIO_PORTC:PORTC_REG^=0xff;break;
    2eb0:	a5 e3       	ldi	r26, 0x35	; 53
    2eb2:	b0 e0       	ldi	r27, 0x00	; 0
    2eb4:	e5 e3       	ldi	r30, 0x35	; 53
    2eb6:	f0 e0       	ldi	r31, 0x00	; 0
    2eb8:	80 81       	ld	r24, Z
    2eba:	80 95       	com	r24
    2ebc:	8c 93       	st	X, r24
    2ebe:	09 c0       	rjmp	.+18     	; 0x2ed2 <DIO_enumTogglePortValue+0x92>
		 case DIO_PORTD:PORTD_REG^=0xff;break;
    2ec0:	a2 e3       	ldi	r26, 0x32	; 50
    2ec2:	b0 e0       	ldi	r27, 0x00	; 0
    2ec4:	e2 e3       	ldi	r30, 0x32	; 50
    2ec6:	f0 e0       	ldi	r31, 0x00	; 0
    2ec8:	80 81       	ld	r24, Z
    2eca:	80 95       	com	r24
    2ecc:	8c 93       	st	X, r24
    2ece:	01 c0       	rjmp	.+2      	; 0x2ed2 <DIO_enumTogglePortValue+0x92>
		 default: Loc_enumState=DIO_NOK;
    2ed0:	19 82       	std	Y+1, r1	; 0x01
	 } 
	 
 return Loc_enumState;
    2ed2:	89 81       	ldd	r24, Y+1	; 0x01
}
    2ed4:	0f 90       	pop	r0
    2ed6:	0f 90       	pop	r0
    2ed8:	0f 90       	pop	r0
    2eda:	0f 90       	pop	r0
    2edc:	cf 91       	pop	r28
    2ede:	df 91       	pop	r29
    2ee0:	08 95       	ret

00002ee2 <DIO_enumSetPinDirection>:
          /* function to set the pin direction output or input */
DIO_ErrorStatus DIO_enumSetPinDirection(u8 copy_u8PORT,u8 copy_u8Pin,u8 copy_u8Direction)
{
    2ee2:	df 93       	push	r29
    2ee4:	cf 93       	push	r28
    2ee6:	cd b7       	in	r28, 0x3d	; 61
    2ee8:	de b7       	in	r29, 0x3e	; 62
    2eea:	28 97       	sbiw	r28, 0x08	; 8
    2eec:	0f b6       	in	r0, 0x3f	; 63
    2eee:	f8 94       	cli
    2ef0:	de bf       	out	0x3e, r29	; 62
    2ef2:	0f be       	out	0x3f, r0	; 63
    2ef4:	cd bf       	out	0x3d, r28	; 61
    2ef6:	8a 83       	std	Y+2, r24	; 0x02
    2ef8:	6b 83       	std	Y+3, r22	; 0x03
    2efa:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus Loc_enumState =DIO_OK;
    2efc:	81 e0       	ldi	r24, 0x01	; 1
    2efe:	89 83       	std	Y+1, r24	; 0x01
	if( (copy_u8Direction == DIO_PIN_OUTPUT)  && (copy_u8Pin >= DIO_PIN0 && copy_u8Pin <= DIO_PIN7 ) )
    2f00:	8c 81       	ldd	r24, Y+4	; 0x04
    2f02:	81 30       	cpi	r24, 0x01	; 1
    2f04:	09 f0       	breq	.+2      	; 0x2f08 <DIO_enumSetPinDirection+0x26>
    2f06:	75 c0       	rjmp	.+234    	; 0x2ff2 <DIO_enumSetPinDirection+0x110>
    2f08:	8b 81       	ldd	r24, Y+3	; 0x03
    2f0a:	88 30       	cpi	r24, 0x08	; 8
    2f0c:	08 f0       	brcs	.+2      	; 0x2f10 <DIO_enumSetPinDirection+0x2e>
    2f0e:	71 c0       	rjmp	.+226    	; 0x2ff2 <DIO_enumSetPinDirection+0x110>
	{
		switch(copy_u8PORT)
    2f10:	8a 81       	ldd	r24, Y+2	; 0x02
    2f12:	28 2f       	mov	r18, r24
    2f14:	30 e0       	ldi	r19, 0x00	; 0
    2f16:	38 87       	std	Y+8, r19	; 0x08
    2f18:	2f 83       	std	Y+7, r18	; 0x07
    2f1a:	8f 81       	ldd	r24, Y+7	; 0x07
    2f1c:	98 85       	ldd	r25, Y+8	; 0x08
    2f1e:	81 30       	cpi	r24, 0x01	; 1
    2f20:	91 05       	cpc	r25, r1
    2f22:	49 f1       	breq	.+82     	; 0x2f76 <DIO_enumSetPinDirection+0x94>
    2f24:	2f 81       	ldd	r18, Y+7	; 0x07
    2f26:	38 85       	ldd	r19, Y+8	; 0x08
    2f28:	22 30       	cpi	r18, 0x02	; 2
    2f2a:	31 05       	cpc	r19, r1
    2f2c:	2c f4       	brge	.+10     	; 0x2f38 <DIO_enumSetPinDirection+0x56>
    2f2e:	8f 81       	ldd	r24, Y+7	; 0x07
    2f30:	98 85       	ldd	r25, Y+8	; 0x08
    2f32:	00 97       	sbiw	r24, 0x00	; 0
    2f34:	61 f0       	breq	.+24     	; 0x2f4e <DIO_enumSetPinDirection+0x6c>
    2f36:	5b c0       	rjmp	.+182    	; 0x2fee <DIO_enumSetPinDirection+0x10c>
    2f38:	2f 81       	ldd	r18, Y+7	; 0x07
    2f3a:	38 85       	ldd	r19, Y+8	; 0x08
    2f3c:	22 30       	cpi	r18, 0x02	; 2
    2f3e:	31 05       	cpc	r19, r1
    2f40:	71 f1       	breq	.+92     	; 0x2f9e <DIO_enumSetPinDirection+0xbc>
    2f42:	8f 81       	ldd	r24, Y+7	; 0x07
    2f44:	98 85       	ldd	r25, Y+8	; 0x08
    2f46:	83 30       	cpi	r24, 0x03	; 3
    2f48:	91 05       	cpc	r25, r1
    2f4a:	e9 f1       	breq	.+122    	; 0x2fc6 <DIO_enumSetPinDirection+0xe4>
    2f4c:	50 c0       	rjmp	.+160    	; 0x2fee <DIO_enumSetPinDirection+0x10c>
		{
			case DIO_PORTA: SET_BIT(DDRA_REG,copy_u8Pin);break;
    2f4e:	aa e3       	ldi	r26, 0x3A	; 58
    2f50:	b0 e0       	ldi	r27, 0x00	; 0
    2f52:	ea e3       	ldi	r30, 0x3A	; 58
    2f54:	f0 e0       	ldi	r31, 0x00	; 0
    2f56:	80 81       	ld	r24, Z
    2f58:	48 2f       	mov	r20, r24
    2f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f5c:	28 2f       	mov	r18, r24
    2f5e:	30 e0       	ldi	r19, 0x00	; 0
    2f60:	81 e0       	ldi	r24, 0x01	; 1
    2f62:	90 e0       	ldi	r25, 0x00	; 0
    2f64:	02 2e       	mov	r0, r18
    2f66:	02 c0       	rjmp	.+4      	; 0x2f6c <DIO_enumSetPinDirection+0x8a>
    2f68:	88 0f       	add	r24, r24
    2f6a:	99 1f       	adc	r25, r25
    2f6c:	0a 94       	dec	r0
    2f6e:	e2 f7       	brpl	.-8      	; 0x2f68 <DIO_enumSetPinDirection+0x86>
    2f70:	84 2b       	or	r24, r20
    2f72:	8c 93       	st	X, r24
    2f74:	bd c0       	rjmp	.+378    	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			case DIO_PORTB: SET_BIT(DDRB_REG,copy_u8Pin);break;
    2f76:	a7 e3       	ldi	r26, 0x37	; 55
    2f78:	b0 e0       	ldi	r27, 0x00	; 0
    2f7a:	e7 e3       	ldi	r30, 0x37	; 55
    2f7c:	f0 e0       	ldi	r31, 0x00	; 0
    2f7e:	80 81       	ld	r24, Z
    2f80:	48 2f       	mov	r20, r24
    2f82:	8b 81       	ldd	r24, Y+3	; 0x03
    2f84:	28 2f       	mov	r18, r24
    2f86:	30 e0       	ldi	r19, 0x00	; 0
    2f88:	81 e0       	ldi	r24, 0x01	; 1
    2f8a:	90 e0       	ldi	r25, 0x00	; 0
    2f8c:	02 2e       	mov	r0, r18
    2f8e:	02 c0       	rjmp	.+4      	; 0x2f94 <DIO_enumSetPinDirection+0xb2>
    2f90:	88 0f       	add	r24, r24
    2f92:	99 1f       	adc	r25, r25
    2f94:	0a 94       	dec	r0
    2f96:	e2 f7       	brpl	.-8      	; 0x2f90 <DIO_enumSetPinDirection+0xae>
    2f98:	84 2b       	or	r24, r20
    2f9a:	8c 93       	st	X, r24
    2f9c:	a9 c0       	rjmp	.+338    	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			case DIO_PORTC: SET_BIT(DDRC_REG,copy_u8Pin);break;
    2f9e:	a4 e3       	ldi	r26, 0x34	; 52
    2fa0:	b0 e0       	ldi	r27, 0x00	; 0
    2fa2:	e4 e3       	ldi	r30, 0x34	; 52
    2fa4:	f0 e0       	ldi	r31, 0x00	; 0
    2fa6:	80 81       	ld	r24, Z
    2fa8:	48 2f       	mov	r20, r24
    2faa:	8b 81       	ldd	r24, Y+3	; 0x03
    2fac:	28 2f       	mov	r18, r24
    2fae:	30 e0       	ldi	r19, 0x00	; 0
    2fb0:	81 e0       	ldi	r24, 0x01	; 1
    2fb2:	90 e0       	ldi	r25, 0x00	; 0
    2fb4:	02 2e       	mov	r0, r18
    2fb6:	02 c0       	rjmp	.+4      	; 0x2fbc <DIO_enumSetPinDirection+0xda>
    2fb8:	88 0f       	add	r24, r24
    2fba:	99 1f       	adc	r25, r25
    2fbc:	0a 94       	dec	r0
    2fbe:	e2 f7       	brpl	.-8      	; 0x2fb8 <DIO_enumSetPinDirection+0xd6>
    2fc0:	84 2b       	or	r24, r20
    2fc2:	8c 93       	st	X, r24
    2fc4:	95 c0       	rjmp	.+298    	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			case DIO_PORTD: SET_BIT(DDRD_REG,copy_u8Pin);break;
    2fc6:	a1 e3       	ldi	r26, 0x31	; 49
    2fc8:	b0 e0       	ldi	r27, 0x00	; 0
    2fca:	e1 e3       	ldi	r30, 0x31	; 49
    2fcc:	f0 e0       	ldi	r31, 0x00	; 0
    2fce:	80 81       	ld	r24, Z
    2fd0:	48 2f       	mov	r20, r24
    2fd2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd4:	28 2f       	mov	r18, r24
    2fd6:	30 e0       	ldi	r19, 0x00	; 0
    2fd8:	81 e0       	ldi	r24, 0x01	; 1
    2fda:	90 e0       	ldi	r25, 0x00	; 0
    2fdc:	02 2e       	mov	r0, r18
    2fde:	02 c0       	rjmp	.+4      	; 0x2fe4 <DIO_enumSetPinDirection+0x102>
    2fe0:	88 0f       	add	r24, r24
    2fe2:	99 1f       	adc	r25, r25
    2fe4:	0a 94       	dec	r0
    2fe6:	e2 f7       	brpl	.-8      	; 0x2fe0 <DIO_enumSetPinDirection+0xfe>
    2fe8:	84 2b       	or	r24, r20
    2fea:	8c 93       	st	X, r24
    2fec:	81 c0       	rjmp	.+258    	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			default: Loc_enumState =DIO_NOK;
    2fee:	19 82       	std	Y+1, r1	; 0x01
    2ff0:	7f c0       	rjmp	.+254    	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			
		}
		
	}
	else if( (copy_u8Direction == DIO_PIN_INPUT)  && (copy_u8Pin >= DIO_PIN0 && copy_u8Pin <= DIO_PIN7 ) )
    2ff2:	8c 81       	ldd	r24, Y+4	; 0x04
    2ff4:	88 23       	and	r24, r24
    2ff6:	09 f0       	breq	.+2      	; 0x2ffa <DIO_enumSetPinDirection+0x118>
    2ff8:	7a c0       	rjmp	.+244    	; 0x30ee <DIO_enumSetPinDirection+0x20c>
    2ffa:	8b 81       	ldd	r24, Y+3	; 0x03
    2ffc:	88 30       	cpi	r24, 0x08	; 8
    2ffe:	08 f0       	brcs	.+2      	; 0x3002 <DIO_enumSetPinDirection+0x120>
    3000:	76 c0       	rjmp	.+236    	; 0x30ee <DIO_enumSetPinDirection+0x20c>
	{
		switch(copy_u8PORT)
    3002:	8a 81       	ldd	r24, Y+2	; 0x02
    3004:	28 2f       	mov	r18, r24
    3006:	30 e0       	ldi	r19, 0x00	; 0
    3008:	3e 83       	std	Y+6, r19	; 0x06
    300a:	2d 83       	std	Y+5, r18	; 0x05
    300c:	8d 81       	ldd	r24, Y+5	; 0x05
    300e:	9e 81       	ldd	r25, Y+6	; 0x06
    3010:	81 30       	cpi	r24, 0x01	; 1
    3012:	91 05       	cpc	r25, r1
    3014:	59 f1       	breq	.+86     	; 0x306c <DIO_enumSetPinDirection+0x18a>
    3016:	2d 81       	ldd	r18, Y+5	; 0x05
    3018:	3e 81       	ldd	r19, Y+6	; 0x06
    301a:	22 30       	cpi	r18, 0x02	; 2
    301c:	31 05       	cpc	r19, r1
    301e:	2c f4       	brge	.+10     	; 0x302a <DIO_enumSetPinDirection+0x148>
    3020:	8d 81       	ldd	r24, Y+5	; 0x05
    3022:	9e 81       	ldd	r25, Y+6	; 0x06
    3024:	00 97       	sbiw	r24, 0x00	; 0
    3026:	69 f0       	breq	.+26     	; 0x3042 <DIO_enumSetPinDirection+0x160>
    3028:	60 c0       	rjmp	.+192    	; 0x30ea <DIO_enumSetPinDirection+0x208>
    302a:	2d 81       	ldd	r18, Y+5	; 0x05
    302c:	3e 81       	ldd	r19, Y+6	; 0x06
    302e:	22 30       	cpi	r18, 0x02	; 2
    3030:	31 05       	cpc	r19, r1
    3032:	89 f1       	breq	.+98     	; 0x3096 <DIO_enumSetPinDirection+0x1b4>
    3034:	8d 81       	ldd	r24, Y+5	; 0x05
    3036:	9e 81       	ldd	r25, Y+6	; 0x06
    3038:	83 30       	cpi	r24, 0x03	; 3
    303a:	91 05       	cpc	r25, r1
    303c:	09 f4       	brne	.+2      	; 0x3040 <DIO_enumSetPinDirection+0x15e>
    303e:	40 c0       	rjmp	.+128    	; 0x30c0 <DIO_enumSetPinDirection+0x1de>
    3040:	54 c0       	rjmp	.+168    	; 0x30ea <DIO_enumSetPinDirection+0x208>
		{
			case DIO_PORTA: CLR_BIT(DDRA_REG,copy_u8Pin);break;
    3042:	aa e3       	ldi	r26, 0x3A	; 58
    3044:	b0 e0       	ldi	r27, 0x00	; 0
    3046:	ea e3       	ldi	r30, 0x3A	; 58
    3048:	f0 e0       	ldi	r31, 0x00	; 0
    304a:	80 81       	ld	r24, Z
    304c:	48 2f       	mov	r20, r24
    304e:	8b 81       	ldd	r24, Y+3	; 0x03
    3050:	28 2f       	mov	r18, r24
    3052:	30 e0       	ldi	r19, 0x00	; 0
    3054:	81 e0       	ldi	r24, 0x01	; 1
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	02 2e       	mov	r0, r18
    305a:	02 c0       	rjmp	.+4      	; 0x3060 <DIO_enumSetPinDirection+0x17e>
    305c:	88 0f       	add	r24, r24
    305e:	99 1f       	adc	r25, r25
    3060:	0a 94       	dec	r0
    3062:	e2 f7       	brpl	.-8      	; 0x305c <DIO_enumSetPinDirection+0x17a>
    3064:	80 95       	com	r24
    3066:	84 23       	and	r24, r20
    3068:	8c 93       	st	X, r24
    306a:	42 c0       	rjmp	.+132    	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			case DIO_PORTB: CLR_BIT(DDRB_REG,copy_u8Pin);break;
    306c:	a7 e3       	ldi	r26, 0x37	; 55
    306e:	b0 e0       	ldi	r27, 0x00	; 0
    3070:	e7 e3       	ldi	r30, 0x37	; 55
    3072:	f0 e0       	ldi	r31, 0x00	; 0
    3074:	80 81       	ld	r24, Z
    3076:	48 2f       	mov	r20, r24
    3078:	8b 81       	ldd	r24, Y+3	; 0x03
    307a:	28 2f       	mov	r18, r24
    307c:	30 e0       	ldi	r19, 0x00	; 0
    307e:	81 e0       	ldi	r24, 0x01	; 1
    3080:	90 e0       	ldi	r25, 0x00	; 0
    3082:	02 2e       	mov	r0, r18
    3084:	02 c0       	rjmp	.+4      	; 0x308a <DIO_enumSetPinDirection+0x1a8>
    3086:	88 0f       	add	r24, r24
    3088:	99 1f       	adc	r25, r25
    308a:	0a 94       	dec	r0
    308c:	e2 f7       	brpl	.-8      	; 0x3086 <DIO_enumSetPinDirection+0x1a4>
    308e:	80 95       	com	r24
    3090:	84 23       	and	r24, r20
    3092:	8c 93       	st	X, r24
    3094:	2d c0       	rjmp	.+90     	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			case DIO_PORTC: CLR_BIT(DDRC_REG,copy_u8Pin);break;
    3096:	a4 e3       	ldi	r26, 0x34	; 52
    3098:	b0 e0       	ldi	r27, 0x00	; 0
    309a:	e4 e3       	ldi	r30, 0x34	; 52
    309c:	f0 e0       	ldi	r31, 0x00	; 0
    309e:	80 81       	ld	r24, Z
    30a0:	48 2f       	mov	r20, r24
    30a2:	8b 81       	ldd	r24, Y+3	; 0x03
    30a4:	28 2f       	mov	r18, r24
    30a6:	30 e0       	ldi	r19, 0x00	; 0
    30a8:	81 e0       	ldi	r24, 0x01	; 1
    30aa:	90 e0       	ldi	r25, 0x00	; 0
    30ac:	02 2e       	mov	r0, r18
    30ae:	02 c0       	rjmp	.+4      	; 0x30b4 <DIO_enumSetPinDirection+0x1d2>
    30b0:	88 0f       	add	r24, r24
    30b2:	99 1f       	adc	r25, r25
    30b4:	0a 94       	dec	r0
    30b6:	e2 f7       	brpl	.-8      	; 0x30b0 <DIO_enumSetPinDirection+0x1ce>
    30b8:	80 95       	com	r24
    30ba:	84 23       	and	r24, r20
    30bc:	8c 93       	st	X, r24
    30be:	18 c0       	rjmp	.+48     	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			case DIO_PORTD: CLR_BIT(DDRD_REG,copy_u8Pin);break;
    30c0:	a1 e3       	ldi	r26, 0x31	; 49
    30c2:	b0 e0       	ldi	r27, 0x00	; 0
    30c4:	e1 e3       	ldi	r30, 0x31	; 49
    30c6:	f0 e0       	ldi	r31, 0x00	; 0
    30c8:	80 81       	ld	r24, Z
    30ca:	48 2f       	mov	r20, r24
    30cc:	8b 81       	ldd	r24, Y+3	; 0x03
    30ce:	28 2f       	mov	r18, r24
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	81 e0       	ldi	r24, 0x01	; 1
    30d4:	90 e0       	ldi	r25, 0x00	; 0
    30d6:	02 2e       	mov	r0, r18
    30d8:	02 c0       	rjmp	.+4      	; 0x30de <DIO_enumSetPinDirection+0x1fc>
    30da:	88 0f       	add	r24, r24
    30dc:	99 1f       	adc	r25, r25
    30de:	0a 94       	dec	r0
    30e0:	e2 f7       	brpl	.-8      	; 0x30da <DIO_enumSetPinDirection+0x1f8>
    30e2:	80 95       	com	r24
    30e4:	84 23       	and	r24, r20
    30e6:	8c 93       	st	X, r24
    30e8:	03 c0       	rjmp	.+6      	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			default: Loc_enumState =DIO_NOK;
    30ea:	19 82       	std	Y+1, r1	; 0x01
    30ec:	01 c0       	rjmp	.+2      	; 0x30f0 <DIO_enumSetPinDirection+0x20e>
			
		}
		
	}
	else 
		Loc_enumState =DIO_NOK;
    30ee:	19 82       	std	Y+1, r1	; 0x01
		
 return Loc_enumState;
    30f0:	89 81       	ldd	r24, Y+1	; 0x01
}
    30f2:	28 96       	adiw	r28, 0x08	; 8
    30f4:	0f b6       	in	r0, 0x3f	; 63
    30f6:	f8 94       	cli
    30f8:	de bf       	out	0x3e, r29	; 62
    30fa:	0f be       	out	0x3f, r0	; 63
    30fc:	cd bf       	out	0x3d, r28	; 61
    30fe:	cf 91       	pop	r28
    3100:	df 91       	pop	r29
    3102:	08 95       	ret

00003104 <DIO_enumSetPinValue>:

/* function to set the value(high or low) in pin */
DIO_ErrorStatus DIO_enumSetPinValue(u8 copy_u8PORT,u8 copy_u8Pin,u8 copy_u8Value)
{
    3104:	df 93       	push	r29
    3106:	cf 93       	push	r28
    3108:	cd b7       	in	r28, 0x3d	; 61
    310a:	de b7       	in	r29, 0x3e	; 62
    310c:	28 97       	sbiw	r28, 0x08	; 8
    310e:	0f b6       	in	r0, 0x3f	; 63
    3110:	f8 94       	cli
    3112:	de bf       	out	0x3e, r29	; 62
    3114:	0f be       	out	0x3f, r0	; 63
    3116:	cd bf       	out	0x3d, r28	; 61
    3118:	8a 83       	std	Y+2, r24	; 0x02
    311a:	6b 83       	std	Y+3, r22	; 0x03
    311c:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus Loc_enumState=DIO_OK;
    311e:	81 e0       	ldi	r24, 0x01	; 1
    3120:	89 83       	std	Y+1, r24	; 0x01
   if( (copy_u8Value == DIO_PIN_HIGH)  && (copy_u8Pin >= DIO_PIN0 && copy_u8Pin <= DIO_PIN7 ) )
    3122:	8c 81       	ldd	r24, Y+4	; 0x04
    3124:	81 30       	cpi	r24, 0x01	; 1
    3126:	09 f0       	breq	.+2      	; 0x312a <DIO_enumSetPinValue+0x26>
    3128:	75 c0       	rjmp	.+234    	; 0x3214 <DIO_enumSetPinValue+0x110>
    312a:	8b 81       	ldd	r24, Y+3	; 0x03
    312c:	88 30       	cpi	r24, 0x08	; 8
    312e:	08 f0       	brcs	.+2      	; 0x3132 <DIO_enumSetPinValue+0x2e>
    3130:	71 c0       	rjmp	.+226    	; 0x3214 <DIO_enumSetPinValue+0x110>
	{
		switch(copy_u8PORT)
    3132:	8a 81       	ldd	r24, Y+2	; 0x02
    3134:	28 2f       	mov	r18, r24
    3136:	30 e0       	ldi	r19, 0x00	; 0
    3138:	38 87       	std	Y+8, r19	; 0x08
    313a:	2f 83       	std	Y+7, r18	; 0x07
    313c:	8f 81       	ldd	r24, Y+7	; 0x07
    313e:	98 85       	ldd	r25, Y+8	; 0x08
    3140:	81 30       	cpi	r24, 0x01	; 1
    3142:	91 05       	cpc	r25, r1
    3144:	49 f1       	breq	.+82     	; 0x3198 <DIO_enumSetPinValue+0x94>
    3146:	2f 81       	ldd	r18, Y+7	; 0x07
    3148:	38 85       	ldd	r19, Y+8	; 0x08
    314a:	22 30       	cpi	r18, 0x02	; 2
    314c:	31 05       	cpc	r19, r1
    314e:	2c f4       	brge	.+10     	; 0x315a <DIO_enumSetPinValue+0x56>
    3150:	8f 81       	ldd	r24, Y+7	; 0x07
    3152:	98 85       	ldd	r25, Y+8	; 0x08
    3154:	00 97       	sbiw	r24, 0x00	; 0
    3156:	61 f0       	breq	.+24     	; 0x3170 <DIO_enumSetPinValue+0x6c>
    3158:	5b c0       	rjmp	.+182    	; 0x3210 <DIO_enumSetPinValue+0x10c>
    315a:	2f 81       	ldd	r18, Y+7	; 0x07
    315c:	38 85       	ldd	r19, Y+8	; 0x08
    315e:	22 30       	cpi	r18, 0x02	; 2
    3160:	31 05       	cpc	r19, r1
    3162:	71 f1       	breq	.+92     	; 0x31c0 <DIO_enumSetPinValue+0xbc>
    3164:	8f 81       	ldd	r24, Y+7	; 0x07
    3166:	98 85       	ldd	r25, Y+8	; 0x08
    3168:	83 30       	cpi	r24, 0x03	; 3
    316a:	91 05       	cpc	r25, r1
    316c:	e9 f1       	breq	.+122    	; 0x31e8 <DIO_enumSetPinValue+0xe4>
    316e:	50 c0       	rjmp	.+160    	; 0x3210 <DIO_enumSetPinValue+0x10c>
		{
			case DIO_PORTA: SET_BIT(PORTA_REG,copy_u8Pin);break;
    3170:	ab e3       	ldi	r26, 0x3B	; 59
    3172:	b0 e0       	ldi	r27, 0x00	; 0
    3174:	eb e3       	ldi	r30, 0x3B	; 59
    3176:	f0 e0       	ldi	r31, 0x00	; 0
    3178:	80 81       	ld	r24, Z
    317a:	48 2f       	mov	r20, r24
    317c:	8b 81       	ldd	r24, Y+3	; 0x03
    317e:	28 2f       	mov	r18, r24
    3180:	30 e0       	ldi	r19, 0x00	; 0
    3182:	81 e0       	ldi	r24, 0x01	; 1
    3184:	90 e0       	ldi	r25, 0x00	; 0
    3186:	02 2e       	mov	r0, r18
    3188:	02 c0       	rjmp	.+4      	; 0x318e <DIO_enumSetPinValue+0x8a>
    318a:	88 0f       	add	r24, r24
    318c:	99 1f       	adc	r25, r25
    318e:	0a 94       	dec	r0
    3190:	e2 f7       	brpl	.-8      	; 0x318a <DIO_enumSetPinValue+0x86>
    3192:	84 2b       	or	r24, r20
    3194:	8c 93       	st	X, r24
    3196:	bd c0       	rjmp	.+378    	; 0x3312 <DIO_enumSetPinValue+0x20e>
			case DIO_PORTB: SET_BIT(PORTB_REG,copy_u8Pin);break;
    3198:	a8 e3       	ldi	r26, 0x38	; 56
    319a:	b0 e0       	ldi	r27, 0x00	; 0
    319c:	e8 e3       	ldi	r30, 0x38	; 56
    319e:	f0 e0       	ldi	r31, 0x00	; 0
    31a0:	80 81       	ld	r24, Z
    31a2:	48 2f       	mov	r20, r24
    31a4:	8b 81       	ldd	r24, Y+3	; 0x03
    31a6:	28 2f       	mov	r18, r24
    31a8:	30 e0       	ldi	r19, 0x00	; 0
    31aa:	81 e0       	ldi	r24, 0x01	; 1
    31ac:	90 e0       	ldi	r25, 0x00	; 0
    31ae:	02 2e       	mov	r0, r18
    31b0:	02 c0       	rjmp	.+4      	; 0x31b6 <DIO_enumSetPinValue+0xb2>
    31b2:	88 0f       	add	r24, r24
    31b4:	99 1f       	adc	r25, r25
    31b6:	0a 94       	dec	r0
    31b8:	e2 f7       	brpl	.-8      	; 0x31b2 <DIO_enumSetPinValue+0xae>
    31ba:	84 2b       	or	r24, r20
    31bc:	8c 93       	st	X, r24
    31be:	a9 c0       	rjmp	.+338    	; 0x3312 <DIO_enumSetPinValue+0x20e>
			case DIO_PORTC: SET_BIT(PORTC_REG,copy_u8Pin);break;
    31c0:	a5 e3       	ldi	r26, 0x35	; 53
    31c2:	b0 e0       	ldi	r27, 0x00	; 0
    31c4:	e5 e3       	ldi	r30, 0x35	; 53
    31c6:	f0 e0       	ldi	r31, 0x00	; 0
    31c8:	80 81       	ld	r24, Z
    31ca:	48 2f       	mov	r20, r24
    31cc:	8b 81       	ldd	r24, Y+3	; 0x03
    31ce:	28 2f       	mov	r18, r24
    31d0:	30 e0       	ldi	r19, 0x00	; 0
    31d2:	81 e0       	ldi	r24, 0x01	; 1
    31d4:	90 e0       	ldi	r25, 0x00	; 0
    31d6:	02 2e       	mov	r0, r18
    31d8:	02 c0       	rjmp	.+4      	; 0x31de <DIO_enumSetPinValue+0xda>
    31da:	88 0f       	add	r24, r24
    31dc:	99 1f       	adc	r25, r25
    31de:	0a 94       	dec	r0
    31e0:	e2 f7       	brpl	.-8      	; 0x31da <DIO_enumSetPinValue+0xd6>
    31e2:	84 2b       	or	r24, r20
    31e4:	8c 93       	st	X, r24
    31e6:	95 c0       	rjmp	.+298    	; 0x3312 <DIO_enumSetPinValue+0x20e>
			case DIO_PORTD: SET_BIT(PORTD_REG,copy_u8Pin);break;
    31e8:	a2 e3       	ldi	r26, 0x32	; 50
    31ea:	b0 e0       	ldi	r27, 0x00	; 0
    31ec:	e2 e3       	ldi	r30, 0x32	; 50
    31ee:	f0 e0       	ldi	r31, 0x00	; 0
    31f0:	80 81       	ld	r24, Z
    31f2:	48 2f       	mov	r20, r24
    31f4:	8b 81       	ldd	r24, Y+3	; 0x03
    31f6:	28 2f       	mov	r18, r24
    31f8:	30 e0       	ldi	r19, 0x00	; 0
    31fa:	81 e0       	ldi	r24, 0x01	; 1
    31fc:	90 e0       	ldi	r25, 0x00	; 0
    31fe:	02 2e       	mov	r0, r18
    3200:	02 c0       	rjmp	.+4      	; 0x3206 <DIO_enumSetPinValue+0x102>
    3202:	88 0f       	add	r24, r24
    3204:	99 1f       	adc	r25, r25
    3206:	0a 94       	dec	r0
    3208:	e2 f7       	brpl	.-8      	; 0x3202 <DIO_enumSetPinValue+0xfe>
    320a:	84 2b       	or	r24, r20
    320c:	8c 93       	st	X, r24
    320e:	81 c0       	rjmp	.+258    	; 0x3312 <DIO_enumSetPinValue+0x20e>
			default: Loc_enumState =DIO_NOK;
    3210:	19 82       	std	Y+1, r1	; 0x01
    3212:	7f c0       	rjmp	.+254    	; 0x3312 <DIO_enumSetPinValue+0x20e>
			
		}
		
	}
	else if( (copy_u8Value == DIO_PIN_LOW)  && (copy_u8Pin >= DIO_PIN0 && copy_u8Pin <= DIO_PIN7 ) )
    3214:	8c 81       	ldd	r24, Y+4	; 0x04
    3216:	88 23       	and	r24, r24
    3218:	09 f0       	breq	.+2      	; 0x321c <DIO_enumSetPinValue+0x118>
    321a:	7a c0       	rjmp	.+244    	; 0x3310 <DIO_enumSetPinValue+0x20c>
    321c:	8b 81       	ldd	r24, Y+3	; 0x03
    321e:	88 30       	cpi	r24, 0x08	; 8
    3220:	08 f0       	brcs	.+2      	; 0x3224 <DIO_enumSetPinValue+0x120>
    3222:	76 c0       	rjmp	.+236    	; 0x3310 <DIO_enumSetPinValue+0x20c>
	{
		switch(copy_u8PORT)
    3224:	8a 81       	ldd	r24, Y+2	; 0x02
    3226:	28 2f       	mov	r18, r24
    3228:	30 e0       	ldi	r19, 0x00	; 0
    322a:	3e 83       	std	Y+6, r19	; 0x06
    322c:	2d 83       	std	Y+5, r18	; 0x05
    322e:	8d 81       	ldd	r24, Y+5	; 0x05
    3230:	9e 81       	ldd	r25, Y+6	; 0x06
    3232:	81 30       	cpi	r24, 0x01	; 1
    3234:	91 05       	cpc	r25, r1
    3236:	59 f1       	breq	.+86     	; 0x328e <DIO_enumSetPinValue+0x18a>
    3238:	2d 81       	ldd	r18, Y+5	; 0x05
    323a:	3e 81       	ldd	r19, Y+6	; 0x06
    323c:	22 30       	cpi	r18, 0x02	; 2
    323e:	31 05       	cpc	r19, r1
    3240:	2c f4       	brge	.+10     	; 0x324c <DIO_enumSetPinValue+0x148>
    3242:	8d 81       	ldd	r24, Y+5	; 0x05
    3244:	9e 81       	ldd	r25, Y+6	; 0x06
    3246:	00 97       	sbiw	r24, 0x00	; 0
    3248:	69 f0       	breq	.+26     	; 0x3264 <DIO_enumSetPinValue+0x160>
    324a:	60 c0       	rjmp	.+192    	; 0x330c <DIO_enumSetPinValue+0x208>
    324c:	2d 81       	ldd	r18, Y+5	; 0x05
    324e:	3e 81       	ldd	r19, Y+6	; 0x06
    3250:	22 30       	cpi	r18, 0x02	; 2
    3252:	31 05       	cpc	r19, r1
    3254:	89 f1       	breq	.+98     	; 0x32b8 <DIO_enumSetPinValue+0x1b4>
    3256:	8d 81       	ldd	r24, Y+5	; 0x05
    3258:	9e 81       	ldd	r25, Y+6	; 0x06
    325a:	83 30       	cpi	r24, 0x03	; 3
    325c:	91 05       	cpc	r25, r1
    325e:	09 f4       	brne	.+2      	; 0x3262 <DIO_enumSetPinValue+0x15e>
    3260:	40 c0       	rjmp	.+128    	; 0x32e2 <DIO_enumSetPinValue+0x1de>
    3262:	54 c0       	rjmp	.+168    	; 0x330c <DIO_enumSetPinValue+0x208>
		{
			case DIO_PORTA: CLR_BIT(PORTA_REG,copy_u8Pin);break;
    3264:	ab e3       	ldi	r26, 0x3B	; 59
    3266:	b0 e0       	ldi	r27, 0x00	; 0
    3268:	eb e3       	ldi	r30, 0x3B	; 59
    326a:	f0 e0       	ldi	r31, 0x00	; 0
    326c:	80 81       	ld	r24, Z
    326e:	48 2f       	mov	r20, r24
    3270:	8b 81       	ldd	r24, Y+3	; 0x03
    3272:	28 2f       	mov	r18, r24
    3274:	30 e0       	ldi	r19, 0x00	; 0
    3276:	81 e0       	ldi	r24, 0x01	; 1
    3278:	90 e0       	ldi	r25, 0x00	; 0
    327a:	02 2e       	mov	r0, r18
    327c:	02 c0       	rjmp	.+4      	; 0x3282 <DIO_enumSetPinValue+0x17e>
    327e:	88 0f       	add	r24, r24
    3280:	99 1f       	adc	r25, r25
    3282:	0a 94       	dec	r0
    3284:	e2 f7       	brpl	.-8      	; 0x327e <DIO_enumSetPinValue+0x17a>
    3286:	80 95       	com	r24
    3288:	84 23       	and	r24, r20
    328a:	8c 93       	st	X, r24
    328c:	42 c0       	rjmp	.+132    	; 0x3312 <DIO_enumSetPinValue+0x20e>
			case DIO_PORTB: CLR_BIT(PORTB_REG,copy_u8Pin);break;
    328e:	a8 e3       	ldi	r26, 0x38	; 56
    3290:	b0 e0       	ldi	r27, 0x00	; 0
    3292:	e8 e3       	ldi	r30, 0x38	; 56
    3294:	f0 e0       	ldi	r31, 0x00	; 0
    3296:	80 81       	ld	r24, Z
    3298:	48 2f       	mov	r20, r24
    329a:	8b 81       	ldd	r24, Y+3	; 0x03
    329c:	28 2f       	mov	r18, r24
    329e:	30 e0       	ldi	r19, 0x00	; 0
    32a0:	81 e0       	ldi	r24, 0x01	; 1
    32a2:	90 e0       	ldi	r25, 0x00	; 0
    32a4:	02 2e       	mov	r0, r18
    32a6:	02 c0       	rjmp	.+4      	; 0x32ac <DIO_enumSetPinValue+0x1a8>
    32a8:	88 0f       	add	r24, r24
    32aa:	99 1f       	adc	r25, r25
    32ac:	0a 94       	dec	r0
    32ae:	e2 f7       	brpl	.-8      	; 0x32a8 <DIO_enumSetPinValue+0x1a4>
    32b0:	80 95       	com	r24
    32b2:	84 23       	and	r24, r20
    32b4:	8c 93       	st	X, r24
    32b6:	2d c0       	rjmp	.+90     	; 0x3312 <DIO_enumSetPinValue+0x20e>
			case DIO_PORTC: CLR_BIT(PORTC_REG,copy_u8Pin);break;
    32b8:	a5 e3       	ldi	r26, 0x35	; 53
    32ba:	b0 e0       	ldi	r27, 0x00	; 0
    32bc:	e5 e3       	ldi	r30, 0x35	; 53
    32be:	f0 e0       	ldi	r31, 0x00	; 0
    32c0:	80 81       	ld	r24, Z
    32c2:	48 2f       	mov	r20, r24
    32c4:	8b 81       	ldd	r24, Y+3	; 0x03
    32c6:	28 2f       	mov	r18, r24
    32c8:	30 e0       	ldi	r19, 0x00	; 0
    32ca:	81 e0       	ldi	r24, 0x01	; 1
    32cc:	90 e0       	ldi	r25, 0x00	; 0
    32ce:	02 2e       	mov	r0, r18
    32d0:	02 c0       	rjmp	.+4      	; 0x32d6 <DIO_enumSetPinValue+0x1d2>
    32d2:	88 0f       	add	r24, r24
    32d4:	99 1f       	adc	r25, r25
    32d6:	0a 94       	dec	r0
    32d8:	e2 f7       	brpl	.-8      	; 0x32d2 <DIO_enumSetPinValue+0x1ce>
    32da:	80 95       	com	r24
    32dc:	84 23       	and	r24, r20
    32de:	8c 93       	st	X, r24
    32e0:	18 c0       	rjmp	.+48     	; 0x3312 <DIO_enumSetPinValue+0x20e>
			case DIO_PORTD: CLR_BIT(PORTD_REG,copy_u8Pin);break;
    32e2:	a2 e3       	ldi	r26, 0x32	; 50
    32e4:	b0 e0       	ldi	r27, 0x00	; 0
    32e6:	e2 e3       	ldi	r30, 0x32	; 50
    32e8:	f0 e0       	ldi	r31, 0x00	; 0
    32ea:	80 81       	ld	r24, Z
    32ec:	48 2f       	mov	r20, r24
    32ee:	8b 81       	ldd	r24, Y+3	; 0x03
    32f0:	28 2f       	mov	r18, r24
    32f2:	30 e0       	ldi	r19, 0x00	; 0
    32f4:	81 e0       	ldi	r24, 0x01	; 1
    32f6:	90 e0       	ldi	r25, 0x00	; 0
    32f8:	02 2e       	mov	r0, r18
    32fa:	02 c0       	rjmp	.+4      	; 0x3300 <DIO_enumSetPinValue+0x1fc>
    32fc:	88 0f       	add	r24, r24
    32fe:	99 1f       	adc	r25, r25
    3300:	0a 94       	dec	r0
    3302:	e2 f7       	brpl	.-8      	; 0x32fc <DIO_enumSetPinValue+0x1f8>
    3304:	80 95       	com	r24
    3306:	84 23       	and	r24, r20
    3308:	8c 93       	st	X, r24
    330a:	03 c0       	rjmp	.+6      	; 0x3312 <DIO_enumSetPinValue+0x20e>
			default: Loc_enumState =DIO_NOK;
    330c:	19 82       	std	Y+1, r1	; 0x01
    330e:	01 c0       	rjmp	.+2      	; 0x3312 <DIO_enumSetPinValue+0x20e>
			
		}
		
	}
	else 
		Loc_enumState =DIO_NOK;
    3310:	19 82       	std	Y+1, r1	; 0x01
	
 return Loc_enumState;
    3312:	89 81       	ldd	r24, Y+1	; 0x01
}
    3314:	28 96       	adiw	r28, 0x08	; 8
    3316:	0f b6       	in	r0, 0x3f	; 63
    3318:	f8 94       	cli
    331a:	de bf       	out	0x3e, r29	; 62
    331c:	0f be       	out	0x3f, r0	; 63
    331e:	cd bf       	out	0x3d, r28	; 61
    3320:	cf 91       	pop	r28
    3322:	df 91       	pop	r29
    3324:	08 95       	ret

00003326 <DIO_enumGetPinValue>:
/* function to get the value(high or low) from pin */ 
DIO_ErrorStatus DIO_enumGetPinValue(u8 copy_u8PORT,u8 copy_u8Pin,u8 *copy_PtrData)
{
    3326:	df 93       	push	r29
    3328:	cf 93       	push	r28
    332a:	cd b7       	in	r28, 0x3d	; 61
    332c:	de b7       	in	r29, 0x3e	; 62
    332e:	27 97       	sbiw	r28, 0x07	; 7
    3330:	0f b6       	in	r0, 0x3f	; 63
    3332:	f8 94       	cli
    3334:	de bf       	out	0x3e, r29	; 62
    3336:	0f be       	out	0x3f, r0	; 63
    3338:	cd bf       	out	0x3d, r28	; 61
    333a:	8a 83       	std	Y+2, r24	; 0x02
    333c:	6b 83       	std	Y+3, r22	; 0x03
    333e:	5d 83       	std	Y+5, r21	; 0x05
    3340:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus Loc_enumState=DIO_OK;
    3342:	81 e0       	ldi	r24, 0x01	; 1
    3344:	89 83       	std	Y+1, r24	; 0x01
   if( copy_u8Pin >= DIO_PIN0 && copy_u8Pin <= DIO_PIN7  )
    3346:	8b 81       	ldd	r24, Y+3	; 0x03
    3348:	88 30       	cpi	r24, 0x08	; 8
    334a:	08 f0       	brcs	.+2      	; 0x334e <DIO_enumGetPinValue+0x28>
    334c:	73 c0       	rjmp	.+230    	; 0x3434 <DIO_enumGetPinValue+0x10e>
	{
		switch(copy_u8PORT)
    334e:	8a 81       	ldd	r24, Y+2	; 0x02
    3350:	28 2f       	mov	r18, r24
    3352:	30 e0       	ldi	r19, 0x00	; 0
    3354:	3f 83       	std	Y+7, r19	; 0x07
    3356:	2e 83       	std	Y+6, r18	; 0x06
    3358:	4e 81       	ldd	r20, Y+6	; 0x06
    335a:	5f 81       	ldd	r21, Y+7	; 0x07
    335c:	41 30       	cpi	r20, 0x01	; 1
    335e:	51 05       	cpc	r21, r1
    3360:	59 f1       	breq	.+86     	; 0x33b8 <DIO_enumGetPinValue+0x92>
    3362:	8e 81       	ldd	r24, Y+6	; 0x06
    3364:	9f 81       	ldd	r25, Y+7	; 0x07
    3366:	82 30       	cpi	r24, 0x02	; 2
    3368:	91 05       	cpc	r25, r1
    336a:	34 f4       	brge	.+12     	; 0x3378 <DIO_enumGetPinValue+0x52>
    336c:	2e 81       	ldd	r18, Y+6	; 0x06
    336e:	3f 81       	ldd	r19, Y+7	; 0x07
    3370:	21 15       	cp	r18, r1
    3372:	31 05       	cpc	r19, r1
    3374:	69 f0       	breq	.+26     	; 0x3390 <DIO_enumGetPinValue+0x6a>
    3376:	5c c0       	rjmp	.+184    	; 0x3430 <DIO_enumGetPinValue+0x10a>
    3378:	4e 81       	ldd	r20, Y+6	; 0x06
    337a:	5f 81       	ldd	r21, Y+7	; 0x07
    337c:	42 30       	cpi	r20, 0x02	; 2
    337e:	51 05       	cpc	r21, r1
    3380:	79 f1       	breq	.+94     	; 0x33e0 <DIO_enumGetPinValue+0xba>
    3382:	8e 81       	ldd	r24, Y+6	; 0x06
    3384:	9f 81       	ldd	r25, Y+7	; 0x07
    3386:	83 30       	cpi	r24, 0x03	; 3
    3388:	91 05       	cpc	r25, r1
    338a:	09 f4       	brne	.+2      	; 0x338e <DIO_enumGetPinValue+0x68>
    338c:	3d c0       	rjmp	.+122    	; 0x3408 <DIO_enumGetPinValue+0xe2>
    338e:	50 c0       	rjmp	.+160    	; 0x3430 <DIO_enumGetPinValue+0x10a>
		{
			case DIO_PORTA: *copy_PtrData=GET_BIT(PINA_REG,copy_u8Pin);break;
    3390:	e9 e3       	ldi	r30, 0x39	; 57
    3392:	f0 e0       	ldi	r31, 0x00	; 0
    3394:	80 81       	ld	r24, Z
    3396:	28 2f       	mov	r18, r24
    3398:	30 e0       	ldi	r19, 0x00	; 0
    339a:	8b 81       	ldd	r24, Y+3	; 0x03
    339c:	88 2f       	mov	r24, r24
    339e:	90 e0       	ldi	r25, 0x00	; 0
    33a0:	a9 01       	movw	r20, r18
    33a2:	02 c0       	rjmp	.+4      	; 0x33a8 <DIO_enumGetPinValue+0x82>
    33a4:	55 95       	asr	r21
    33a6:	47 95       	ror	r20
    33a8:	8a 95       	dec	r24
    33aa:	e2 f7       	brpl	.-8      	; 0x33a4 <DIO_enumGetPinValue+0x7e>
    33ac:	ca 01       	movw	r24, r20
    33ae:	81 70       	andi	r24, 0x01	; 1
    33b0:	ec 81       	ldd	r30, Y+4	; 0x04
    33b2:	fd 81       	ldd	r31, Y+5	; 0x05
    33b4:	80 83       	st	Z, r24
    33b6:	3f c0       	rjmp	.+126    	; 0x3436 <DIO_enumGetPinValue+0x110>
			case DIO_PORTB: *copy_PtrData=GET_BIT(PINB_REG,copy_u8Pin);break;
    33b8:	e6 e3       	ldi	r30, 0x36	; 54
    33ba:	f0 e0       	ldi	r31, 0x00	; 0
    33bc:	80 81       	ld	r24, Z
    33be:	28 2f       	mov	r18, r24
    33c0:	30 e0       	ldi	r19, 0x00	; 0
    33c2:	8b 81       	ldd	r24, Y+3	; 0x03
    33c4:	88 2f       	mov	r24, r24
    33c6:	90 e0       	ldi	r25, 0x00	; 0
    33c8:	a9 01       	movw	r20, r18
    33ca:	02 c0       	rjmp	.+4      	; 0x33d0 <DIO_enumGetPinValue+0xaa>
    33cc:	55 95       	asr	r21
    33ce:	47 95       	ror	r20
    33d0:	8a 95       	dec	r24
    33d2:	e2 f7       	brpl	.-8      	; 0x33cc <DIO_enumGetPinValue+0xa6>
    33d4:	ca 01       	movw	r24, r20
    33d6:	81 70       	andi	r24, 0x01	; 1
    33d8:	ec 81       	ldd	r30, Y+4	; 0x04
    33da:	fd 81       	ldd	r31, Y+5	; 0x05
    33dc:	80 83       	st	Z, r24
    33de:	2b c0       	rjmp	.+86     	; 0x3436 <DIO_enumGetPinValue+0x110>
			case DIO_PORTC: *copy_PtrData=GET_BIT(PINC_REG,copy_u8Pin);break;
    33e0:	e3 e3       	ldi	r30, 0x33	; 51
    33e2:	f0 e0       	ldi	r31, 0x00	; 0
    33e4:	80 81       	ld	r24, Z
    33e6:	28 2f       	mov	r18, r24
    33e8:	30 e0       	ldi	r19, 0x00	; 0
    33ea:	8b 81       	ldd	r24, Y+3	; 0x03
    33ec:	88 2f       	mov	r24, r24
    33ee:	90 e0       	ldi	r25, 0x00	; 0
    33f0:	a9 01       	movw	r20, r18
    33f2:	02 c0       	rjmp	.+4      	; 0x33f8 <DIO_enumGetPinValue+0xd2>
    33f4:	55 95       	asr	r21
    33f6:	47 95       	ror	r20
    33f8:	8a 95       	dec	r24
    33fa:	e2 f7       	brpl	.-8      	; 0x33f4 <DIO_enumGetPinValue+0xce>
    33fc:	ca 01       	movw	r24, r20
    33fe:	81 70       	andi	r24, 0x01	; 1
    3400:	ec 81       	ldd	r30, Y+4	; 0x04
    3402:	fd 81       	ldd	r31, Y+5	; 0x05
    3404:	80 83       	st	Z, r24
    3406:	17 c0       	rjmp	.+46     	; 0x3436 <DIO_enumGetPinValue+0x110>
			case DIO_PORTD: *copy_PtrData=GET_BIT(PIND_REG,copy_u8Pin);break;
    3408:	e0 e3       	ldi	r30, 0x30	; 48
    340a:	f0 e0       	ldi	r31, 0x00	; 0
    340c:	80 81       	ld	r24, Z
    340e:	28 2f       	mov	r18, r24
    3410:	30 e0       	ldi	r19, 0x00	; 0
    3412:	8b 81       	ldd	r24, Y+3	; 0x03
    3414:	88 2f       	mov	r24, r24
    3416:	90 e0       	ldi	r25, 0x00	; 0
    3418:	a9 01       	movw	r20, r18
    341a:	02 c0       	rjmp	.+4      	; 0x3420 <DIO_enumGetPinValue+0xfa>
    341c:	55 95       	asr	r21
    341e:	47 95       	ror	r20
    3420:	8a 95       	dec	r24
    3422:	e2 f7       	brpl	.-8      	; 0x341c <DIO_enumGetPinValue+0xf6>
    3424:	ca 01       	movw	r24, r20
    3426:	81 70       	andi	r24, 0x01	; 1
    3428:	ec 81       	ldd	r30, Y+4	; 0x04
    342a:	fd 81       	ldd	r31, Y+5	; 0x05
    342c:	80 83       	st	Z, r24
    342e:	03 c0       	rjmp	.+6      	; 0x3436 <DIO_enumGetPinValue+0x110>
			default: Loc_enumState =DIO_NOK;
    3430:	19 82       	std	Y+1, r1	; 0x01
    3432:	01 c0       	rjmp	.+2      	; 0x3436 <DIO_enumGetPinValue+0x110>
		}
		
	}
	
	else 
		Loc_enumState =DIO_NOK;
    3434:	19 82       	std	Y+1, r1	; 0x01
	
 return Loc_enumState;
    3436:	89 81       	ldd	r24, Y+1	; 0x01
}
    3438:	27 96       	adiw	r28, 0x07	; 7
    343a:	0f b6       	in	r0, 0x3f	; 63
    343c:	f8 94       	cli
    343e:	de bf       	out	0x3e, r29	; 62
    3440:	0f be       	out	0x3f, r0	; 63
    3442:	cd bf       	out	0x3d, r28	; 61
    3444:	cf 91       	pop	r28
    3446:	df 91       	pop	r29
    3448:	08 95       	ret

0000344a <DIO_enumTogglePinValue>:
/* function to toggle the value(high or low) in pin */
DIO_ErrorStatus DIO_enumTogglePinValue(u8 copy_u8PORT,u8 copy_u8Pin)
{
    344a:	df 93       	push	r29
    344c:	cf 93       	push	r28
    344e:	00 d0       	rcall	.+0      	; 0x3450 <DIO_enumTogglePinValue+0x6>
    3450:	00 d0       	rcall	.+0      	; 0x3452 <DIO_enumTogglePinValue+0x8>
    3452:	0f 92       	push	r0
    3454:	cd b7       	in	r28, 0x3d	; 61
    3456:	de b7       	in	r29, 0x3e	; 62
    3458:	8a 83       	std	Y+2, r24	; 0x02
    345a:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus Loc_enumState=DIO_OK;
    345c:	81 e0       	ldi	r24, 0x01	; 1
    345e:	89 83       	std	Y+1, r24	; 0x01
   if( copy_u8Pin >= DIO_PIN0 && copy_u8Pin <= DIO_PIN7  )
    3460:	8b 81       	ldd	r24, Y+3	; 0x03
    3462:	88 30       	cpi	r24, 0x08	; 8
    3464:	08 f0       	brcs	.+2      	; 0x3468 <DIO_enumTogglePinValue+0x1e>
    3466:	71 c0       	rjmp	.+226    	; 0x354a <DIO_enumTogglePinValue+0x100>
	{
		switch(copy_u8PORT)
    3468:	8a 81       	ldd	r24, Y+2	; 0x02
    346a:	28 2f       	mov	r18, r24
    346c:	30 e0       	ldi	r19, 0x00	; 0
    346e:	3d 83       	std	Y+5, r19	; 0x05
    3470:	2c 83       	std	Y+4, r18	; 0x04
    3472:	8c 81       	ldd	r24, Y+4	; 0x04
    3474:	9d 81       	ldd	r25, Y+5	; 0x05
    3476:	81 30       	cpi	r24, 0x01	; 1
    3478:	91 05       	cpc	r25, r1
    347a:	49 f1       	breq	.+82     	; 0x34ce <DIO_enumTogglePinValue+0x84>
    347c:	2c 81       	ldd	r18, Y+4	; 0x04
    347e:	3d 81       	ldd	r19, Y+5	; 0x05
    3480:	22 30       	cpi	r18, 0x02	; 2
    3482:	31 05       	cpc	r19, r1
    3484:	2c f4       	brge	.+10     	; 0x3490 <DIO_enumTogglePinValue+0x46>
    3486:	8c 81       	ldd	r24, Y+4	; 0x04
    3488:	9d 81       	ldd	r25, Y+5	; 0x05
    348a:	00 97       	sbiw	r24, 0x00	; 0
    348c:	61 f0       	breq	.+24     	; 0x34a6 <DIO_enumTogglePinValue+0x5c>
    348e:	5b c0       	rjmp	.+182    	; 0x3546 <DIO_enumTogglePinValue+0xfc>
    3490:	2c 81       	ldd	r18, Y+4	; 0x04
    3492:	3d 81       	ldd	r19, Y+5	; 0x05
    3494:	22 30       	cpi	r18, 0x02	; 2
    3496:	31 05       	cpc	r19, r1
    3498:	71 f1       	breq	.+92     	; 0x34f6 <DIO_enumTogglePinValue+0xac>
    349a:	8c 81       	ldd	r24, Y+4	; 0x04
    349c:	9d 81       	ldd	r25, Y+5	; 0x05
    349e:	83 30       	cpi	r24, 0x03	; 3
    34a0:	91 05       	cpc	r25, r1
    34a2:	e9 f1       	breq	.+122    	; 0x351e <DIO_enumTogglePinValue+0xd4>
    34a4:	50 c0       	rjmp	.+160    	; 0x3546 <DIO_enumTogglePinValue+0xfc>
		{
			case DIO_PORTA: TOG_BIT(PORTA_REG,copy_u8Pin);break;
    34a6:	ab e3       	ldi	r26, 0x3B	; 59
    34a8:	b0 e0       	ldi	r27, 0x00	; 0
    34aa:	eb e3       	ldi	r30, 0x3B	; 59
    34ac:	f0 e0       	ldi	r31, 0x00	; 0
    34ae:	80 81       	ld	r24, Z
    34b0:	48 2f       	mov	r20, r24
    34b2:	8b 81       	ldd	r24, Y+3	; 0x03
    34b4:	28 2f       	mov	r18, r24
    34b6:	30 e0       	ldi	r19, 0x00	; 0
    34b8:	81 e0       	ldi	r24, 0x01	; 1
    34ba:	90 e0       	ldi	r25, 0x00	; 0
    34bc:	02 2e       	mov	r0, r18
    34be:	02 c0       	rjmp	.+4      	; 0x34c4 <DIO_enumTogglePinValue+0x7a>
    34c0:	88 0f       	add	r24, r24
    34c2:	99 1f       	adc	r25, r25
    34c4:	0a 94       	dec	r0
    34c6:	e2 f7       	brpl	.-8      	; 0x34c0 <DIO_enumTogglePinValue+0x76>
    34c8:	84 27       	eor	r24, r20
    34ca:	8c 93       	st	X, r24
    34cc:	3f c0       	rjmp	.+126    	; 0x354c <DIO_enumTogglePinValue+0x102>
			case DIO_PORTB: TOG_BIT(PORTB_REG,copy_u8Pin);break;
    34ce:	a8 e3       	ldi	r26, 0x38	; 56
    34d0:	b0 e0       	ldi	r27, 0x00	; 0
    34d2:	e8 e3       	ldi	r30, 0x38	; 56
    34d4:	f0 e0       	ldi	r31, 0x00	; 0
    34d6:	80 81       	ld	r24, Z
    34d8:	48 2f       	mov	r20, r24
    34da:	8b 81       	ldd	r24, Y+3	; 0x03
    34dc:	28 2f       	mov	r18, r24
    34de:	30 e0       	ldi	r19, 0x00	; 0
    34e0:	81 e0       	ldi	r24, 0x01	; 1
    34e2:	90 e0       	ldi	r25, 0x00	; 0
    34e4:	02 2e       	mov	r0, r18
    34e6:	02 c0       	rjmp	.+4      	; 0x34ec <DIO_enumTogglePinValue+0xa2>
    34e8:	88 0f       	add	r24, r24
    34ea:	99 1f       	adc	r25, r25
    34ec:	0a 94       	dec	r0
    34ee:	e2 f7       	brpl	.-8      	; 0x34e8 <DIO_enumTogglePinValue+0x9e>
    34f0:	84 27       	eor	r24, r20
    34f2:	8c 93       	st	X, r24
    34f4:	2b c0       	rjmp	.+86     	; 0x354c <DIO_enumTogglePinValue+0x102>
			case DIO_PORTC: TOG_BIT(PORTC_REG,copy_u8Pin);break;
    34f6:	a5 e3       	ldi	r26, 0x35	; 53
    34f8:	b0 e0       	ldi	r27, 0x00	; 0
    34fa:	e5 e3       	ldi	r30, 0x35	; 53
    34fc:	f0 e0       	ldi	r31, 0x00	; 0
    34fe:	80 81       	ld	r24, Z
    3500:	48 2f       	mov	r20, r24
    3502:	8b 81       	ldd	r24, Y+3	; 0x03
    3504:	28 2f       	mov	r18, r24
    3506:	30 e0       	ldi	r19, 0x00	; 0
    3508:	81 e0       	ldi	r24, 0x01	; 1
    350a:	90 e0       	ldi	r25, 0x00	; 0
    350c:	02 2e       	mov	r0, r18
    350e:	02 c0       	rjmp	.+4      	; 0x3514 <DIO_enumTogglePinValue+0xca>
    3510:	88 0f       	add	r24, r24
    3512:	99 1f       	adc	r25, r25
    3514:	0a 94       	dec	r0
    3516:	e2 f7       	brpl	.-8      	; 0x3510 <DIO_enumTogglePinValue+0xc6>
    3518:	84 27       	eor	r24, r20
    351a:	8c 93       	st	X, r24
    351c:	17 c0       	rjmp	.+46     	; 0x354c <DIO_enumTogglePinValue+0x102>
			case DIO_PORTD: TOG_BIT(PORTD_REG,copy_u8Pin);break;
    351e:	a2 e3       	ldi	r26, 0x32	; 50
    3520:	b0 e0       	ldi	r27, 0x00	; 0
    3522:	e2 e3       	ldi	r30, 0x32	; 50
    3524:	f0 e0       	ldi	r31, 0x00	; 0
    3526:	80 81       	ld	r24, Z
    3528:	48 2f       	mov	r20, r24
    352a:	8b 81       	ldd	r24, Y+3	; 0x03
    352c:	28 2f       	mov	r18, r24
    352e:	30 e0       	ldi	r19, 0x00	; 0
    3530:	81 e0       	ldi	r24, 0x01	; 1
    3532:	90 e0       	ldi	r25, 0x00	; 0
    3534:	02 2e       	mov	r0, r18
    3536:	02 c0       	rjmp	.+4      	; 0x353c <DIO_enumTogglePinValue+0xf2>
    3538:	88 0f       	add	r24, r24
    353a:	99 1f       	adc	r25, r25
    353c:	0a 94       	dec	r0
    353e:	e2 f7       	brpl	.-8      	; 0x3538 <DIO_enumTogglePinValue+0xee>
    3540:	84 27       	eor	r24, r20
    3542:	8c 93       	st	X, r24
    3544:	03 c0       	rjmp	.+6      	; 0x354c <DIO_enumTogglePinValue+0x102>
			default: Loc_enumState =DIO_NOK;
    3546:	19 82       	std	Y+1, r1	; 0x01
    3548:	01 c0       	rjmp	.+2      	; 0x354c <DIO_enumTogglePinValue+0x102>
			
		}
		
	}
	else 
		Loc_enumState =DIO_NOK;
    354a:	19 82       	std	Y+1, r1	; 0x01
	
 return Loc_enumState;
    354c:	89 81       	ldd	r24, Y+1	; 0x01
}
    354e:	0f 90       	pop	r0
    3550:	0f 90       	pop	r0
    3552:	0f 90       	pop	r0
    3554:	0f 90       	pop	r0
    3556:	0f 90       	pop	r0
    3558:	cf 91       	pop	r28
    355a:	df 91       	pop	r29
    355c:	08 95       	ret

0000355e <DIO_enumSetLowNibbleValue>:
DIO_ErrorStatus DIO_enumSetLowNibbleValue  (u8 copy_u8PORT, u8 copy_u8Value)
{
    355e:	df 93       	push	r29
    3560:	cf 93       	push	r28
    3562:	00 d0       	rcall	.+0      	; 0x3564 <DIO_enumSetLowNibbleValue+0x6>
    3564:	00 d0       	rcall	.+0      	; 0x3566 <DIO_enumSetLowNibbleValue+0x8>
    3566:	0f 92       	push	r0
    3568:	cd b7       	in	r28, 0x3d	; 61
    356a:	de b7       	in	r29, 0x3e	; 62
    356c:	8a 83       	std	Y+2, r24	; 0x02
    356e:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus Loc_enumState=DIO_OK;
    3570:	81 e0       	ldi	r24, 0x01	; 1
    3572:	89 83       	std	Y+1, r24	; 0x01
	copy_u8Value &=0x0f;
    3574:	8b 81       	ldd	r24, Y+3	; 0x03
    3576:	8f 70       	andi	r24, 0x0F	; 15
    3578:	8b 83       	std	Y+3, r24	; 0x03
	
		switch(copy_u8PORT)
    357a:	8a 81       	ldd	r24, Y+2	; 0x02
    357c:	28 2f       	mov	r18, r24
    357e:	30 e0       	ldi	r19, 0x00	; 0
    3580:	3d 83       	std	Y+5, r19	; 0x05
    3582:	2c 83       	std	Y+4, r18	; 0x04
    3584:	8c 81       	ldd	r24, Y+4	; 0x04
    3586:	9d 81       	ldd	r25, Y+5	; 0x05
    3588:	81 30       	cpi	r24, 0x01	; 1
    358a:	91 05       	cpc	r25, r1
    358c:	29 f1       	breq	.+74     	; 0x35d8 <DIO_enumSetLowNibbleValue+0x7a>
    358e:	2c 81       	ldd	r18, Y+4	; 0x04
    3590:	3d 81       	ldd	r19, Y+5	; 0x05
    3592:	22 30       	cpi	r18, 0x02	; 2
    3594:	31 05       	cpc	r19, r1
    3596:	2c f4       	brge	.+10     	; 0x35a2 <DIO_enumSetLowNibbleValue+0x44>
    3598:	8c 81       	ldd	r24, Y+4	; 0x04
    359a:	9d 81       	ldd	r25, Y+5	; 0x05
    359c:	00 97       	sbiw	r24, 0x00	; 0
    359e:	61 f0       	breq	.+24     	; 0x35b8 <DIO_enumSetLowNibbleValue+0x5a>
    35a0:	4b c0       	rjmp	.+150    	; 0x3638 <DIO_enumSetLowNibbleValue+0xda>
    35a2:	2c 81       	ldd	r18, Y+4	; 0x04
    35a4:	3d 81       	ldd	r19, Y+5	; 0x05
    35a6:	22 30       	cpi	r18, 0x02	; 2
    35a8:	31 05       	cpc	r19, r1
    35aa:	31 f1       	breq	.+76     	; 0x35f8 <DIO_enumSetLowNibbleValue+0x9a>
    35ac:	8c 81       	ldd	r24, Y+4	; 0x04
    35ae:	9d 81       	ldd	r25, Y+5	; 0x05
    35b0:	83 30       	cpi	r24, 0x03	; 3
    35b2:	91 05       	cpc	r25, r1
    35b4:	89 f1       	breq	.+98     	; 0x3618 <DIO_enumSetLowNibbleValue+0xba>
    35b6:	40 c0       	rjmp	.+128    	; 0x3638 <DIO_enumSetLowNibbleValue+0xda>
		{
			case DIO_PORTA: PORTA_REG&=0xf0;PORTA_REG|=copy_u8Value; break;
    35b8:	ab e3       	ldi	r26, 0x3B	; 59
    35ba:	b0 e0       	ldi	r27, 0x00	; 0
    35bc:	eb e3       	ldi	r30, 0x3B	; 59
    35be:	f0 e0       	ldi	r31, 0x00	; 0
    35c0:	80 81       	ld	r24, Z
    35c2:	80 7f       	andi	r24, 0xF0	; 240
    35c4:	8c 93       	st	X, r24
    35c6:	ab e3       	ldi	r26, 0x3B	; 59
    35c8:	b0 e0       	ldi	r27, 0x00	; 0
    35ca:	eb e3       	ldi	r30, 0x3B	; 59
    35cc:	f0 e0       	ldi	r31, 0x00	; 0
    35ce:	90 81       	ld	r25, Z
    35d0:	8b 81       	ldd	r24, Y+3	; 0x03
    35d2:	89 2b       	or	r24, r25
    35d4:	8c 93       	st	X, r24
    35d6:	31 c0       	rjmp	.+98     	; 0x363a <DIO_enumSetLowNibbleValue+0xdc>
			case DIO_PORTB: PORTB_REG&=0xf0;PORTB_REG|=copy_u8Value; break;
    35d8:	a8 e3       	ldi	r26, 0x38	; 56
    35da:	b0 e0       	ldi	r27, 0x00	; 0
    35dc:	e8 e3       	ldi	r30, 0x38	; 56
    35de:	f0 e0       	ldi	r31, 0x00	; 0
    35e0:	80 81       	ld	r24, Z
    35e2:	80 7f       	andi	r24, 0xF0	; 240
    35e4:	8c 93       	st	X, r24
    35e6:	a8 e3       	ldi	r26, 0x38	; 56
    35e8:	b0 e0       	ldi	r27, 0x00	; 0
    35ea:	e8 e3       	ldi	r30, 0x38	; 56
    35ec:	f0 e0       	ldi	r31, 0x00	; 0
    35ee:	90 81       	ld	r25, Z
    35f0:	8b 81       	ldd	r24, Y+3	; 0x03
    35f2:	89 2b       	or	r24, r25
    35f4:	8c 93       	st	X, r24
    35f6:	21 c0       	rjmp	.+66     	; 0x363a <DIO_enumSetLowNibbleValue+0xdc>
			case DIO_PORTC: PORTC_REG&=0xf0;PORTC_REG|=copy_u8Value; break;
    35f8:	a5 e3       	ldi	r26, 0x35	; 53
    35fa:	b0 e0       	ldi	r27, 0x00	; 0
    35fc:	e5 e3       	ldi	r30, 0x35	; 53
    35fe:	f0 e0       	ldi	r31, 0x00	; 0
    3600:	80 81       	ld	r24, Z
    3602:	80 7f       	andi	r24, 0xF0	; 240
    3604:	8c 93       	st	X, r24
    3606:	a5 e3       	ldi	r26, 0x35	; 53
    3608:	b0 e0       	ldi	r27, 0x00	; 0
    360a:	e5 e3       	ldi	r30, 0x35	; 53
    360c:	f0 e0       	ldi	r31, 0x00	; 0
    360e:	90 81       	ld	r25, Z
    3610:	8b 81       	ldd	r24, Y+3	; 0x03
    3612:	89 2b       	or	r24, r25
    3614:	8c 93       	st	X, r24
    3616:	11 c0       	rjmp	.+34     	; 0x363a <DIO_enumSetLowNibbleValue+0xdc>
			case DIO_PORTD: PORTD_REG&=0xf0;PORTD_REG|=copy_u8Value; break;
    3618:	a2 e3       	ldi	r26, 0x32	; 50
    361a:	b0 e0       	ldi	r27, 0x00	; 0
    361c:	e2 e3       	ldi	r30, 0x32	; 50
    361e:	f0 e0       	ldi	r31, 0x00	; 0
    3620:	80 81       	ld	r24, Z
    3622:	80 7f       	andi	r24, 0xF0	; 240
    3624:	8c 93       	st	X, r24
    3626:	a2 e3       	ldi	r26, 0x32	; 50
    3628:	b0 e0       	ldi	r27, 0x00	; 0
    362a:	e2 e3       	ldi	r30, 0x32	; 50
    362c:	f0 e0       	ldi	r31, 0x00	; 0
    362e:	90 81       	ld	r25, Z
    3630:	8b 81       	ldd	r24, Y+3	; 0x03
    3632:	89 2b       	or	r24, r25
    3634:	8c 93       	st	X, r24
    3636:	01 c0       	rjmp	.+2      	; 0x363a <DIO_enumSetLowNibbleValue+0xdc>
			default: Loc_enumState =DIO_NOK;
    3638:	19 82       	std	Y+1, r1	; 0x01
			
		}
	return Loc_enumState;
    363a:	89 81       	ldd	r24, Y+1	; 0x01
	
}
    363c:	0f 90       	pop	r0
    363e:	0f 90       	pop	r0
    3640:	0f 90       	pop	r0
    3642:	0f 90       	pop	r0
    3644:	0f 90       	pop	r0
    3646:	cf 91       	pop	r28
    3648:	df 91       	pop	r29
    364a:	08 95       	ret

0000364c <DIO_enumSetHighNibbleValue>:
DIO_ErrorStatus DIO_enumSetHighNibbleValue (u8 copy_u8PORT,u8 copy_u8Value)
{
    364c:	df 93       	push	r29
    364e:	cf 93       	push	r28
    3650:	00 d0       	rcall	.+0      	; 0x3652 <DIO_enumSetHighNibbleValue+0x6>
    3652:	00 d0       	rcall	.+0      	; 0x3654 <DIO_enumSetHighNibbleValue+0x8>
    3654:	0f 92       	push	r0
    3656:	cd b7       	in	r28, 0x3d	; 61
    3658:	de b7       	in	r29, 0x3e	; 62
    365a:	8a 83       	std	Y+2, r24	; 0x02
    365c:	6b 83       	std	Y+3, r22	; 0x03
	
	DIO_ErrorStatus Loc_enumState=DIO_OK;
    365e:	81 e0       	ldi	r24, 0x01	; 1
    3660:	89 83       	std	Y+1, r24	; 0x01
	copy_u8Value &=0xf0;
    3662:	8b 81       	ldd	r24, Y+3	; 0x03
    3664:	80 7f       	andi	r24, 0xF0	; 240
    3666:	8b 83       	std	Y+3, r24	; 0x03
	
		switch(copy_u8PORT)
    3668:	8a 81       	ldd	r24, Y+2	; 0x02
    366a:	28 2f       	mov	r18, r24
    366c:	30 e0       	ldi	r19, 0x00	; 0
    366e:	3d 83       	std	Y+5, r19	; 0x05
    3670:	2c 83       	std	Y+4, r18	; 0x04
    3672:	8c 81       	ldd	r24, Y+4	; 0x04
    3674:	9d 81       	ldd	r25, Y+5	; 0x05
    3676:	81 30       	cpi	r24, 0x01	; 1
    3678:	91 05       	cpc	r25, r1
    367a:	29 f1       	breq	.+74     	; 0x36c6 <DIO_enumSetHighNibbleValue+0x7a>
    367c:	2c 81       	ldd	r18, Y+4	; 0x04
    367e:	3d 81       	ldd	r19, Y+5	; 0x05
    3680:	22 30       	cpi	r18, 0x02	; 2
    3682:	31 05       	cpc	r19, r1
    3684:	2c f4       	brge	.+10     	; 0x3690 <DIO_enumSetHighNibbleValue+0x44>
    3686:	8c 81       	ldd	r24, Y+4	; 0x04
    3688:	9d 81       	ldd	r25, Y+5	; 0x05
    368a:	00 97       	sbiw	r24, 0x00	; 0
    368c:	61 f0       	breq	.+24     	; 0x36a6 <DIO_enumSetHighNibbleValue+0x5a>
    368e:	4b c0       	rjmp	.+150    	; 0x3726 <DIO_enumSetHighNibbleValue+0xda>
    3690:	2c 81       	ldd	r18, Y+4	; 0x04
    3692:	3d 81       	ldd	r19, Y+5	; 0x05
    3694:	22 30       	cpi	r18, 0x02	; 2
    3696:	31 05       	cpc	r19, r1
    3698:	31 f1       	breq	.+76     	; 0x36e6 <DIO_enumSetHighNibbleValue+0x9a>
    369a:	8c 81       	ldd	r24, Y+4	; 0x04
    369c:	9d 81       	ldd	r25, Y+5	; 0x05
    369e:	83 30       	cpi	r24, 0x03	; 3
    36a0:	91 05       	cpc	r25, r1
    36a2:	89 f1       	breq	.+98     	; 0x3706 <DIO_enumSetHighNibbleValue+0xba>
    36a4:	40 c0       	rjmp	.+128    	; 0x3726 <DIO_enumSetHighNibbleValue+0xda>
		{
			case DIO_PORTA: PORTA_REG&=0x0f;PORTA_REG|=copy_u8Value; break;
    36a6:	ab e3       	ldi	r26, 0x3B	; 59
    36a8:	b0 e0       	ldi	r27, 0x00	; 0
    36aa:	eb e3       	ldi	r30, 0x3B	; 59
    36ac:	f0 e0       	ldi	r31, 0x00	; 0
    36ae:	80 81       	ld	r24, Z
    36b0:	8f 70       	andi	r24, 0x0F	; 15
    36b2:	8c 93       	st	X, r24
    36b4:	ab e3       	ldi	r26, 0x3B	; 59
    36b6:	b0 e0       	ldi	r27, 0x00	; 0
    36b8:	eb e3       	ldi	r30, 0x3B	; 59
    36ba:	f0 e0       	ldi	r31, 0x00	; 0
    36bc:	90 81       	ld	r25, Z
    36be:	8b 81       	ldd	r24, Y+3	; 0x03
    36c0:	89 2b       	or	r24, r25
    36c2:	8c 93       	st	X, r24
    36c4:	31 c0       	rjmp	.+98     	; 0x3728 <DIO_enumSetHighNibbleValue+0xdc>
			case DIO_PORTB: PORTB_REG&=0x0f;PORTB_REG|=copy_u8Value; break;
    36c6:	a8 e3       	ldi	r26, 0x38	; 56
    36c8:	b0 e0       	ldi	r27, 0x00	; 0
    36ca:	e8 e3       	ldi	r30, 0x38	; 56
    36cc:	f0 e0       	ldi	r31, 0x00	; 0
    36ce:	80 81       	ld	r24, Z
    36d0:	8f 70       	andi	r24, 0x0F	; 15
    36d2:	8c 93       	st	X, r24
    36d4:	a8 e3       	ldi	r26, 0x38	; 56
    36d6:	b0 e0       	ldi	r27, 0x00	; 0
    36d8:	e8 e3       	ldi	r30, 0x38	; 56
    36da:	f0 e0       	ldi	r31, 0x00	; 0
    36dc:	90 81       	ld	r25, Z
    36de:	8b 81       	ldd	r24, Y+3	; 0x03
    36e0:	89 2b       	or	r24, r25
    36e2:	8c 93       	st	X, r24
    36e4:	21 c0       	rjmp	.+66     	; 0x3728 <DIO_enumSetHighNibbleValue+0xdc>
			case DIO_PORTC: PORTC_REG&=0x0f;PORTC_REG|=copy_u8Value; break;
    36e6:	a5 e3       	ldi	r26, 0x35	; 53
    36e8:	b0 e0       	ldi	r27, 0x00	; 0
    36ea:	e5 e3       	ldi	r30, 0x35	; 53
    36ec:	f0 e0       	ldi	r31, 0x00	; 0
    36ee:	80 81       	ld	r24, Z
    36f0:	8f 70       	andi	r24, 0x0F	; 15
    36f2:	8c 93       	st	X, r24
    36f4:	a5 e3       	ldi	r26, 0x35	; 53
    36f6:	b0 e0       	ldi	r27, 0x00	; 0
    36f8:	e5 e3       	ldi	r30, 0x35	; 53
    36fa:	f0 e0       	ldi	r31, 0x00	; 0
    36fc:	90 81       	ld	r25, Z
    36fe:	8b 81       	ldd	r24, Y+3	; 0x03
    3700:	89 2b       	or	r24, r25
    3702:	8c 93       	st	X, r24
    3704:	11 c0       	rjmp	.+34     	; 0x3728 <DIO_enumSetHighNibbleValue+0xdc>
			case DIO_PORTD: PORTD_REG&=0x0f;PORTD_REG|=copy_u8Value; break;
    3706:	a2 e3       	ldi	r26, 0x32	; 50
    3708:	b0 e0       	ldi	r27, 0x00	; 0
    370a:	e2 e3       	ldi	r30, 0x32	; 50
    370c:	f0 e0       	ldi	r31, 0x00	; 0
    370e:	80 81       	ld	r24, Z
    3710:	8f 70       	andi	r24, 0x0F	; 15
    3712:	8c 93       	st	X, r24
    3714:	a2 e3       	ldi	r26, 0x32	; 50
    3716:	b0 e0       	ldi	r27, 0x00	; 0
    3718:	e2 e3       	ldi	r30, 0x32	; 50
    371a:	f0 e0       	ldi	r31, 0x00	; 0
    371c:	90 81       	ld	r25, Z
    371e:	8b 81       	ldd	r24, Y+3	; 0x03
    3720:	89 2b       	or	r24, r25
    3722:	8c 93       	st	X, r24
    3724:	01 c0       	rjmp	.+2      	; 0x3728 <DIO_enumSetHighNibbleValue+0xdc>
			default: Loc_enumState =DIO_NOK;
    3726:	19 82       	std	Y+1, r1	; 0x01
			
		}
	return Loc_enumState;
    3728:	89 81       	ldd	r24, Y+1	; 0x01
	
}
    372a:	0f 90       	pop	r0
    372c:	0f 90       	pop	r0
    372e:	0f 90       	pop	r0
    3730:	0f 90       	pop	r0
    3732:	0f 90       	pop	r0
    3734:	cf 91       	pop	r28
    3736:	df 91       	pop	r29
    3738:	08 95       	ret

0000373a <DIO_enumSetLowNibbleDirection>:
DIO_ErrorStatus DIO_enumSetLowNibbleDirection(u8 copy_u8PORT,u8 copy_u8Direction)
{
    373a:	df 93       	push	r29
    373c:	cf 93       	push	r28
    373e:	00 d0       	rcall	.+0      	; 0x3740 <DIO_enumSetLowNibbleDirection+0x6>
    3740:	00 d0       	rcall	.+0      	; 0x3742 <DIO_enumSetLowNibbleDirection+0x8>
    3742:	0f 92       	push	r0
    3744:	cd b7       	in	r28, 0x3d	; 61
    3746:	de b7       	in	r29, 0x3e	; 62
    3748:	8a 83       	std	Y+2, r24	; 0x02
    374a:	6b 83       	std	Y+3, r22	; 0x03
	
	DIO_ErrorStatus Loc_enumState =DIO_OK;
    374c:	81 e0       	ldi	r24, 0x01	; 1
    374e:	89 83       	std	Y+1, r24	; 0x01
	copy_u8Direction&=0x0f;
    3750:	8b 81       	ldd	r24, Y+3	; 0x03
    3752:	8f 70       	andi	r24, 0x0F	; 15
    3754:	8b 83       	std	Y+3, r24	; 0x03
		switch(copy_u8PORT)
    3756:	8a 81       	ldd	r24, Y+2	; 0x02
    3758:	28 2f       	mov	r18, r24
    375a:	30 e0       	ldi	r19, 0x00	; 0
    375c:	3d 83       	std	Y+5, r19	; 0x05
    375e:	2c 83       	std	Y+4, r18	; 0x04
    3760:	8c 81       	ldd	r24, Y+4	; 0x04
    3762:	9d 81       	ldd	r25, Y+5	; 0x05
    3764:	81 30       	cpi	r24, 0x01	; 1
    3766:	91 05       	cpc	r25, r1
    3768:	29 f1       	breq	.+74     	; 0x37b4 <DIO_enumSetLowNibbleDirection+0x7a>
    376a:	2c 81       	ldd	r18, Y+4	; 0x04
    376c:	3d 81       	ldd	r19, Y+5	; 0x05
    376e:	22 30       	cpi	r18, 0x02	; 2
    3770:	31 05       	cpc	r19, r1
    3772:	2c f4       	brge	.+10     	; 0x377e <DIO_enumSetLowNibbleDirection+0x44>
    3774:	8c 81       	ldd	r24, Y+4	; 0x04
    3776:	9d 81       	ldd	r25, Y+5	; 0x05
    3778:	00 97       	sbiw	r24, 0x00	; 0
    377a:	61 f0       	breq	.+24     	; 0x3794 <DIO_enumSetLowNibbleDirection+0x5a>
    377c:	4b c0       	rjmp	.+150    	; 0x3814 <DIO_enumSetLowNibbleDirection+0xda>
    377e:	2c 81       	ldd	r18, Y+4	; 0x04
    3780:	3d 81       	ldd	r19, Y+5	; 0x05
    3782:	22 30       	cpi	r18, 0x02	; 2
    3784:	31 05       	cpc	r19, r1
    3786:	31 f1       	breq	.+76     	; 0x37d4 <DIO_enumSetLowNibbleDirection+0x9a>
    3788:	8c 81       	ldd	r24, Y+4	; 0x04
    378a:	9d 81       	ldd	r25, Y+5	; 0x05
    378c:	83 30       	cpi	r24, 0x03	; 3
    378e:	91 05       	cpc	r25, r1
    3790:	89 f1       	breq	.+98     	; 0x37f4 <DIO_enumSetLowNibbleDirection+0xba>
    3792:	40 c0       	rjmp	.+128    	; 0x3814 <DIO_enumSetLowNibbleDirection+0xda>
		{
			case DIO_PORTA: DDRA_REG &=0xf0;DDRA_REG|=copy_u8Direction;break;
    3794:	aa e3       	ldi	r26, 0x3A	; 58
    3796:	b0 e0       	ldi	r27, 0x00	; 0
    3798:	ea e3       	ldi	r30, 0x3A	; 58
    379a:	f0 e0       	ldi	r31, 0x00	; 0
    379c:	80 81       	ld	r24, Z
    379e:	80 7f       	andi	r24, 0xF0	; 240
    37a0:	8c 93       	st	X, r24
    37a2:	aa e3       	ldi	r26, 0x3A	; 58
    37a4:	b0 e0       	ldi	r27, 0x00	; 0
    37a6:	ea e3       	ldi	r30, 0x3A	; 58
    37a8:	f0 e0       	ldi	r31, 0x00	; 0
    37aa:	90 81       	ld	r25, Z
    37ac:	8b 81       	ldd	r24, Y+3	; 0x03
    37ae:	89 2b       	or	r24, r25
    37b0:	8c 93       	st	X, r24
    37b2:	31 c0       	rjmp	.+98     	; 0x3816 <DIO_enumSetLowNibbleDirection+0xdc>
			case DIO_PORTB: DDRB_REG &=0xf0;DDRB_REG|=copy_u8Direction;break;
    37b4:	a7 e3       	ldi	r26, 0x37	; 55
    37b6:	b0 e0       	ldi	r27, 0x00	; 0
    37b8:	e7 e3       	ldi	r30, 0x37	; 55
    37ba:	f0 e0       	ldi	r31, 0x00	; 0
    37bc:	80 81       	ld	r24, Z
    37be:	80 7f       	andi	r24, 0xF0	; 240
    37c0:	8c 93       	st	X, r24
    37c2:	a7 e3       	ldi	r26, 0x37	; 55
    37c4:	b0 e0       	ldi	r27, 0x00	; 0
    37c6:	e7 e3       	ldi	r30, 0x37	; 55
    37c8:	f0 e0       	ldi	r31, 0x00	; 0
    37ca:	90 81       	ld	r25, Z
    37cc:	8b 81       	ldd	r24, Y+3	; 0x03
    37ce:	89 2b       	or	r24, r25
    37d0:	8c 93       	st	X, r24
    37d2:	21 c0       	rjmp	.+66     	; 0x3816 <DIO_enumSetLowNibbleDirection+0xdc>
			case DIO_PORTC: DDRC_REG &=0xf0;DDRC_REG|=copy_u8Direction;break;
    37d4:	a4 e3       	ldi	r26, 0x34	; 52
    37d6:	b0 e0       	ldi	r27, 0x00	; 0
    37d8:	e4 e3       	ldi	r30, 0x34	; 52
    37da:	f0 e0       	ldi	r31, 0x00	; 0
    37dc:	80 81       	ld	r24, Z
    37de:	80 7f       	andi	r24, 0xF0	; 240
    37e0:	8c 93       	st	X, r24
    37e2:	a4 e3       	ldi	r26, 0x34	; 52
    37e4:	b0 e0       	ldi	r27, 0x00	; 0
    37e6:	e4 e3       	ldi	r30, 0x34	; 52
    37e8:	f0 e0       	ldi	r31, 0x00	; 0
    37ea:	90 81       	ld	r25, Z
    37ec:	8b 81       	ldd	r24, Y+3	; 0x03
    37ee:	89 2b       	or	r24, r25
    37f0:	8c 93       	st	X, r24
    37f2:	11 c0       	rjmp	.+34     	; 0x3816 <DIO_enumSetLowNibbleDirection+0xdc>
			case DIO_PORTD: DDRD_REG &=0xf0;DDRD_REG|=copy_u8Direction;break;
    37f4:	a1 e3       	ldi	r26, 0x31	; 49
    37f6:	b0 e0       	ldi	r27, 0x00	; 0
    37f8:	e1 e3       	ldi	r30, 0x31	; 49
    37fa:	f0 e0       	ldi	r31, 0x00	; 0
    37fc:	80 81       	ld	r24, Z
    37fe:	80 7f       	andi	r24, 0xF0	; 240
    3800:	8c 93       	st	X, r24
    3802:	a1 e3       	ldi	r26, 0x31	; 49
    3804:	b0 e0       	ldi	r27, 0x00	; 0
    3806:	e1 e3       	ldi	r30, 0x31	; 49
    3808:	f0 e0       	ldi	r31, 0x00	; 0
    380a:	90 81       	ld	r25, Z
    380c:	8b 81       	ldd	r24, Y+3	; 0x03
    380e:	89 2b       	or	r24, r25
    3810:	8c 93       	st	X, r24
    3812:	01 c0       	rjmp	.+2      	; 0x3816 <DIO_enumSetLowNibbleDirection+0xdc>
			default: Loc_enumState =DIO_NOK;
    3814:	19 82       	std	Y+1, r1	; 0x01
		}
	

		
 return Loc_enumState;
    3816:	89 81       	ldd	r24, Y+1	; 0x01
	
}
    3818:	0f 90       	pop	r0
    381a:	0f 90       	pop	r0
    381c:	0f 90       	pop	r0
    381e:	0f 90       	pop	r0
    3820:	0f 90       	pop	r0
    3822:	cf 91       	pop	r28
    3824:	df 91       	pop	r29
    3826:	08 95       	ret

00003828 <DIO_enumSetHighNibbleDirection>:
DIO_ErrorStatus DIO_enumSetHighNibbleDirection(u8 copy_u8PORT,u8 copy_u8Direction)
{
    3828:	df 93       	push	r29
    382a:	cf 93       	push	r28
    382c:	00 d0       	rcall	.+0      	; 0x382e <DIO_enumSetHighNibbleDirection+0x6>
    382e:	00 d0       	rcall	.+0      	; 0x3830 <DIO_enumSetHighNibbleDirection+0x8>
    3830:	0f 92       	push	r0
    3832:	cd b7       	in	r28, 0x3d	; 61
    3834:	de b7       	in	r29, 0x3e	; 62
    3836:	8a 83       	std	Y+2, r24	; 0x02
    3838:	6b 83       	std	Y+3, r22	; 0x03
	
	DIO_ErrorStatus Loc_enumState =DIO_OK;
    383a:	81 e0       	ldi	r24, 0x01	; 1
    383c:	89 83       	std	Y+1, r24	; 0x01
	copy_u8Direction&=0xf0;
    383e:	8b 81       	ldd	r24, Y+3	; 0x03
    3840:	80 7f       	andi	r24, 0xF0	; 240
    3842:	8b 83       	std	Y+3, r24	; 0x03
		switch(copy_u8PORT)
    3844:	8a 81       	ldd	r24, Y+2	; 0x02
    3846:	28 2f       	mov	r18, r24
    3848:	30 e0       	ldi	r19, 0x00	; 0
    384a:	3d 83       	std	Y+5, r19	; 0x05
    384c:	2c 83       	std	Y+4, r18	; 0x04
    384e:	8c 81       	ldd	r24, Y+4	; 0x04
    3850:	9d 81       	ldd	r25, Y+5	; 0x05
    3852:	81 30       	cpi	r24, 0x01	; 1
    3854:	91 05       	cpc	r25, r1
    3856:	29 f1       	breq	.+74     	; 0x38a2 <DIO_enumSetHighNibbleDirection+0x7a>
    3858:	2c 81       	ldd	r18, Y+4	; 0x04
    385a:	3d 81       	ldd	r19, Y+5	; 0x05
    385c:	22 30       	cpi	r18, 0x02	; 2
    385e:	31 05       	cpc	r19, r1
    3860:	2c f4       	brge	.+10     	; 0x386c <DIO_enumSetHighNibbleDirection+0x44>
    3862:	8c 81       	ldd	r24, Y+4	; 0x04
    3864:	9d 81       	ldd	r25, Y+5	; 0x05
    3866:	00 97       	sbiw	r24, 0x00	; 0
    3868:	61 f0       	breq	.+24     	; 0x3882 <DIO_enumSetHighNibbleDirection+0x5a>
    386a:	4b c0       	rjmp	.+150    	; 0x3902 <DIO_enumSetHighNibbleDirection+0xda>
    386c:	2c 81       	ldd	r18, Y+4	; 0x04
    386e:	3d 81       	ldd	r19, Y+5	; 0x05
    3870:	22 30       	cpi	r18, 0x02	; 2
    3872:	31 05       	cpc	r19, r1
    3874:	31 f1       	breq	.+76     	; 0x38c2 <DIO_enumSetHighNibbleDirection+0x9a>
    3876:	8c 81       	ldd	r24, Y+4	; 0x04
    3878:	9d 81       	ldd	r25, Y+5	; 0x05
    387a:	83 30       	cpi	r24, 0x03	; 3
    387c:	91 05       	cpc	r25, r1
    387e:	89 f1       	breq	.+98     	; 0x38e2 <DIO_enumSetHighNibbleDirection+0xba>
    3880:	40 c0       	rjmp	.+128    	; 0x3902 <DIO_enumSetHighNibbleDirection+0xda>
		{
			case DIO_PORTA: DDRA_REG &=0x0f;DDRA_REG|=copy_u8Direction;break;
    3882:	aa e3       	ldi	r26, 0x3A	; 58
    3884:	b0 e0       	ldi	r27, 0x00	; 0
    3886:	ea e3       	ldi	r30, 0x3A	; 58
    3888:	f0 e0       	ldi	r31, 0x00	; 0
    388a:	80 81       	ld	r24, Z
    388c:	8f 70       	andi	r24, 0x0F	; 15
    388e:	8c 93       	st	X, r24
    3890:	aa e3       	ldi	r26, 0x3A	; 58
    3892:	b0 e0       	ldi	r27, 0x00	; 0
    3894:	ea e3       	ldi	r30, 0x3A	; 58
    3896:	f0 e0       	ldi	r31, 0x00	; 0
    3898:	90 81       	ld	r25, Z
    389a:	8b 81       	ldd	r24, Y+3	; 0x03
    389c:	89 2b       	or	r24, r25
    389e:	8c 93       	st	X, r24
    38a0:	31 c0       	rjmp	.+98     	; 0x3904 <DIO_enumSetHighNibbleDirection+0xdc>
			case DIO_PORTB: DDRB_REG &=0x0f;DDRB_REG|=copy_u8Direction;break;
    38a2:	a7 e3       	ldi	r26, 0x37	; 55
    38a4:	b0 e0       	ldi	r27, 0x00	; 0
    38a6:	e7 e3       	ldi	r30, 0x37	; 55
    38a8:	f0 e0       	ldi	r31, 0x00	; 0
    38aa:	80 81       	ld	r24, Z
    38ac:	8f 70       	andi	r24, 0x0F	; 15
    38ae:	8c 93       	st	X, r24
    38b0:	a7 e3       	ldi	r26, 0x37	; 55
    38b2:	b0 e0       	ldi	r27, 0x00	; 0
    38b4:	e7 e3       	ldi	r30, 0x37	; 55
    38b6:	f0 e0       	ldi	r31, 0x00	; 0
    38b8:	90 81       	ld	r25, Z
    38ba:	8b 81       	ldd	r24, Y+3	; 0x03
    38bc:	89 2b       	or	r24, r25
    38be:	8c 93       	st	X, r24
    38c0:	21 c0       	rjmp	.+66     	; 0x3904 <DIO_enumSetHighNibbleDirection+0xdc>
			case DIO_PORTC: DDRC_REG &=0x0f;DDRC_REG|=copy_u8Direction;break;
    38c2:	a4 e3       	ldi	r26, 0x34	; 52
    38c4:	b0 e0       	ldi	r27, 0x00	; 0
    38c6:	e4 e3       	ldi	r30, 0x34	; 52
    38c8:	f0 e0       	ldi	r31, 0x00	; 0
    38ca:	80 81       	ld	r24, Z
    38cc:	8f 70       	andi	r24, 0x0F	; 15
    38ce:	8c 93       	st	X, r24
    38d0:	a4 e3       	ldi	r26, 0x34	; 52
    38d2:	b0 e0       	ldi	r27, 0x00	; 0
    38d4:	e4 e3       	ldi	r30, 0x34	; 52
    38d6:	f0 e0       	ldi	r31, 0x00	; 0
    38d8:	90 81       	ld	r25, Z
    38da:	8b 81       	ldd	r24, Y+3	; 0x03
    38dc:	89 2b       	or	r24, r25
    38de:	8c 93       	st	X, r24
    38e0:	11 c0       	rjmp	.+34     	; 0x3904 <DIO_enumSetHighNibbleDirection+0xdc>
			case DIO_PORTD: DDRD_REG &=0x0f;DDRD_REG|=copy_u8Direction;break;
    38e2:	a1 e3       	ldi	r26, 0x31	; 49
    38e4:	b0 e0       	ldi	r27, 0x00	; 0
    38e6:	e1 e3       	ldi	r30, 0x31	; 49
    38e8:	f0 e0       	ldi	r31, 0x00	; 0
    38ea:	80 81       	ld	r24, Z
    38ec:	8f 70       	andi	r24, 0x0F	; 15
    38ee:	8c 93       	st	X, r24
    38f0:	a1 e3       	ldi	r26, 0x31	; 49
    38f2:	b0 e0       	ldi	r27, 0x00	; 0
    38f4:	e1 e3       	ldi	r30, 0x31	; 49
    38f6:	f0 e0       	ldi	r31, 0x00	; 0
    38f8:	90 81       	ld	r25, Z
    38fa:	8b 81       	ldd	r24, Y+3	; 0x03
    38fc:	89 2b       	or	r24, r25
    38fe:	8c 93       	st	X, r24
    3900:	01 c0       	rjmp	.+2      	; 0x3904 <DIO_enumSetHighNibbleDirection+0xdc>
			default: Loc_enumState =DIO_NOK;
    3902:	19 82       	std	Y+1, r1	; 0x01
		}
	

		
 return Loc_enumState;
    3904:	89 81       	ldd	r24, Y+1	; 0x01
	
}
    3906:	0f 90       	pop	r0
    3908:	0f 90       	pop	r0
    390a:	0f 90       	pop	r0
    390c:	0f 90       	pop	r0
    390e:	0f 90       	pop	r0
    3910:	cf 91       	pop	r28
    3912:	df 91       	pop	r29
    3914:	08 95       	ret

00003916 <CLCD_voidInti>:
#include "CLCD_extrachar.h"



void CLCD_voidInti(void)
{
    3916:	0f 93       	push	r16
    3918:	1f 93       	push	r17
    391a:	df 93       	push	r29
    391c:	cf 93       	push	r28
    391e:	cd b7       	in	r28, 0x3d	; 61
    3920:	de b7       	in	r29, 0x3e	; 62
    3922:	c6 54       	subi	r28, 0x46	; 70
    3924:	d0 40       	sbci	r29, 0x00	; 0
    3926:	0f b6       	in	r0, 0x3f	; 63
    3928:	f8 94       	cli
    392a:	de bf       	out	0x3e, r29	; 62
    392c:	0f be       	out	0x3f, r0	; 63
    392e:	cd bf       	out	0x3d, r28	; 61
    3930:	fe 01       	movw	r30, r28
    3932:	ed 5b       	subi	r30, 0xBD	; 189
    3934:	ff 4f       	sbci	r31, 0xFF	; 255
    3936:	80 e0       	ldi	r24, 0x00	; 0
    3938:	90 e0       	ldi	r25, 0x00	; 0
    393a:	a8 e4       	ldi	r26, 0x48	; 72
    393c:	b2 e4       	ldi	r27, 0x42	; 66
    393e:	80 83       	st	Z, r24
    3940:	91 83       	std	Z+1, r25	; 0x01
    3942:	a2 83       	std	Z+2, r26	; 0x02
    3944:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3946:	8e 01       	movw	r16, r28
    3948:	01 5c       	subi	r16, 0xC1	; 193
    394a:	1f 4f       	sbci	r17, 0xFF	; 255
    394c:	fe 01       	movw	r30, r28
    394e:	ed 5b       	subi	r30, 0xBD	; 189
    3950:	ff 4f       	sbci	r31, 0xFF	; 255
    3952:	60 81       	ld	r22, Z
    3954:	71 81       	ldd	r23, Z+1	; 0x01
    3956:	82 81       	ldd	r24, Z+2	; 0x02
    3958:	93 81       	ldd	r25, Z+3	; 0x03
    395a:	20 e0       	ldi	r18, 0x00	; 0
    395c:	30 e0       	ldi	r19, 0x00	; 0
    395e:	4a ef       	ldi	r20, 0xFA	; 250
    3960:	54 e4       	ldi	r21, 0x44	; 68
    3962:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3966:	dc 01       	movw	r26, r24
    3968:	cb 01       	movw	r24, r22
    396a:	f8 01       	movw	r30, r16
    396c:	80 83       	st	Z, r24
    396e:	91 83       	std	Z+1, r25	; 0x01
    3970:	a2 83       	std	Z+2, r26	; 0x02
    3972:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3974:	fe 01       	movw	r30, r28
    3976:	ff 96       	adiw	r30, 0x3f	; 63
    3978:	60 81       	ld	r22, Z
    397a:	71 81       	ldd	r23, Z+1	; 0x01
    397c:	82 81       	ldd	r24, Z+2	; 0x02
    397e:	93 81       	ldd	r25, Z+3	; 0x03
    3980:	20 e0       	ldi	r18, 0x00	; 0
    3982:	30 e0       	ldi	r19, 0x00	; 0
    3984:	40 e8       	ldi	r20, 0x80	; 128
    3986:	5f e3       	ldi	r21, 0x3F	; 63
    3988:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    398c:	88 23       	and	r24, r24
    398e:	2c f4       	brge	.+10     	; 0x399a <CLCD_voidInti+0x84>
		__ticks = 1;
    3990:	81 e0       	ldi	r24, 0x01	; 1
    3992:	90 e0       	ldi	r25, 0x00	; 0
    3994:	9e af       	std	Y+62, r25	; 0x3e
    3996:	8d af       	std	Y+61, r24	; 0x3d
    3998:	46 c0       	rjmp	.+140    	; 0x3a26 <CLCD_voidInti+0x110>
	else if (__tmp > 65535)
    399a:	fe 01       	movw	r30, r28
    399c:	ff 96       	adiw	r30, 0x3f	; 63
    399e:	60 81       	ld	r22, Z
    39a0:	71 81       	ldd	r23, Z+1	; 0x01
    39a2:	82 81       	ldd	r24, Z+2	; 0x02
    39a4:	93 81       	ldd	r25, Z+3	; 0x03
    39a6:	20 e0       	ldi	r18, 0x00	; 0
    39a8:	3f ef       	ldi	r19, 0xFF	; 255
    39aa:	4f e7       	ldi	r20, 0x7F	; 127
    39ac:	57 e4       	ldi	r21, 0x47	; 71
    39ae:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    39b2:	18 16       	cp	r1, r24
    39b4:	64 f5       	brge	.+88     	; 0x3a0e <CLCD_voidInti+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39b6:	fe 01       	movw	r30, r28
    39b8:	ed 5b       	subi	r30, 0xBD	; 189
    39ba:	ff 4f       	sbci	r31, 0xFF	; 255
    39bc:	60 81       	ld	r22, Z
    39be:	71 81       	ldd	r23, Z+1	; 0x01
    39c0:	82 81       	ldd	r24, Z+2	; 0x02
    39c2:	93 81       	ldd	r25, Z+3	; 0x03
    39c4:	20 e0       	ldi	r18, 0x00	; 0
    39c6:	30 e0       	ldi	r19, 0x00	; 0
    39c8:	40 e2       	ldi	r20, 0x20	; 32
    39ca:	51 e4       	ldi	r21, 0x41	; 65
    39cc:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    39d0:	dc 01       	movw	r26, r24
    39d2:	cb 01       	movw	r24, r22
    39d4:	bc 01       	movw	r22, r24
    39d6:	cd 01       	movw	r24, r26
    39d8:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    39dc:	dc 01       	movw	r26, r24
    39de:	cb 01       	movw	r24, r22
    39e0:	9e af       	std	Y+62, r25	; 0x3e
    39e2:	8d af       	std	Y+61, r24	; 0x3d
    39e4:	0f c0       	rjmp	.+30     	; 0x3a04 <CLCD_voidInti+0xee>
    39e6:	88 ec       	ldi	r24, 0xC8	; 200
    39e8:	90 e0       	ldi	r25, 0x00	; 0
    39ea:	9c af       	std	Y+60, r25	; 0x3c
    39ec:	8b af       	std	Y+59, r24	; 0x3b
    39ee:	8b ad       	ldd	r24, Y+59	; 0x3b
    39f0:	9c ad       	ldd	r25, Y+60	; 0x3c
    39f2:	01 97       	sbiw	r24, 0x01	; 1
    39f4:	f1 f7       	brne	.-4      	; 0x39f2 <CLCD_voidInti+0xdc>
    39f6:	9c af       	std	Y+60, r25	; 0x3c
    39f8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39fa:	8d ad       	ldd	r24, Y+61	; 0x3d
    39fc:	9e ad       	ldd	r25, Y+62	; 0x3e
    39fe:	01 97       	sbiw	r24, 0x01	; 1
    3a00:	9e af       	std	Y+62, r25	; 0x3e
    3a02:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a04:	8d ad       	ldd	r24, Y+61	; 0x3d
    3a06:	9e ad       	ldd	r25, Y+62	; 0x3e
    3a08:	00 97       	sbiw	r24, 0x00	; 0
    3a0a:	69 f7       	brne	.-38     	; 0x39e6 <CLCD_voidInti+0xd0>
    3a0c:	16 c0       	rjmp	.+44     	; 0x3a3a <CLCD_voidInti+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a0e:	fe 01       	movw	r30, r28
    3a10:	ff 96       	adiw	r30, 0x3f	; 63
    3a12:	60 81       	ld	r22, Z
    3a14:	71 81       	ldd	r23, Z+1	; 0x01
    3a16:	82 81       	ldd	r24, Z+2	; 0x02
    3a18:	93 81       	ldd	r25, Z+3	; 0x03
    3a1a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3a1e:	dc 01       	movw	r26, r24
    3a20:	cb 01       	movw	r24, r22
    3a22:	9e af       	std	Y+62, r25	; 0x3e
    3a24:	8d af       	std	Y+61, r24	; 0x3d
    3a26:	8d ad       	ldd	r24, Y+61	; 0x3d
    3a28:	9e ad       	ldd	r25, Y+62	; 0x3e
    3a2a:	9a af       	std	Y+58, r25	; 0x3a
    3a2c:	89 af       	std	Y+57, r24	; 0x39
    3a2e:	89 ad       	ldd	r24, Y+57	; 0x39
    3a30:	9a ad       	ldd	r25, Y+58	; 0x3a
    3a32:	01 97       	sbiw	r24, 0x01	; 1
    3a34:	f1 f7       	brne	.-4      	; 0x3a32 <CLCD_voidInti+0x11c>
    3a36:	9a af       	std	Y+58, r25	; 0x3a
    3a38:	89 af       	std	Y+57, r24	; 0x39

	#if CLCD_MODE==8
	 _delay_ms(50);
	 DIO_enumSetPortDirection(CLCD_DATA_PORT,0xff);
    3a3a:	80 e0       	ldi	r24, 0x00	; 0
    3a3c:	6f ef       	ldi	r22, 0xFF	; 255
    3a3e:	0e 94 3e 16 	call	0x2c7c	; 0x2c7c <DIO_enumSetPortDirection>
	 DIO_enumSetPinDirection (CLCD_CONTROLER_PORT,CLCD_RS,DIO_PIN_OUTPUT);
    3a42:	81 e0       	ldi	r24, 0x01	; 1
    3a44:	67 e0       	ldi	r22, 0x07	; 7
    3a46:	41 e0       	ldi	r20, 0x01	; 1
    3a48:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <DIO_enumSetPinDirection>
	 DIO_enumSetPinDirection (CLCD_CONTROLER_PORT,CLCD_RW,DIO_PIN_OUTPUT);
    3a4c:	81 e0       	ldi	r24, 0x01	; 1
    3a4e:	66 e0       	ldi	r22, 0x06	; 6
    3a50:	41 e0       	ldi	r20, 0x01	; 1
    3a52:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <DIO_enumSetPinDirection>
	 DIO_enumSetPinDirection (CLCD_CONTROLER_PORT,CLCD_EN,DIO_PIN_OUTPUT);
    3a56:	81 e0       	ldi	r24, 0x01	; 1
    3a58:	65 e0       	ldi	r22, 0x05	; 5
    3a5a:	41 e0       	ldi	r20, 0x01	; 1
    3a5c:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <DIO_enumSetPinDirection>

	 CLCD_voidSendCommand(LCD_HOME);
    3a60:	82 e0       	ldi	r24, 0x02	; 2
    3a62:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <CLCD_voidSendCommand>
    3a66:	80 e0       	ldi	r24, 0x00	; 0
    3a68:	90 e0       	ldi	r25, 0x00	; 0
    3a6a:	a0 e8       	ldi	r26, 0x80	; 128
    3a6c:	bf e3       	ldi	r27, 0x3F	; 63
    3a6e:	8d ab       	std	Y+53, r24	; 0x35
    3a70:	9e ab       	std	Y+54, r25	; 0x36
    3a72:	af ab       	std	Y+55, r26	; 0x37
    3a74:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a76:	6d a9       	ldd	r22, Y+53	; 0x35
    3a78:	7e a9       	ldd	r23, Y+54	; 0x36
    3a7a:	8f a9       	ldd	r24, Y+55	; 0x37
    3a7c:	98 ad       	ldd	r25, Y+56	; 0x38
    3a7e:	20 e0       	ldi	r18, 0x00	; 0
    3a80:	30 e0       	ldi	r19, 0x00	; 0
    3a82:	4a ef       	ldi	r20, 0xFA	; 250
    3a84:	54 e4       	ldi	r21, 0x44	; 68
    3a86:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3a8a:	dc 01       	movw	r26, r24
    3a8c:	cb 01       	movw	r24, r22
    3a8e:	89 ab       	std	Y+49, r24	; 0x31
    3a90:	9a ab       	std	Y+50, r25	; 0x32
    3a92:	ab ab       	std	Y+51, r26	; 0x33
    3a94:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3a96:	69 a9       	ldd	r22, Y+49	; 0x31
    3a98:	7a a9       	ldd	r23, Y+50	; 0x32
    3a9a:	8b a9       	ldd	r24, Y+51	; 0x33
    3a9c:	9c a9       	ldd	r25, Y+52	; 0x34
    3a9e:	20 e0       	ldi	r18, 0x00	; 0
    3aa0:	30 e0       	ldi	r19, 0x00	; 0
    3aa2:	40 e8       	ldi	r20, 0x80	; 128
    3aa4:	5f e3       	ldi	r21, 0x3F	; 63
    3aa6:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    3aaa:	88 23       	and	r24, r24
    3aac:	2c f4       	brge	.+10     	; 0x3ab8 <CLCD_voidInti+0x1a2>
		__ticks = 1;
    3aae:	81 e0       	ldi	r24, 0x01	; 1
    3ab0:	90 e0       	ldi	r25, 0x00	; 0
    3ab2:	98 ab       	std	Y+48, r25	; 0x30
    3ab4:	8f a7       	std	Y+47, r24	; 0x2f
    3ab6:	3f c0       	rjmp	.+126    	; 0x3b36 <CLCD_voidInti+0x220>
	else if (__tmp > 65535)
    3ab8:	69 a9       	ldd	r22, Y+49	; 0x31
    3aba:	7a a9       	ldd	r23, Y+50	; 0x32
    3abc:	8b a9       	ldd	r24, Y+51	; 0x33
    3abe:	9c a9       	ldd	r25, Y+52	; 0x34
    3ac0:	20 e0       	ldi	r18, 0x00	; 0
    3ac2:	3f ef       	ldi	r19, 0xFF	; 255
    3ac4:	4f e7       	ldi	r20, 0x7F	; 127
    3ac6:	57 e4       	ldi	r21, 0x47	; 71
    3ac8:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    3acc:	18 16       	cp	r1, r24
    3ace:	4c f5       	brge	.+82     	; 0x3b22 <CLCD_voidInti+0x20c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ad0:	6d a9       	ldd	r22, Y+53	; 0x35
    3ad2:	7e a9       	ldd	r23, Y+54	; 0x36
    3ad4:	8f a9       	ldd	r24, Y+55	; 0x37
    3ad6:	98 ad       	ldd	r25, Y+56	; 0x38
    3ad8:	20 e0       	ldi	r18, 0x00	; 0
    3ada:	30 e0       	ldi	r19, 0x00	; 0
    3adc:	40 e2       	ldi	r20, 0x20	; 32
    3ade:	51 e4       	ldi	r21, 0x41	; 65
    3ae0:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3ae4:	dc 01       	movw	r26, r24
    3ae6:	cb 01       	movw	r24, r22
    3ae8:	bc 01       	movw	r22, r24
    3aea:	cd 01       	movw	r24, r26
    3aec:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3af0:	dc 01       	movw	r26, r24
    3af2:	cb 01       	movw	r24, r22
    3af4:	98 ab       	std	Y+48, r25	; 0x30
    3af6:	8f a7       	std	Y+47, r24	; 0x2f
    3af8:	0f c0       	rjmp	.+30     	; 0x3b18 <CLCD_voidInti+0x202>
    3afa:	88 ec       	ldi	r24, 0xC8	; 200
    3afc:	90 e0       	ldi	r25, 0x00	; 0
    3afe:	9e a7       	std	Y+46, r25	; 0x2e
    3b00:	8d a7       	std	Y+45, r24	; 0x2d
    3b02:	8d a5       	ldd	r24, Y+45	; 0x2d
    3b04:	9e a5       	ldd	r25, Y+46	; 0x2e
    3b06:	01 97       	sbiw	r24, 0x01	; 1
    3b08:	f1 f7       	brne	.-4      	; 0x3b06 <CLCD_voidInti+0x1f0>
    3b0a:	9e a7       	std	Y+46, r25	; 0x2e
    3b0c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b0e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3b10:	98 a9       	ldd	r25, Y+48	; 0x30
    3b12:	01 97       	sbiw	r24, 0x01	; 1
    3b14:	98 ab       	std	Y+48, r25	; 0x30
    3b16:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b18:	8f a5       	ldd	r24, Y+47	; 0x2f
    3b1a:	98 a9       	ldd	r25, Y+48	; 0x30
    3b1c:	00 97       	sbiw	r24, 0x00	; 0
    3b1e:	69 f7       	brne	.-38     	; 0x3afa <CLCD_voidInti+0x1e4>
    3b20:	14 c0       	rjmp	.+40     	; 0x3b4a <CLCD_voidInti+0x234>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b22:	69 a9       	ldd	r22, Y+49	; 0x31
    3b24:	7a a9       	ldd	r23, Y+50	; 0x32
    3b26:	8b a9       	ldd	r24, Y+51	; 0x33
    3b28:	9c a9       	ldd	r25, Y+52	; 0x34
    3b2a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3b2e:	dc 01       	movw	r26, r24
    3b30:	cb 01       	movw	r24, r22
    3b32:	98 ab       	std	Y+48, r25	; 0x30
    3b34:	8f a7       	std	Y+47, r24	; 0x2f
    3b36:	8f a5       	ldd	r24, Y+47	; 0x2f
    3b38:	98 a9       	ldd	r25, Y+48	; 0x30
    3b3a:	9c a7       	std	Y+44, r25	; 0x2c
    3b3c:	8b a7       	std	Y+43, r24	; 0x2b
    3b3e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3b40:	9c a5       	ldd	r25, Y+44	; 0x2c
    3b42:	01 97       	sbiw	r24, 0x01	; 1
    3b44:	f1 f7       	brne	.-4      	; 0x3b42 <CLCD_voidInti+0x22c>
    3b46:	9c a7       	std	Y+44, r25	; 0x2c
    3b48:	8b a7       	std	Y+43, r24	; 0x2b
	 _delay_ms(1);

	 CLCD_voidSendCommand(EIGHT_BITS);
    3b4a:	88 e3       	ldi	r24, 0x38	; 56
    3b4c:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <CLCD_voidSendCommand>
    3b50:	80 e0       	ldi	r24, 0x00	; 0
    3b52:	90 e0       	ldi	r25, 0x00	; 0
    3b54:	a0 e8       	ldi	r26, 0x80	; 128
    3b56:	bf e3       	ldi	r27, 0x3F	; 63
    3b58:	8f a3       	std	Y+39, r24	; 0x27
    3b5a:	98 a7       	std	Y+40, r25	; 0x28
    3b5c:	a9 a7       	std	Y+41, r26	; 0x29
    3b5e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b60:	6f a1       	ldd	r22, Y+39	; 0x27
    3b62:	78 a5       	ldd	r23, Y+40	; 0x28
    3b64:	89 a5       	ldd	r24, Y+41	; 0x29
    3b66:	9a a5       	ldd	r25, Y+42	; 0x2a
    3b68:	20 e0       	ldi	r18, 0x00	; 0
    3b6a:	30 e0       	ldi	r19, 0x00	; 0
    3b6c:	4a ef       	ldi	r20, 0xFA	; 250
    3b6e:	54 e4       	ldi	r21, 0x44	; 68
    3b70:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3b74:	dc 01       	movw	r26, r24
    3b76:	cb 01       	movw	r24, r22
    3b78:	8b a3       	std	Y+35, r24	; 0x23
    3b7a:	9c a3       	std	Y+36, r25	; 0x24
    3b7c:	ad a3       	std	Y+37, r26	; 0x25
    3b7e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3b80:	6b a1       	ldd	r22, Y+35	; 0x23
    3b82:	7c a1       	ldd	r23, Y+36	; 0x24
    3b84:	8d a1       	ldd	r24, Y+37	; 0x25
    3b86:	9e a1       	ldd	r25, Y+38	; 0x26
    3b88:	20 e0       	ldi	r18, 0x00	; 0
    3b8a:	30 e0       	ldi	r19, 0x00	; 0
    3b8c:	40 e8       	ldi	r20, 0x80	; 128
    3b8e:	5f e3       	ldi	r21, 0x3F	; 63
    3b90:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    3b94:	88 23       	and	r24, r24
    3b96:	2c f4       	brge	.+10     	; 0x3ba2 <CLCD_voidInti+0x28c>
		__ticks = 1;
    3b98:	81 e0       	ldi	r24, 0x01	; 1
    3b9a:	90 e0       	ldi	r25, 0x00	; 0
    3b9c:	9a a3       	std	Y+34, r25	; 0x22
    3b9e:	89 a3       	std	Y+33, r24	; 0x21
    3ba0:	3f c0       	rjmp	.+126    	; 0x3c20 <CLCD_voidInti+0x30a>
	else if (__tmp > 65535)
    3ba2:	6b a1       	ldd	r22, Y+35	; 0x23
    3ba4:	7c a1       	ldd	r23, Y+36	; 0x24
    3ba6:	8d a1       	ldd	r24, Y+37	; 0x25
    3ba8:	9e a1       	ldd	r25, Y+38	; 0x26
    3baa:	20 e0       	ldi	r18, 0x00	; 0
    3bac:	3f ef       	ldi	r19, 0xFF	; 255
    3bae:	4f e7       	ldi	r20, 0x7F	; 127
    3bb0:	57 e4       	ldi	r21, 0x47	; 71
    3bb2:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    3bb6:	18 16       	cp	r1, r24
    3bb8:	4c f5       	brge	.+82     	; 0x3c0c <CLCD_voidInti+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bba:	6f a1       	ldd	r22, Y+39	; 0x27
    3bbc:	78 a5       	ldd	r23, Y+40	; 0x28
    3bbe:	89 a5       	ldd	r24, Y+41	; 0x29
    3bc0:	9a a5       	ldd	r25, Y+42	; 0x2a
    3bc2:	20 e0       	ldi	r18, 0x00	; 0
    3bc4:	30 e0       	ldi	r19, 0x00	; 0
    3bc6:	40 e2       	ldi	r20, 0x20	; 32
    3bc8:	51 e4       	ldi	r21, 0x41	; 65
    3bca:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3bce:	dc 01       	movw	r26, r24
    3bd0:	cb 01       	movw	r24, r22
    3bd2:	bc 01       	movw	r22, r24
    3bd4:	cd 01       	movw	r24, r26
    3bd6:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3bda:	dc 01       	movw	r26, r24
    3bdc:	cb 01       	movw	r24, r22
    3bde:	9a a3       	std	Y+34, r25	; 0x22
    3be0:	89 a3       	std	Y+33, r24	; 0x21
    3be2:	0f c0       	rjmp	.+30     	; 0x3c02 <CLCD_voidInti+0x2ec>
    3be4:	88 ec       	ldi	r24, 0xC8	; 200
    3be6:	90 e0       	ldi	r25, 0x00	; 0
    3be8:	98 a3       	std	Y+32, r25	; 0x20
    3bea:	8f 8f       	std	Y+31, r24	; 0x1f
    3bec:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3bee:	98 a1       	ldd	r25, Y+32	; 0x20
    3bf0:	01 97       	sbiw	r24, 0x01	; 1
    3bf2:	f1 f7       	brne	.-4      	; 0x3bf0 <CLCD_voidInti+0x2da>
    3bf4:	98 a3       	std	Y+32, r25	; 0x20
    3bf6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bf8:	89 a1       	ldd	r24, Y+33	; 0x21
    3bfa:	9a a1       	ldd	r25, Y+34	; 0x22
    3bfc:	01 97       	sbiw	r24, 0x01	; 1
    3bfe:	9a a3       	std	Y+34, r25	; 0x22
    3c00:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c02:	89 a1       	ldd	r24, Y+33	; 0x21
    3c04:	9a a1       	ldd	r25, Y+34	; 0x22
    3c06:	00 97       	sbiw	r24, 0x00	; 0
    3c08:	69 f7       	brne	.-38     	; 0x3be4 <CLCD_voidInti+0x2ce>
    3c0a:	14 c0       	rjmp	.+40     	; 0x3c34 <CLCD_voidInti+0x31e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c0c:	6b a1       	ldd	r22, Y+35	; 0x23
    3c0e:	7c a1       	ldd	r23, Y+36	; 0x24
    3c10:	8d a1       	ldd	r24, Y+37	; 0x25
    3c12:	9e a1       	ldd	r25, Y+38	; 0x26
    3c14:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3c18:	dc 01       	movw	r26, r24
    3c1a:	cb 01       	movw	r24, r22
    3c1c:	9a a3       	std	Y+34, r25	; 0x22
    3c1e:	89 a3       	std	Y+33, r24	; 0x21
    3c20:	89 a1       	ldd	r24, Y+33	; 0x21
    3c22:	9a a1       	ldd	r25, Y+34	; 0x22
    3c24:	9e 8f       	std	Y+30, r25	; 0x1e
    3c26:	8d 8f       	std	Y+29, r24	; 0x1d
    3c28:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3c2a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3c2c:	01 97       	sbiw	r24, 0x01	; 1
    3c2e:	f1 f7       	brne	.-4      	; 0x3c2c <CLCD_voidInti+0x316>
    3c30:	9e 8f       	std	Y+30, r25	; 0x1e
    3c32:	8d 8f       	std	Y+29, r24	; 0x1d
	 _delay_ms(1);

	  CLCD_voidSendCommand(LCD_DISPLAY_ON_CURSORON);
    3c34:	8e e0       	ldi	r24, 0x0E	; 14
    3c36:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <CLCD_voidSendCommand>
    3c3a:	80 e0       	ldi	r24, 0x00	; 0
    3c3c:	90 e0       	ldi	r25, 0x00	; 0
    3c3e:	a0 e8       	ldi	r26, 0x80	; 128
    3c40:	bf e3       	ldi	r27, 0x3F	; 63
    3c42:	89 8f       	std	Y+25, r24	; 0x19
    3c44:	9a 8f       	std	Y+26, r25	; 0x1a
    3c46:	ab 8f       	std	Y+27, r26	; 0x1b
    3c48:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c4a:	69 8d       	ldd	r22, Y+25	; 0x19
    3c4c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c4e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c50:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c52:	20 e0       	ldi	r18, 0x00	; 0
    3c54:	30 e0       	ldi	r19, 0x00	; 0
    3c56:	4a ef       	ldi	r20, 0xFA	; 250
    3c58:	54 e4       	ldi	r21, 0x44	; 68
    3c5a:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3c5e:	dc 01       	movw	r26, r24
    3c60:	cb 01       	movw	r24, r22
    3c62:	8d 8b       	std	Y+21, r24	; 0x15
    3c64:	9e 8b       	std	Y+22, r25	; 0x16
    3c66:	af 8b       	std	Y+23, r26	; 0x17
    3c68:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3c6a:	6d 89       	ldd	r22, Y+21	; 0x15
    3c6c:	7e 89       	ldd	r23, Y+22	; 0x16
    3c6e:	8f 89       	ldd	r24, Y+23	; 0x17
    3c70:	98 8d       	ldd	r25, Y+24	; 0x18
    3c72:	20 e0       	ldi	r18, 0x00	; 0
    3c74:	30 e0       	ldi	r19, 0x00	; 0
    3c76:	40 e8       	ldi	r20, 0x80	; 128
    3c78:	5f e3       	ldi	r21, 0x3F	; 63
    3c7a:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    3c7e:	88 23       	and	r24, r24
    3c80:	2c f4       	brge	.+10     	; 0x3c8c <CLCD_voidInti+0x376>
		__ticks = 1;
    3c82:	81 e0       	ldi	r24, 0x01	; 1
    3c84:	90 e0       	ldi	r25, 0x00	; 0
    3c86:	9c 8b       	std	Y+20, r25	; 0x14
    3c88:	8b 8b       	std	Y+19, r24	; 0x13
    3c8a:	3f c0       	rjmp	.+126    	; 0x3d0a <CLCD_voidInti+0x3f4>
	else if (__tmp > 65535)
    3c8c:	6d 89       	ldd	r22, Y+21	; 0x15
    3c8e:	7e 89       	ldd	r23, Y+22	; 0x16
    3c90:	8f 89       	ldd	r24, Y+23	; 0x17
    3c92:	98 8d       	ldd	r25, Y+24	; 0x18
    3c94:	20 e0       	ldi	r18, 0x00	; 0
    3c96:	3f ef       	ldi	r19, 0xFF	; 255
    3c98:	4f e7       	ldi	r20, 0x7F	; 127
    3c9a:	57 e4       	ldi	r21, 0x47	; 71
    3c9c:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    3ca0:	18 16       	cp	r1, r24
    3ca2:	4c f5       	brge	.+82     	; 0x3cf6 <CLCD_voidInti+0x3e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ca4:	69 8d       	ldd	r22, Y+25	; 0x19
    3ca6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ca8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3caa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3cac:	20 e0       	ldi	r18, 0x00	; 0
    3cae:	30 e0       	ldi	r19, 0x00	; 0
    3cb0:	40 e2       	ldi	r20, 0x20	; 32
    3cb2:	51 e4       	ldi	r21, 0x41	; 65
    3cb4:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3cb8:	dc 01       	movw	r26, r24
    3cba:	cb 01       	movw	r24, r22
    3cbc:	bc 01       	movw	r22, r24
    3cbe:	cd 01       	movw	r24, r26
    3cc0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3cc4:	dc 01       	movw	r26, r24
    3cc6:	cb 01       	movw	r24, r22
    3cc8:	9c 8b       	std	Y+20, r25	; 0x14
    3cca:	8b 8b       	std	Y+19, r24	; 0x13
    3ccc:	0f c0       	rjmp	.+30     	; 0x3cec <CLCD_voidInti+0x3d6>
    3cce:	88 ec       	ldi	r24, 0xC8	; 200
    3cd0:	90 e0       	ldi	r25, 0x00	; 0
    3cd2:	9a 8b       	std	Y+18, r25	; 0x12
    3cd4:	89 8b       	std	Y+17, r24	; 0x11
    3cd6:	89 89       	ldd	r24, Y+17	; 0x11
    3cd8:	9a 89       	ldd	r25, Y+18	; 0x12
    3cda:	01 97       	sbiw	r24, 0x01	; 1
    3cdc:	f1 f7       	brne	.-4      	; 0x3cda <CLCD_voidInti+0x3c4>
    3cde:	9a 8b       	std	Y+18, r25	; 0x12
    3ce0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ce2:	8b 89       	ldd	r24, Y+19	; 0x13
    3ce4:	9c 89       	ldd	r25, Y+20	; 0x14
    3ce6:	01 97       	sbiw	r24, 0x01	; 1
    3ce8:	9c 8b       	std	Y+20, r25	; 0x14
    3cea:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cec:	8b 89       	ldd	r24, Y+19	; 0x13
    3cee:	9c 89       	ldd	r25, Y+20	; 0x14
    3cf0:	00 97       	sbiw	r24, 0x00	; 0
    3cf2:	69 f7       	brne	.-38     	; 0x3cce <CLCD_voidInti+0x3b8>
    3cf4:	14 c0       	rjmp	.+40     	; 0x3d1e <CLCD_voidInti+0x408>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cf6:	6d 89       	ldd	r22, Y+21	; 0x15
    3cf8:	7e 89       	ldd	r23, Y+22	; 0x16
    3cfa:	8f 89       	ldd	r24, Y+23	; 0x17
    3cfc:	98 8d       	ldd	r25, Y+24	; 0x18
    3cfe:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3d02:	dc 01       	movw	r26, r24
    3d04:	cb 01       	movw	r24, r22
    3d06:	9c 8b       	std	Y+20, r25	; 0x14
    3d08:	8b 8b       	std	Y+19, r24	; 0x13
    3d0a:	8b 89       	ldd	r24, Y+19	; 0x13
    3d0c:	9c 89       	ldd	r25, Y+20	; 0x14
    3d0e:	98 8b       	std	Y+16, r25	; 0x10
    3d10:	8f 87       	std	Y+15, r24	; 0x0f
    3d12:	8f 85       	ldd	r24, Y+15	; 0x0f
    3d14:	98 89       	ldd	r25, Y+16	; 0x10
    3d16:	01 97       	sbiw	r24, 0x01	; 1
    3d18:	f1 f7       	brne	.-4      	; 0x3d16 <CLCD_voidInti+0x400>
    3d1a:	98 8b       	std	Y+16, r25	; 0x10
    3d1c:	8f 87       	std	Y+15, r24	; 0x0f
	 _delay_ms(1);

	 CLCD_voidClearScreen();
    3d1e:	0e 94 6a 26 	call	0x4cd4	; 0x4cd4 <CLCD_voidClearScreen>

	  CLCD_voidSendCommand(LCD_ENTRY_MODE);
    3d22:	86 e0       	ldi	r24, 0x06	; 6
    3d24:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <CLCD_voidSendCommand>
    3d28:	80 e0       	ldi	r24, 0x00	; 0
    3d2a:	90 e0       	ldi	r25, 0x00	; 0
    3d2c:	a0 e8       	ldi	r26, 0x80	; 128
    3d2e:	bf e3       	ldi	r27, 0x3F	; 63
    3d30:	8b 87       	std	Y+11, r24	; 0x0b
    3d32:	9c 87       	std	Y+12, r25	; 0x0c
    3d34:	ad 87       	std	Y+13, r26	; 0x0d
    3d36:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d38:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d3a:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d3c:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d3e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d40:	20 e0       	ldi	r18, 0x00	; 0
    3d42:	30 e0       	ldi	r19, 0x00	; 0
    3d44:	4a ef       	ldi	r20, 0xFA	; 250
    3d46:	54 e4       	ldi	r21, 0x44	; 68
    3d48:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3d4c:	dc 01       	movw	r26, r24
    3d4e:	cb 01       	movw	r24, r22
    3d50:	8f 83       	std	Y+7, r24	; 0x07
    3d52:	98 87       	std	Y+8, r25	; 0x08
    3d54:	a9 87       	std	Y+9, r26	; 0x09
    3d56:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3d58:	6f 81       	ldd	r22, Y+7	; 0x07
    3d5a:	78 85       	ldd	r23, Y+8	; 0x08
    3d5c:	89 85       	ldd	r24, Y+9	; 0x09
    3d5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d60:	20 e0       	ldi	r18, 0x00	; 0
    3d62:	30 e0       	ldi	r19, 0x00	; 0
    3d64:	40 e8       	ldi	r20, 0x80	; 128
    3d66:	5f e3       	ldi	r21, 0x3F	; 63
    3d68:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    3d6c:	88 23       	and	r24, r24
    3d6e:	2c f4       	brge	.+10     	; 0x3d7a <CLCD_voidInti+0x464>
		__ticks = 1;
    3d70:	81 e0       	ldi	r24, 0x01	; 1
    3d72:	90 e0       	ldi	r25, 0x00	; 0
    3d74:	9e 83       	std	Y+6, r25	; 0x06
    3d76:	8d 83       	std	Y+5, r24	; 0x05
    3d78:	3f c0       	rjmp	.+126    	; 0x3df8 <CLCD_voidInti+0x4e2>
	else if (__tmp > 65535)
    3d7a:	6f 81       	ldd	r22, Y+7	; 0x07
    3d7c:	78 85       	ldd	r23, Y+8	; 0x08
    3d7e:	89 85       	ldd	r24, Y+9	; 0x09
    3d80:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d82:	20 e0       	ldi	r18, 0x00	; 0
    3d84:	3f ef       	ldi	r19, 0xFF	; 255
    3d86:	4f e7       	ldi	r20, 0x7F	; 127
    3d88:	57 e4       	ldi	r21, 0x47	; 71
    3d8a:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    3d8e:	18 16       	cp	r1, r24
    3d90:	4c f5       	brge	.+82     	; 0x3de4 <CLCD_voidInti+0x4ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d92:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d94:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d96:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d98:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d9a:	20 e0       	ldi	r18, 0x00	; 0
    3d9c:	30 e0       	ldi	r19, 0x00	; 0
    3d9e:	40 e2       	ldi	r20, 0x20	; 32
    3da0:	51 e4       	ldi	r21, 0x41	; 65
    3da2:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3da6:	dc 01       	movw	r26, r24
    3da8:	cb 01       	movw	r24, r22
    3daa:	bc 01       	movw	r22, r24
    3dac:	cd 01       	movw	r24, r26
    3dae:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3db2:	dc 01       	movw	r26, r24
    3db4:	cb 01       	movw	r24, r22
    3db6:	9e 83       	std	Y+6, r25	; 0x06
    3db8:	8d 83       	std	Y+5, r24	; 0x05
    3dba:	0f c0       	rjmp	.+30     	; 0x3dda <CLCD_voidInti+0x4c4>
    3dbc:	88 ec       	ldi	r24, 0xC8	; 200
    3dbe:	90 e0       	ldi	r25, 0x00	; 0
    3dc0:	9c 83       	std	Y+4, r25	; 0x04
    3dc2:	8b 83       	std	Y+3, r24	; 0x03
    3dc4:	8b 81       	ldd	r24, Y+3	; 0x03
    3dc6:	9c 81       	ldd	r25, Y+4	; 0x04
    3dc8:	01 97       	sbiw	r24, 0x01	; 1
    3dca:	f1 f7       	brne	.-4      	; 0x3dc8 <CLCD_voidInti+0x4b2>
    3dcc:	9c 83       	std	Y+4, r25	; 0x04
    3dce:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3dd0:	8d 81       	ldd	r24, Y+5	; 0x05
    3dd2:	9e 81       	ldd	r25, Y+6	; 0x06
    3dd4:	01 97       	sbiw	r24, 0x01	; 1
    3dd6:	9e 83       	std	Y+6, r25	; 0x06
    3dd8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3dda:	8d 81       	ldd	r24, Y+5	; 0x05
    3ddc:	9e 81       	ldd	r25, Y+6	; 0x06
    3dde:	00 97       	sbiw	r24, 0x00	; 0
    3de0:	69 f7       	brne	.-38     	; 0x3dbc <CLCD_voidInti+0x4a6>
    3de2:	14 c0       	rjmp	.+40     	; 0x3e0c <CLCD_voidInti+0x4f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3de4:	6f 81       	ldd	r22, Y+7	; 0x07
    3de6:	78 85       	ldd	r23, Y+8	; 0x08
    3de8:	89 85       	ldd	r24, Y+9	; 0x09
    3dea:	9a 85       	ldd	r25, Y+10	; 0x0a
    3dec:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3df0:	dc 01       	movw	r26, r24
    3df2:	cb 01       	movw	r24, r22
    3df4:	9e 83       	std	Y+6, r25	; 0x06
    3df6:	8d 83       	std	Y+5, r24	; 0x05
    3df8:	8d 81       	ldd	r24, Y+5	; 0x05
    3dfa:	9e 81       	ldd	r25, Y+6	; 0x06
    3dfc:	9a 83       	std	Y+2, r25	; 0x02
    3dfe:	89 83       	std	Y+1, r24	; 0x01
    3e00:	89 81       	ldd	r24, Y+1	; 0x01
    3e02:	9a 81       	ldd	r25, Y+2	; 0x02
    3e04:	01 97       	sbiw	r24, 0x01	; 1
    3e06:	f1 f7       	brne	.-4      	; 0x3e04 <CLCD_voidInti+0x4ee>
    3e08:	9a 83       	std	Y+2, r25	; 0x02
    3e0a:	89 83       	std	Y+1, r24	; 0x01
	 _delay_ms(1);


	#endif

}
    3e0c:	ca 5b       	subi	r28, 0xBA	; 186
    3e0e:	df 4f       	sbci	r29, 0xFF	; 255
    3e10:	0f b6       	in	r0, 0x3f	; 63
    3e12:	f8 94       	cli
    3e14:	de bf       	out	0x3e, r29	; 62
    3e16:	0f be       	out	0x3f, r0	; 63
    3e18:	cd bf       	out	0x3d, r28	; 61
    3e1a:	cf 91       	pop	r28
    3e1c:	df 91       	pop	r29
    3e1e:	1f 91       	pop	r17
    3e20:	0f 91       	pop	r16
    3e22:	08 95       	ret

00003e24 <CLCD_voidSendData>:

void CLCD_voidSendData(u8 copy_u8Data)
{
    3e24:	df 93       	push	r29
    3e26:	cf 93       	push	r28
    3e28:	cd b7       	in	r28, 0x3d	; 61
    3e2a:	de b7       	in	r29, 0x3e	; 62
    3e2c:	2f 97       	sbiw	r28, 0x0f	; 15
    3e2e:	0f b6       	in	r0, 0x3f	; 63
    3e30:	f8 94       	cli
    3e32:	de bf       	out	0x3e, r29	; 62
    3e34:	0f be       	out	0x3f, r0	; 63
    3e36:	cd bf       	out	0x3d, r28	; 61
    3e38:	8f 87       	std	Y+15, r24	; 0x0f
	#if CLCD_MODE==8
	DIO_enumSetPortValue (CLCD_DATA_PORT,copy_u8Data);
    3e3a:	80 e0       	ldi	r24, 0x00	; 0
    3e3c:	6f 85       	ldd	r22, Y+15	; 0x0f
    3e3e:	0e 94 86 16 	call	0x2d0c	; 0x2d0c <DIO_enumSetPortValue>
	DIO_enumSetPinValue  (CLCD_CONTROLER_PORT,CLCD_RS,DIO_PIN_HIGH);
    3e42:	81 e0       	ldi	r24, 0x01	; 1
    3e44:	67 e0       	ldi	r22, 0x07	; 7
    3e46:	41 e0       	ldi	r20, 0x01	; 1
    3e48:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
	DIO_enumSetPinValue  (CLCD_CONTROLER_PORT,CLCD_RW,DIO_PIN_LOW);
    3e4c:	81 e0       	ldi	r24, 0x01	; 1
    3e4e:	66 e0       	ldi	r22, 0x06	; 6
    3e50:	40 e0       	ldi	r20, 0x00	; 0
    3e52:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
	CLCD_voidSendFallingEdge();
    3e56:	0e 94 f2 26 	call	0x4de4	; 0x4de4 <CLCD_voidSendFallingEdge>
    3e5a:	80 e0       	ldi	r24, 0x00	; 0
    3e5c:	90 e0       	ldi	r25, 0x00	; 0
    3e5e:	a0 e8       	ldi	r26, 0x80	; 128
    3e60:	bf e3       	ldi	r27, 0x3F	; 63
    3e62:	8b 87       	std	Y+11, r24	; 0x0b
    3e64:	9c 87       	std	Y+12, r25	; 0x0c
    3e66:	ad 87       	std	Y+13, r26	; 0x0d
    3e68:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e6a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e6c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3e6e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e70:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e72:	20 e0       	ldi	r18, 0x00	; 0
    3e74:	30 e0       	ldi	r19, 0x00	; 0
    3e76:	4a ef       	ldi	r20, 0xFA	; 250
    3e78:	54 e4       	ldi	r21, 0x44	; 68
    3e7a:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3e7e:	dc 01       	movw	r26, r24
    3e80:	cb 01       	movw	r24, r22
    3e82:	8f 83       	std	Y+7, r24	; 0x07
    3e84:	98 87       	std	Y+8, r25	; 0x08
    3e86:	a9 87       	std	Y+9, r26	; 0x09
    3e88:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3e8a:	6f 81       	ldd	r22, Y+7	; 0x07
    3e8c:	78 85       	ldd	r23, Y+8	; 0x08
    3e8e:	89 85       	ldd	r24, Y+9	; 0x09
    3e90:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e92:	20 e0       	ldi	r18, 0x00	; 0
    3e94:	30 e0       	ldi	r19, 0x00	; 0
    3e96:	40 e8       	ldi	r20, 0x80	; 128
    3e98:	5f e3       	ldi	r21, 0x3F	; 63
    3e9a:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    3e9e:	88 23       	and	r24, r24
    3ea0:	2c f4       	brge	.+10     	; 0x3eac <CLCD_voidSendData+0x88>
		__ticks = 1;
    3ea2:	81 e0       	ldi	r24, 0x01	; 1
    3ea4:	90 e0       	ldi	r25, 0x00	; 0
    3ea6:	9e 83       	std	Y+6, r25	; 0x06
    3ea8:	8d 83       	std	Y+5, r24	; 0x05
    3eaa:	3f c0       	rjmp	.+126    	; 0x3f2a <CLCD_voidSendData+0x106>
	else if (__tmp > 65535)
    3eac:	6f 81       	ldd	r22, Y+7	; 0x07
    3eae:	78 85       	ldd	r23, Y+8	; 0x08
    3eb0:	89 85       	ldd	r24, Y+9	; 0x09
    3eb2:	9a 85       	ldd	r25, Y+10	; 0x0a
    3eb4:	20 e0       	ldi	r18, 0x00	; 0
    3eb6:	3f ef       	ldi	r19, 0xFF	; 255
    3eb8:	4f e7       	ldi	r20, 0x7F	; 127
    3eba:	57 e4       	ldi	r21, 0x47	; 71
    3ebc:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    3ec0:	18 16       	cp	r1, r24
    3ec2:	4c f5       	brge	.+82     	; 0x3f16 <CLCD_voidSendData+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ec4:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ec6:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ec8:	8d 85       	ldd	r24, Y+13	; 0x0d
    3eca:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ecc:	20 e0       	ldi	r18, 0x00	; 0
    3ece:	30 e0       	ldi	r19, 0x00	; 0
    3ed0:	40 e2       	ldi	r20, 0x20	; 32
    3ed2:	51 e4       	ldi	r21, 0x41	; 65
    3ed4:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3ed8:	dc 01       	movw	r26, r24
    3eda:	cb 01       	movw	r24, r22
    3edc:	bc 01       	movw	r22, r24
    3ede:	cd 01       	movw	r24, r26
    3ee0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3ee4:	dc 01       	movw	r26, r24
    3ee6:	cb 01       	movw	r24, r22
    3ee8:	9e 83       	std	Y+6, r25	; 0x06
    3eea:	8d 83       	std	Y+5, r24	; 0x05
    3eec:	0f c0       	rjmp	.+30     	; 0x3f0c <CLCD_voidSendData+0xe8>
    3eee:	88 ec       	ldi	r24, 0xC8	; 200
    3ef0:	90 e0       	ldi	r25, 0x00	; 0
    3ef2:	9c 83       	std	Y+4, r25	; 0x04
    3ef4:	8b 83       	std	Y+3, r24	; 0x03
    3ef6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ef8:	9c 81       	ldd	r25, Y+4	; 0x04
    3efa:	01 97       	sbiw	r24, 0x01	; 1
    3efc:	f1 f7       	brne	.-4      	; 0x3efa <CLCD_voidSendData+0xd6>
    3efe:	9c 83       	std	Y+4, r25	; 0x04
    3f00:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f02:	8d 81       	ldd	r24, Y+5	; 0x05
    3f04:	9e 81       	ldd	r25, Y+6	; 0x06
    3f06:	01 97       	sbiw	r24, 0x01	; 1
    3f08:	9e 83       	std	Y+6, r25	; 0x06
    3f0a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f0c:	8d 81       	ldd	r24, Y+5	; 0x05
    3f0e:	9e 81       	ldd	r25, Y+6	; 0x06
    3f10:	00 97       	sbiw	r24, 0x00	; 0
    3f12:	69 f7       	brne	.-38     	; 0x3eee <CLCD_voidSendData+0xca>
    3f14:	14 c0       	rjmp	.+40     	; 0x3f3e <CLCD_voidSendData+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f16:	6f 81       	ldd	r22, Y+7	; 0x07
    3f18:	78 85       	ldd	r23, Y+8	; 0x08
    3f1a:	89 85       	ldd	r24, Y+9	; 0x09
    3f1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f1e:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    3f22:	dc 01       	movw	r26, r24
    3f24:	cb 01       	movw	r24, r22
    3f26:	9e 83       	std	Y+6, r25	; 0x06
    3f28:	8d 83       	std	Y+5, r24	; 0x05
    3f2a:	8d 81       	ldd	r24, Y+5	; 0x05
    3f2c:	9e 81       	ldd	r25, Y+6	; 0x06
    3f2e:	9a 83       	std	Y+2, r25	; 0x02
    3f30:	89 83       	std	Y+1, r24	; 0x01
    3f32:	89 81       	ldd	r24, Y+1	; 0x01
    3f34:	9a 81       	ldd	r25, Y+2	; 0x02
    3f36:	01 97       	sbiw	r24, 0x01	; 1
    3f38:	f1 f7       	brne	.-4      	; 0x3f36 <CLCD_voidSendData+0x112>
    3f3a:	9a 83       	std	Y+2, r25	; 0x02
    3f3c:	89 83       	std	Y+1, r24	; 0x01

	#endif
	_delay_ms(1);


}
    3f3e:	2f 96       	adiw	r28, 0x0f	; 15
    3f40:	0f b6       	in	r0, 0x3f	; 63
    3f42:	f8 94       	cli
    3f44:	de bf       	out	0x3e, r29	; 62
    3f46:	0f be       	out	0x3f, r0	; 63
    3f48:	cd bf       	out	0x3d, r28	; 61
    3f4a:	cf 91       	pop	r28
    3f4c:	df 91       	pop	r29
    3f4e:	08 95       	ret

00003f50 <CLCD_voidSendCommand>:
void CLCD_voidSendCommand(u8 copy_u8Command)
{
    3f50:	df 93       	push	r29
    3f52:	cf 93       	push	r28
    3f54:	cd b7       	in	r28, 0x3d	; 61
    3f56:	de b7       	in	r29, 0x3e	; 62
    3f58:	2f 97       	sbiw	r28, 0x0f	; 15
    3f5a:	0f b6       	in	r0, 0x3f	; 63
    3f5c:	f8 94       	cli
    3f5e:	de bf       	out	0x3e, r29	; 62
    3f60:	0f be       	out	0x3f, r0	; 63
    3f62:	cd bf       	out	0x3d, r28	; 61
    3f64:	8f 87       	std	Y+15, r24	; 0x0f

	#if CLCD_MODE==8
	DIO_enumSetPortValue (CLCD_DATA_PORT, copy_u8Command);
    3f66:	80 e0       	ldi	r24, 0x00	; 0
    3f68:	6f 85       	ldd	r22, Y+15	; 0x0f
    3f6a:	0e 94 86 16 	call	0x2d0c	; 0x2d0c <DIO_enumSetPortValue>
	DIO_enumSetPinValue  (CLCD_CONTROLER_PORT,CLCD_RS,DIO_PIN_LOW);
    3f6e:	81 e0       	ldi	r24, 0x01	; 1
    3f70:	67 e0       	ldi	r22, 0x07	; 7
    3f72:	40 e0       	ldi	r20, 0x00	; 0
    3f74:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
	DIO_enumSetPinValue  (CLCD_CONTROLER_PORT,CLCD_RW,DIO_PIN_LOW);
    3f78:	81 e0       	ldi	r24, 0x01	; 1
    3f7a:	66 e0       	ldi	r22, 0x06	; 6
    3f7c:	40 e0       	ldi	r20, 0x00	; 0
    3f7e:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
	CLCD_voidSendFallingEdge();
    3f82:	0e 94 f2 26 	call	0x4de4	; 0x4de4 <CLCD_voidSendFallingEdge>
    3f86:	80 e0       	ldi	r24, 0x00	; 0
    3f88:	90 e0       	ldi	r25, 0x00	; 0
    3f8a:	a0 e8       	ldi	r26, 0x80	; 128
    3f8c:	bf e3       	ldi	r27, 0x3F	; 63
    3f8e:	8b 87       	std	Y+11, r24	; 0x0b
    3f90:	9c 87       	std	Y+12, r25	; 0x0c
    3f92:	ad 87       	std	Y+13, r26	; 0x0d
    3f94:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f96:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f98:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f9a:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f9c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f9e:	20 e0       	ldi	r18, 0x00	; 0
    3fa0:	30 e0       	ldi	r19, 0x00	; 0
    3fa2:	4a ef       	ldi	r20, 0xFA	; 250
    3fa4:	54 e4       	ldi	r21, 0x44	; 68
    3fa6:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    3faa:	dc 01       	movw	r26, r24
    3fac:	cb 01       	movw	r24, r22
    3fae:	8f 83       	std	Y+7, r24	; 0x07
    3fb0:	98 87       	std	Y+8, r25	; 0x08
    3fb2:	a9 87       	std	Y+9, r26	; 0x09
    3fb4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3fb6:	6f 81       	ldd	r22, Y+7	; 0x07
    3fb8:	78 85       	ldd	r23, Y+8	; 0x08
    3fba:	89 85       	ldd	r24, Y+9	; 0x09
    3fbc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fbe:	20 e0       	ldi	r18, 0x00	; 0
    3fc0:	30 e0       	ldi	r19, 0x00	; 0
    3fc2:	40 e8       	ldi	r20, 0x80	; 128
    3fc4:	5f e3       	ldi	r21, 0x3F	; 63
    3fc6:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    3fca:	88 23       	and	r24, r24
    3fcc:	2c f4       	brge	.+10     	; 0x3fd8 <CLCD_voidSendCommand+0x88>
		__ticks = 1;
    3fce:	81 e0       	ldi	r24, 0x01	; 1
    3fd0:	90 e0       	ldi	r25, 0x00	; 0
    3fd2:	9e 83       	std	Y+6, r25	; 0x06
    3fd4:	8d 83       	std	Y+5, r24	; 0x05
    3fd6:	3f c0       	rjmp	.+126    	; 0x4056 <CLCD_voidSendCommand+0x106>
	else if (__tmp > 65535)
    3fd8:	6f 81       	ldd	r22, Y+7	; 0x07
    3fda:	78 85       	ldd	r23, Y+8	; 0x08
    3fdc:	89 85       	ldd	r24, Y+9	; 0x09
    3fde:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fe0:	20 e0       	ldi	r18, 0x00	; 0
    3fe2:	3f ef       	ldi	r19, 0xFF	; 255
    3fe4:	4f e7       	ldi	r20, 0x7F	; 127
    3fe6:	57 e4       	ldi	r21, 0x47	; 71
    3fe8:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    3fec:	18 16       	cp	r1, r24
    3fee:	4c f5       	brge	.+82     	; 0x4042 <CLCD_voidSendCommand+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ff0:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ff2:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ff4:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ff6:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ff8:	20 e0       	ldi	r18, 0x00	; 0
    3ffa:	30 e0       	ldi	r19, 0x00	; 0
    3ffc:	40 e2       	ldi	r20, 0x20	; 32
    3ffe:	51 e4       	ldi	r21, 0x41	; 65
    4000:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4004:	dc 01       	movw	r26, r24
    4006:	cb 01       	movw	r24, r22
    4008:	bc 01       	movw	r22, r24
    400a:	cd 01       	movw	r24, r26
    400c:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4010:	dc 01       	movw	r26, r24
    4012:	cb 01       	movw	r24, r22
    4014:	9e 83       	std	Y+6, r25	; 0x06
    4016:	8d 83       	std	Y+5, r24	; 0x05
    4018:	0f c0       	rjmp	.+30     	; 0x4038 <CLCD_voidSendCommand+0xe8>
    401a:	88 ec       	ldi	r24, 0xC8	; 200
    401c:	90 e0       	ldi	r25, 0x00	; 0
    401e:	9c 83       	std	Y+4, r25	; 0x04
    4020:	8b 83       	std	Y+3, r24	; 0x03
    4022:	8b 81       	ldd	r24, Y+3	; 0x03
    4024:	9c 81       	ldd	r25, Y+4	; 0x04
    4026:	01 97       	sbiw	r24, 0x01	; 1
    4028:	f1 f7       	brne	.-4      	; 0x4026 <CLCD_voidSendCommand+0xd6>
    402a:	9c 83       	std	Y+4, r25	; 0x04
    402c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    402e:	8d 81       	ldd	r24, Y+5	; 0x05
    4030:	9e 81       	ldd	r25, Y+6	; 0x06
    4032:	01 97       	sbiw	r24, 0x01	; 1
    4034:	9e 83       	std	Y+6, r25	; 0x06
    4036:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4038:	8d 81       	ldd	r24, Y+5	; 0x05
    403a:	9e 81       	ldd	r25, Y+6	; 0x06
    403c:	00 97       	sbiw	r24, 0x00	; 0
    403e:	69 f7       	brne	.-38     	; 0x401a <CLCD_voidSendCommand+0xca>
    4040:	14 c0       	rjmp	.+40     	; 0x406a <CLCD_voidSendCommand+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4042:	6f 81       	ldd	r22, Y+7	; 0x07
    4044:	78 85       	ldd	r23, Y+8	; 0x08
    4046:	89 85       	ldd	r24, Y+9	; 0x09
    4048:	9a 85       	ldd	r25, Y+10	; 0x0a
    404a:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    404e:	dc 01       	movw	r26, r24
    4050:	cb 01       	movw	r24, r22
    4052:	9e 83       	std	Y+6, r25	; 0x06
    4054:	8d 83       	std	Y+5, r24	; 0x05
    4056:	8d 81       	ldd	r24, Y+5	; 0x05
    4058:	9e 81       	ldd	r25, Y+6	; 0x06
    405a:	9a 83       	std	Y+2, r25	; 0x02
    405c:	89 83       	std	Y+1, r24	; 0x01
    405e:	89 81       	ldd	r24, Y+1	; 0x01
    4060:	9a 81       	ldd	r25, Y+2	; 0x02
    4062:	01 97       	sbiw	r24, 0x01	; 1
    4064:	f1 f7       	brne	.-4      	; 0x4062 <CLCD_voidSendCommand+0x112>
    4066:	9a 83       	std	Y+2, r25	; 0x02
    4068:	89 83       	std	Y+1, r24	; 0x01
	 #endif
	#endif
	_delay_ms(1);


}
    406a:	2f 96       	adiw	r28, 0x0f	; 15
    406c:	0f b6       	in	r0, 0x3f	; 63
    406e:	f8 94       	cli
    4070:	de bf       	out	0x3e, r29	; 62
    4072:	0f be       	out	0x3f, r0	; 63
    4074:	cd bf       	out	0x3d, r28	; 61
    4076:	cf 91       	pop	r28
    4078:	df 91       	pop	r29
    407a:	08 95       	ret

0000407c <CLCD_voidSendString>:
void CLCD_voidSendString(const u8 *copy_u8PtrString)
{
    407c:	df 93       	push	r29
    407e:	cf 93       	push	r28
    4080:	00 d0       	rcall	.+0      	; 0x4082 <CLCD_voidSendString+0x6>
    4082:	0f 92       	push	r0
    4084:	cd b7       	in	r28, 0x3d	; 61
    4086:	de b7       	in	r29, 0x3e	; 62
    4088:	9b 83       	std	Y+3, r25	; 0x03
    408a:	8a 83       	std	Y+2, r24	; 0x02
	u8 LOC_u8Iterator=0;
    408c:	19 82       	std	Y+1, r1	; 0x01
    408e:	0e c0       	rjmp	.+28     	; 0x40ac <CLCD_voidSendString+0x30>
	while(copy_u8PtrString[LOC_u8Iterator]!='\0')
	{
		CLCD_voidSendData(copy_u8PtrString[LOC_u8Iterator]);
    4090:	89 81       	ldd	r24, Y+1	; 0x01
    4092:	28 2f       	mov	r18, r24
    4094:	30 e0       	ldi	r19, 0x00	; 0
    4096:	8a 81       	ldd	r24, Y+2	; 0x02
    4098:	9b 81       	ldd	r25, Y+3	; 0x03
    409a:	fc 01       	movw	r30, r24
    409c:	e2 0f       	add	r30, r18
    409e:	f3 1f       	adc	r31, r19
    40a0:	80 81       	ld	r24, Z
    40a2:	0e 94 12 1f 	call	0x3e24	; 0x3e24 <CLCD_voidSendData>
		++LOC_u8Iterator;
    40a6:	89 81       	ldd	r24, Y+1	; 0x01
    40a8:	8f 5f       	subi	r24, 0xFF	; 255
    40aa:	89 83       	std	Y+1, r24	; 0x01

}
void CLCD_voidSendString(const u8 *copy_u8PtrString)
{
	u8 LOC_u8Iterator=0;
	while(copy_u8PtrString[LOC_u8Iterator]!='\0')
    40ac:	89 81       	ldd	r24, Y+1	; 0x01
    40ae:	28 2f       	mov	r18, r24
    40b0:	30 e0       	ldi	r19, 0x00	; 0
    40b2:	8a 81       	ldd	r24, Y+2	; 0x02
    40b4:	9b 81       	ldd	r25, Y+3	; 0x03
    40b6:	fc 01       	movw	r30, r24
    40b8:	e2 0f       	add	r30, r18
    40ba:	f3 1f       	adc	r31, r19
    40bc:	80 81       	ld	r24, Z
    40be:	88 23       	and	r24, r24
    40c0:	39 f7       	brne	.-50     	; 0x4090 <CLCD_voidSendString+0x14>
	{
		CLCD_voidSendData(copy_u8PtrString[LOC_u8Iterator]);
		++LOC_u8Iterator;
	}
}
    40c2:	0f 90       	pop	r0
    40c4:	0f 90       	pop	r0
    40c6:	0f 90       	pop	r0
    40c8:	cf 91       	pop	r28
    40ca:	df 91       	pop	r29
    40cc:	08 95       	ret

000040ce <CLCD_voidSetPosition>:
void CLCD_voidSetPosition(u8 copy_u8Row,u8 copy_u8Col)
{
    40ce:	df 93       	push	r29
    40d0:	cf 93       	push	r28
    40d2:	cd b7       	in	r28, 0x3d	; 61
    40d4:	de b7       	in	r29, 0x3e	; 62
    40d6:	61 97       	sbiw	r28, 0x11	; 17
    40d8:	0f b6       	in	r0, 0x3f	; 63
    40da:	f8 94       	cli
    40dc:	de bf       	out	0x3e, r29	; 62
    40de:	0f be       	out	0x3f, r0	; 63
    40e0:	cd bf       	out	0x3d, r28	; 61
    40e2:	88 8b       	std	Y+16, r24	; 0x10
    40e4:	69 8b       	std	Y+17, r22	; 0x11
	u8 LOC_Data;

	if( copy_u8Row>2 || copy_u8Row<1 || copy_u8Col<1 || copy_u8Col>16)
    40e6:	88 89       	ldd	r24, Y+16	; 0x10
    40e8:	83 30       	cpi	r24, 0x03	; 3
    40ea:	48 f4       	brcc	.+18     	; 0x40fe <CLCD_voidSetPosition+0x30>
    40ec:	88 89       	ldd	r24, Y+16	; 0x10
    40ee:	88 23       	and	r24, r24
    40f0:	31 f0       	breq	.+12     	; 0x40fe <CLCD_voidSetPosition+0x30>
    40f2:	89 89       	ldd	r24, Y+17	; 0x11
    40f4:	88 23       	and	r24, r24
    40f6:	19 f0       	breq	.+6      	; 0x40fe <CLCD_voidSetPosition+0x30>
    40f8:	89 89       	ldd	r24, Y+17	; 0x11
    40fa:	81 31       	cpi	r24, 0x11	; 17
    40fc:	18 f0       	brcs	.+6      	; 0x4104 <CLCD_voidSetPosition+0x36>
	{
		LOC_Data=LCD_SetCurser;
    40fe:	80 e8       	ldi	r24, 0x80	; 128
    4100:	8f 87       	std	Y+15, r24	; 0x0f
    4102:	0d c0       	rjmp	.+26     	; 0x411e <CLCD_voidSetPosition+0x50>
	}
	else if(copy_u8Row==CLCD_ROW_1)
    4104:	88 89       	ldd	r24, Y+16	; 0x10
    4106:	81 30       	cpi	r24, 0x01	; 1
    4108:	21 f4       	brne	.+8      	; 0x4112 <CLCD_voidSetPosition+0x44>
	{
		LOC_Data=(LCD_SetCurser+(copy_u8Col-1));
    410a:	89 89       	ldd	r24, Y+17	; 0x11
    410c:	81 58       	subi	r24, 0x81	; 129
    410e:	8f 87       	std	Y+15, r24	; 0x0f
    4110:	06 c0       	rjmp	.+12     	; 0x411e <CLCD_voidSetPosition+0x50>
	}
	else if(copy_u8Row==CLCD_ROW_2)
    4112:	88 89       	ldd	r24, Y+16	; 0x10
    4114:	82 30       	cpi	r24, 0x02	; 2
    4116:	19 f4       	brne	.+6      	; 0x411e <CLCD_voidSetPosition+0x50>
	{
		LOC_Data=((LCD_SetCurser+64)+(copy_u8Col-1));
    4118:	89 89       	ldd	r24, Y+17	; 0x11
    411a:	81 54       	subi	r24, 0x41	; 65
    411c:	8f 87       	std	Y+15, r24	; 0x0f
	}
	CLCD_voidSendCommand(LOC_Data);
    411e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4120:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <CLCD_voidSendCommand>
    4124:	80 e0       	ldi	r24, 0x00	; 0
    4126:	90 e0       	ldi	r25, 0x00	; 0
    4128:	a0 e8       	ldi	r26, 0x80	; 128
    412a:	bf e3       	ldi	r27, 0x3F	; 63
    412c:	8b 87       	std	Y+11, r24	; 0x0b
    412e:	9c 87       	std	Y+12, r25	; 0x0c
    4130:	ad 87       	std	Y+13, r26	; 0x0d
    4132:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4134:	6b 85       	ldd	r22, Y+11	; 0x0b
    4136:	7c 85       	ldd	r23, Y+12	; 0x0c
    4138:	8d 85       	ldd	r24, Y+13	; 0x0d
    413a:	9e 85       	ldd	r25, Y+14	; 0x0e
    413c:	20 e0       	ldi	r18, 0x00	; 0
    413e:	30 e0       	ldi	r19, 0x00	; 0
    4140:	4a ef       	ldi	r20, 0xFA	; 250
    4142:	54 e4       	ldi	r21, 0x44	; 68
    4144:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4148:	dc 01       	movw	r26, r24
    414a:	cb 01       	movw	r24, r22
    414c:	8f 83       	std	Y+7, r24	; 0x07
    414e:	98 87       	std	Y+8, r25	; 0x08
    4150:	a9 87       	std	Y+9, r26	; 0x09
    4152:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4154:	6f 81       	ldd	r22, Y+7	; 0x07
    4156:	78 85       	ldd	r23, Y+8	; 0x08
    4158:	89 85       	ldd	r24, Y+9	; 0x09
    415a:	9a 85       	ldd	r25, Y+10	; 0x0a
    415c:	20 e0       	ldi	r18, 0x00	; 0
    415e:	30 e0       	ldi	r19, 0x00	; 0
    4160:	40 e8       	ldi	r20, 0x80	; 128
    4162:	5f e3       	ldi	r21, 0x3F	; 63
    4164:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    4168:	88 23       	and	r24, r24
    416a:	2c f4       	brge	.+10     	; 0x4176 <CLCD_voidSetPosition+0xa8>
		__ticks = 1;
    416c:	81 e0       	ldi	r24, 0x01	; 1
    416e:	90 e0       	ldi	r25, 0x00	; 0
    4170:	9e 83       	std	Y+6, r25	; 0x06
    4172:	8d 83       	std	Y+5, r24	; 0x05
    4174:	3f c0       	rjmp	.+126    	; 0x41f4 <CLCD_voidSetPosition+0x126>
	else if (__tmp > 65535)
    4176:	6f 81       	ldd	r22, Y+7	; 0x07
    4178:	78 85       	ldd	r23, Y+8	; 0x08
    417a:	89 85       	ldd	r24, Y+9	; 0x09
    417c:	9a 85       	ldd	r25, Y+10	; 0x0a
    417e:	20 e0       	ldi	r18, 0x00	; 0
    4180:	3f ef       	ldi	r19, 0xFF	; 255
    4182:	4f e7       	ldi	r20, 0x7F	; 127
    4184:	57 e4       	ldi	r21, 0x47	; 71
    4186:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    418a:	18 16       	cp	r1, r24
    418c:	4c f5       	brge	.+82     	; 0x41e0 <CLCD_voidSetPosition+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    418e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4190:	7c 85       	ldd	r23, Y+12	; 0x0c
    4192:	8d 85       	ldd	r24, Y+13	; 0x0d
    4194:	9e 85       	ldd	r25, Y+14	; 0x0e
    4196:	20 e0       	ldi	r18, 0x00	; 0
    4198:	30 e0       	ldi	r19, 0x00	; 0
    419a:	40 e2       	ldi	r20, 0x20	; 32
    419c:	51 e4       	ldi	r21, 0x41	; 65
    419e:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    41a2:	dc 01       	movw	r26, r24
    41a4:	cb 01       	movw	r24, r22
    41a6:	bc 01       	movw	r22, r24
    41a8:	cd 01       	movw	r24, r26
    41aa:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    41ae:	dc 01       	movw	r26, r24
    41b0:	cb 01       	movw	r24, r22
    41b2:	9e 83       	std	Y+6, r25	; 0x06
    41b4:	8d 83       	std	Y+5, r24	; 0x05
    41b6:	0f c0       	rjmp	.+30     	; 0x41d6 <CLCD_voidSetPosition+0x108>
    41b8:	88 ec       	ldi	r24, 0xC8	; 200
    41ba:	90 e0       	ldi	r25, 0x00	; 0
    41bc:	9c 83       	std	Y+4, r25	; 0x04
    41be:	8b 83       	std	Y+3, r24	; 0x03
    41c0:	8b 81       	ldd	r24, Y+3	; 0x03
    41c2:	9c 81       	ldd	r25, Y+4	; 0x04
    41c4:	01 97       	sbiw	r24, 0x01	; 1
    41c6:	f1 f7       	brne	.-4      	; 0x41c4 <CLCD_voidSetPosition+0xf6>
    41c8:	9c 83       	std	Y+4, r25	; 0x04
    41ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41cc:	8d 81       	ldd	r24, Y+5	; 0x05
    41ce:	9e 81       	ldd	r25, Y+6	; 0x06
    41d0:	01 97       	sbiw	r24, 0x01	; 1
    41d2:	9e 83       	std	Y+6, r25	; 0x06
    41d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41d6:	8d 81       	ldd	r24, Y+5	; 0x05
    41d8:	9e 81       	ldd	r25, Y+6	; 0x06
    41da:	00 97       	sbiw	r24, 0x00	; 0
    41dc:	69 f7       	brne	.-38     	; 0x41b8 <CLCD_voidSetPosition+0xea>
    41de:	14 c0       	rjmp	.+40     	; 0x4208 <CLCD_voidSetPosition+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41e0:	6f 81       	ldd	r22, Y+7	; 0x07
    41e2:	78 85       	ldd	r23, Y+8	; 0x08
    41e4:	89 85       	ldd	r24, Y+9	; 0x09
    41e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    41e8:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    41ec:	dc 01       	movw	r26, r24
    41ee:	cb 01       	movw	r24, r22
    41f0:	9e 83       	std	Y+6, r25	; 0x06
    41f2:	8d 83       	std	Y+5, r24	; 0x05
    41f4:	8d 81       	ldd	r24, Y+5	; 0x05
    41f6:	9e 81       	ldd	r25, Y+6	; 0x06
    41f8:	9a 83       	std	Y+2, r25	; 0x02
    41fa:	89 83       	std	Y+1, r24	; 0x01
    41fc:	89 81       	ldd	r24, Y+1	; 0x01
    41fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4200:	01 97       	sbiw	r24, 0x01	; 1
    4202:	f1 f7       	brne	.-4      	; 0x4200 <CLCD_voidSetPosition+0x132>
    4204:	9a 83       	std	Y+2, r25	; 0x02
    4206:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);


}
    4208:	61 96       	adiw	r28, 0x11	; 17
    420a:	0f b6       	in	r0, 0x3f	; 63
    420c:	f8 94       	cli
    420e:	de bf       	out	0x3e, r29	; 62
    4210:	0f be       	out	0x3f, r0	; 63
    4212:	cd bf       	out	0x3d, r28	; 61
    4214:	cf 91       	pop	r28
    4216:	df 91       	pop	r29
    4218:	08 95       	ret

0000421a <CLCD_voidSendNumber>:
void CLCD_voidSendNumber(u64 copy_u64Number)
{
    421a:	af 92       	push	r10
    421c:	bf 92       	push	r11
    421e:	cf 92       	push	r12
    4220:	df 92       	push	r13
    4222:	ef 92       	push	r14
    4224:	ff 92       	push	r15
    4226:	0f 93       	push	r16
    4228:	1f 93       	push	r17
    422a:	df 93       	push	r29
    422c:	cf 93       	push	r28
    422e:	cd b7       	in	r28, 0x3d	; 61
    4230:	de b7       	in	r29, 0x3e	; 62
    4232:	c6 56       	subi	r28, 0x66	; 102
    4234:	d0 40       	sbci	r29, 0x00	; 0
    4236:	0f b6       	in	r0, 0x3f	; 63
    4238:	f8 94       	cli
    423a:	de bf       	out	0x3e, r29	; 62
    423c:	0f be       	out	0x3f, r0	; 63
    423e:	cd bf       	out	0x3d, r28	; 61
    4240:	29 87       	std	Y+9, r18	; 0x09
    4242:	3a 87       	std	Y+10, r19	; 0x0a
    4244:	4b 87       	std	Y+11, r20	; 0x0b
    4246:	5c 87       	std	Y+12, r21	; 0x0c
    4248:	6d 87       	std	Y+13, r22	; 0x0d
    424a:	7e 87       	std	Y+14, r23	; 0x0e
    424c:	8f 87       	std	Y+15, r24	; 0x0f
    424e:	98 8b       	std	Y+16, r25	; 0x10
	u64 Loc_ReversNumber=1;
    4250:	81 e0       	ldi	r24, 0x01	; 1
    4252:	89 83       	std	Y+1, r24	; 0x01
    4254:	1a 82       	std	Y+2, r1	; 0x02
    4256:	1b 82       	std	Y+3, r1	; 0x03
    4258:	1c 82       	std	Y+4, r1	; 0x04
    425a:	1d 82       	std	Y+5, r1	; 0x05
    425c:	1e 82       	std	Y+6, r1	; 0x06
    425e:	1f 82       	std	Y+7, r1	; 0x07
    4260:	18 86       	std	Y+8, r1	; 0x08
	if(copy_u64Number==0)
    4262:	89 85       	ldd	r24, Y+9	; 0x09
    4264:	9a 85       	ldd	r25, Y+10	; 0x0a
    4266:	89 2b       	or	r24, r25
    4268:	9b 85       	ldd	r25, Y+11	; 0x0b
    426a:	89 2b       	or	r24, r25
    426c:	9c 85       	ldd	r25, Y+12	; 0x0c
    426e:	89 2b       	or	r24, r25
    4270:	9d 85       	ldd	r25, Y+13	; 0x0d
    4272:	89 2b       	or	r24, r25
    4274:	9e 85       	ldd	r25, Y+14	; 0x0e
    4276:	89 2b       	or	r24, r25
    4278:	9f 85       	ldd	r25, Y+15	; 0x0f
    427a:	89 2b       	or	r24, r25
    427c:	98 89       	ldd	r25, Y+16	; 0x10
    427e:	89 2b       	or	r24, r25
    4280:	88 23       	and	r24, r24
    4282:	09 f0       	breq	.+2      	; 0x4286 <CLCD_voidSendNumber+0x6c>
    4284:	62 c3       	rjmp	.+1732   	; 0x494a <CLCD_voidSendNumber+0x730>
	{
		CLCD_voidSendData('0');
    4286:	80 e3       	ldi	r24, 0x30	; 48
    4288:	0e 94 12 1f 	call	0x3e24	; 0x3e24 <CLCD_voidSendData>
    428c:	04 c4       	rjmp	.+2056   	; 0x4a96 <CLCD_voidSendNumber+0x87c>
	}
	else
	{
		while(copy_u64Number>0)
		{
			Loc_ReversNumber=Loc_ReversNumber*10+(copy_u64Number%10);
    428e:	29 81       	ldd	r18, Y+1	; 0x01
    4290:	3a 81       	ldd	r19, Y+2	; 0x02
    4292:	4b 81       	ldd	r20, Y+3	; 0x03
    4294:	5c 81       	ldd	r21, Y+4	; 0x04
    4296:	6d 81       	ldd	r22, Y+5	; 0x05
    4298:	7e 81       	ldd	r23, Y+6	; 0x06
    429a:	8f 81       	ldd	r24, Y+7	; 0x07
    429c:	98 85       	ldd	r25, Y+8	; 0x08
    429e:	a2 2e       	mov	r10, r18
    42a0:	b3 2e       	mov	r11, r19
    42a2:	c4 2e       	mov	r12, r20
    42a4:	d5 2e       	mov	r13, r21
    42a6:	e6 2e       	mov	r14, r22
    42a8:	f7 2e       	mov	r15, r23
    42aa:	08 2f       	mov	r16, r24
    42ac:	19 2f       	mov	r17, r25
    42ae:	2a 2d       	mov	r18, r10
    42b0:	3b 2d       	mov	r19, r11
    42b2:	4c 2d       	mov	r20, r12
    42b4:	5d 2d       	mov	r21, r13
    42b6:	6e 2d       	mov	r22, r14
    42b8:	7f 2d       	mov	r23, r15
    42ba:	80 2f       	mov	r24, r16
    42bc:	91 2f       	mov	r25, r17
    42be:	01 e0       	ldi	r16, 0x01	; 1
    42c0:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    42c4:	29 a3       	std	Y+33, r18	; 0x21
    42c6:	3a a3       	std	Y+34, r19	; 0x22
    42c8:	4b a3       	std	Y+35, r20	; 0x23
    42ca:	5c a3       	std	Y+36, r21	; 0x24
    42cc:	6d a3       	std	Y+37, r22	; 0x25
    42ce:	7e a3       	std	Y+38, r23	; 0x26
    42d0:	8f a3       	std	Y+39, r24	; 0x27
    42d2:	98 a7       	std	Y+40, r25	; 0x28
    42d4:	29 a1       	ldd	r18, Y+33	; 0x21
    42d6:	3a a1       	ldd	r19, Y+34	; 0x22
    42d8:	4b a1       	ldd	r20, Y+35	; 0x23
    42da:	5c a1       	ldd	r21, Y+36	; 0x24
    42dc:	6d a1       	ldd	r22, Y+37	; 0x25
    42de:	7e a1       	ldd	r23, Y+38	; 0x26
    42e0:	8f a1       	ldd	r24, Y+39	; 0x27
    42e2:	98 a5       	ldd	r25, Y+40	; 0x28
    42e4:	02 e0       	ldi	r16, 0x02	; 2
    42e6:	0e 94 41 00 	call	0x82	; 0x82 <__ashldi3>
    42ea:	29 a7       	std	Y+41, r18	; 0x29
    42ec:	3a a7       	std	Y+42, r19	; 0x2a
    42ee:	4b a7       	std	Y+43, r20	; 0x2b
    42f0:	5c a7       	std	Y+44, r21	; 0x2c
    42f2:	6d a7       	std	Y+45, r22	; 0x2d
    42f4:	7e a7       	std	Y+46, r23	; 0x2e
    42f6:	8f a7       	std	Y+47, r24	; 0x2f
    42f8:	98 ab       	std	Y+48, r25	; 0x30
    42fa:	89 a1       	ldd	r24, Y+33	; 0x21
    42fc:	99 a5       	ldd	r25, Y+41	; 0x29
    42fe:	89 0f       	add	r24, r25
    4300:	89 ab       	std	Y+49, r24	; 0x31
    4302:	81 e0       	ldi	r24, 0x01	; 1
    4304:	89 af       	std	Y+57, r24	; 0x39
    4306:	99 a9       	ldd	r25, Y+49	; 0x31
    4308:	89 a1       	ldd	r24, Y+33	; 0x21
    430a:	98 17       	cp	r25, r24
    430c:	08 f0       	brcs	.+2      	; 0x4310 <CLCD_voidSendNumber+0xf6>
    430e:	19 ae       	std	Y+57, r1	; 0x39
    4310:	9a a1       	ldd	r25, Y+34	; 0x22
    4312:	8a a5       	ldd	r24, Y+42	; 0x2a
    4314:	98 0f       	add	r25, r24
    4316:	9a ab       	std	Y+50, r25	; 0x32
    4318:	91 e0       	ldi	r25, 0x01	; 1
    431a:	9a af       	std	Y+58, r25	; 0x3a
    431c:	8a a9       	ldd	r24, Y+50	; 0x32
    431e:	9a a1       	ldd	r25, Y+34	; 0x22
    4320:	89 17       	cp	r24, r25
    4322:	08 f0       	brcs	.+2      	; 0x4326 <CLCD_voidSendNumber+0x10c>
    4324:	1a ae       	std	Y+58, r1	; 0x3a
    4326:	89 ad       	ldd	r24, Y+57	; 0x39
    4328:	9a a9       	ldd	r25, Y+50	; 0x32
    432a:	89 0f       	add	r24, r25
    432c:	8b af       	std	Y+59, r24	; 0x3b
    432e:	81 e0       	ldi	r24, 0x01	; 1
    4330:	8c af       	std	Y+60, r24	; 0x3c
    4332:	9b ad       	ldd	r25, Y+59	; 0x3b
    4334:	8a a9       	ldd	r24, Y+50	; 0x32
    4336:	98 17       	cp	r25, r24
    4338:	08 f0       	brcs	.+2      	; 0x433c <CLCD_voidSendNumber+0x122>
    433a:	1c ae       	std	Y+60, r1	; 0x3c
    433c:	9a ad       	ldd	r25, Y+58	; 0x3a
    433e:	8c ad       	ldd	r24, Y+60	; 0x3c
    4340:	98 2b       	or	r25, r24
    4342:	9a af       	std	Y+58, r25	; 0x3a
    4344:	9b ad       	ldd	r25, Y+59	; 0x3b
    4346:	9a ab       	std	Y+50, r25	; 0x32
    4348:	8b a1       	ldd	r24, Y+35	; 0x23
    434a:	9b a5       	ldd	r25, Y+43	; 0x2b
    434c:	89 0f       	add	r24, r25
    434e:	8b ab       	std	Y+51, r24	; 0x33
    4350:	81 e0       	ldi	r24, 0x01	; 1
    4352:	8d af       	std	Y+61, r24	; 0x3d
    4354:	9b a9       	ldd	r25, Y+51	; 0x33
    4356:	8b a1       	ldd	r24, Y+35	; 0x23
    4358:	98 17       	cp	r25, r24
    435a:	08 f0       	brcs	.+2      	; 0x435e <CLCD_voidSendNumber+0x144>
    435c:	1d ae       	std	Y+61, r1	; 0x3d
    435e:	9a ad       	ldd	r25, Y+58	; 0x3a
    4360:	8b a9       	ldd	r24, Y+51	; 0x33
    4362:	98 0f       	add	r25, r24
    4364:	9e af       	std	Y+62, r25	; 0x3e
    4366:	91 e0       	ldi	r25, 0x01	; 1
    4368:	9f af       	std	Y+63, r25	; 0x3f
    436a:	8e ad       	ldd	r24, Y+62	; 0x3e
    436c:	9b a9       	ldd	r25, Y+51	; 0x33
    436e:	89 17       	cp	r24, r25
    4370:	08 f0       	brcs	.+2      	; 0x4374 <CLCD_voidSendNumber+0x15a>
    4372:	1f ae       	std	Y+63, r1	; 0x3f
    4374:	8d ad       	ldd	r24, Y+61	; 0x3d
    4376:	9f ad       	ldd	r25, Y+63	; 0x3f
    4378:	89 2b       	or	r24, r25
    437a:	8d af       	std	Y+61, r24	; 0x3d
    437c:	8e ad       	ldd	r24, Y+62	; 0x3e
    437e:	8b ab       	std	Y+51, r24	; 0x33
    4380:	9c a1       	ldd	r25, Y+36	; 0x24
    4382:	8c a5       	ldd	r24, Y+44	; 0x2c
    4384:	98 0f       	add	r25, r24
    4386:	9c ab       	std	Y+52, r25	; 0x34
    4388:	91 e0       	ldi	r25, 0x01	; 1
    438a:	21 96       	adiw	r28, 0x01	; 1
    438c:	9f af       	std	Y+63, r25	; 0x3f
    438e:	21 97       	sbiw	r28, 0x01	; 1
    4390:	8c a9       	ldd	r24, Y+52	; 0x34
    4392:	9c a1       	ldd	r25, Y+36	; 0x24
    4394:	89 17       	cp	r24, r25
    4396:	18 f0       	brcs	.+6      	; 0x439e <CLCD_voidSendNumber+0x184>
    4398:	21 96       	adiw	r28, 0x01	; 1
    439a:	1f ae       	std	Y+63, r1	; 0x3f
    439c:	21 97       	sbiw	r28, 0x01	; 1
    439e:	8d ad       	ldd	r24, Y+61	; 0x3d
    43a0:	9c a9       	ldd	r25, Y+52	; 0x34
    43a2:	89 0f       	add	r24, r25
    43a4:	22 96       	adiw	r28, 0x02	; 2
    43a6:	8f af       	std	Y+63, r24	; 0x3f
    43a8:	22 97       	sbiw	r28, 0x02	; 2
    43aa:	81 e0       	ldi	r24, 0x01	; 1
    43ac:	23 96       	adiw	r28, 0x03	; 3
    43ae:	8f af       	std	Y+63, r24	; 0x3f
    43b0:	23 97       	sbiw	r28, 0x03	; 3
    43b2:	22 96       	adiw	r28, 0x02	; 2
    43b4:	9f ad       	ldd	r25, Y+63	; 0x3f
    43b6:	22 97       	sbiw	r28, 0x02	; 2
    43b8:	8c a9       	ldd	r24, Y+52	; 0x34
    43ba:	98 17       	cp	r25, r24
    43bc:	18 f0       	brcs	.+6      	; 0x43c4 <CLCD_voidSendNumber+0x1aa>
    43be:	23 96       	adiw	r28, 0x03	; 3
    43c0:	1f ae       	std	Y+63, r1	; 0x3f
    43c2:	23 97       	sbiw	r28, 0x03	; 3
    43c4:	21 96       	adiw	r28, 0x01	; 1
    43c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    43c8:	21 97       	sbiw	r28, 0x01	; 1
    43ca:	23 96       	adiw	r28, 0x03	; 3
    43cc:	8f ad       	ldd	r24, Y+63	; 0x3f
    43ce:	23 97       	sbiw	r28, 0x03	; 3
    43d0:	98 2b       	or	r25, r24
    43d2:	21 96       	adiw	r28, 0x01	; 1
    43d4:	9f af       	std	Y+63, r25	; 0x3f
    43d6:	21 97       	sbiw	r28, 0x01	; 1
    43d8:	22 96       	adiw	r28, 0x02	; 2
    43da:	9f ad       	ldd	r25, Y+63	; 0x3f
    43dc:	22 97       	sbiw	r28, 0x02	; 2
    43de:	9c ab       	std	Y+52, r25	; 0x34
    43e0:	8d a1       	ldd	r24, Y+37	; 0x25
    43e2:	9d a5       	ldd	r25, Y+45	; 0x2d
    43e4:	89 0f       	add	r24, r25
    43e6:	8d ab       	std	Y+53, r24	; 0x35
    43e8:	81 e0       	ldi	r24, 0x01	; 1
    43ea:	24 96       	adiw	r28, 0x04	; 4
    43ec:	8f af       	std	Y+63, r24	; 0x3f
    43ee:	24 97       	sbiw	r28, 0x04	; 4
    43f0:	9d a9       	ldd	r25, Y+53	; 0x35
    43f2:	8d a1       	ldd	r24, Y+37	; 0x25
    43f4:	98 17       	cp	r25, r24
    43f6:	18 f0       	brcs	.+6      	; 0x43fe <CLCD_voidSendNumber+0x1e4>
    43f8:	24 96       	adiw	r28, 0x04	; 4
    43fa:	1f ae       	std	Y+63, r1	; 0x3f
    43fc:	24 97       	sbiw	r28, 0x04	; 4
    43fe:	21 96       	adiw	r28, 0x01	; 1
    4400:	9f ad       	ldd	r25, Y+63	; 0x3f
    4402:	21 97       	sbiw	r28, 0x01	; 1
    4404:	8d a9       	ldd	r24, Y+53	; 0x35
    4406:	98 0f       	add	r25, r24
    4408:	25 96       	adiw	r28, 0x05	; 5
    440a:	9f af       	std	Y+63, r25	; 0x3f
    440c:	25 97       	sbiw	r28, 0x05	; 5
    440e:	91 e0       	ldi	r25, 0x01	; 1
    4410:	26 96       	adiw	r28, 0x06	; 6
    4412:	9f af       	std	Y+63, r25	; 0x3f
    4414:	26 97       	sbiw	r28, 0x06	; 6
    4416:	25 96       	adiw	r28, 0x05	; 5
    4418:	8f ad       	ldd	r24, Y+63	; 0x3f
    441a:	25 97       	sbiw	r28, 0x05	; 5
    441c:	9d a9       	ldd	r25, Y+53	; 0x35
    441e:	89 17       	cp	r24, r25
    4420:	18 f0       	brcs	.+6      	; 0x4428 <CLCD_voidSendNumber+0x20e>
    4422:	26 96       	adiw	r28, 0x06	; 6
    4424:	1f ae       	std	Y+63, r1	; 0x3f
    4426:	26 97       	sbiw	r28, 0x06	; 6
    4428:	24 96       	adiw	r28, 0x04	; 4
    442a:	8f ad       	ldd	r24, Y+63	; 0x3f
    442c:	24 97       	sbiw	r28, 0x04	; 4
    442e:	26 96       	adiw	r28, 0x06	; 6
    4430:	9f ad       	ldd	r25, Y+63	; 0x3f
    4432:	26 97       	sbiw	r28, 0x06	; 6
    4434:	89 2b       	or	r24, r25
    4436:	24 96       	adiw	r28, 0x04	; 4
    4438:	8f af       	std	Y+63, r24	; 0x3f
    443a:	24 97       	sbiw	r28, 0x04	; 4
    443c:	25 96       	adiw	r28, 0x05	; 5
    443e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4440:	25 97       	sbiw	r28, 0x05	; 5
    4442:	8d ab       	std	Y+53, r24	; 0x35
    4444:	9e a1       	ldd	r25, Y+38	; 0x26
    4446:	8e a5       	ldd	r24, Y+46	; 0x2e
    4448:	98 0f       	add	r25, r24
    444a:	9e ab       	std	Y+54, r25	; 0x36
    444c:	91 e0       	ldi	r25, 0x01	; 1
    444e:	27 96       	adiw	r28, 0x07	; 7
    4450:	9f af       	std	Y+63, r25	; 0x3f
    4452:	27 97       	sbiw	r28, 0x07	; 7
    4454:	8e a9       	ldd	r24, Y+54	; 0x36
    4456:	9e a1       	ldd	r25, Y+38	; 0x26
    4458:	89 17       	cp	r24, r25
    445a:	18 f0       	brcs	.+6      	; 0x4462 <CLCD_voidSendNumber+0x248>
    445c:	27 96       	adiw	r28, 0x07	; 7
    445e:	1f ae       	std	Y+63, r1	; 0x3f
    4460:	27 97       	sbiw	r28, 0x07	; 7
    4462:	24 96       	adiw	r28, 0x04	; 4
    4464:	8f ad       	ldd	r24, Y+63	; 0x3f
    4466:	24 97       	sbiw	r28, 0x04	; 4
    4468:	9e a9       	ldd	r25, Y+54	; 0x36
    446a:	89 0f       	add	r24, r25
    446c:	28 96       	adiw	r28, 0x08	; 8
    446e:	8f af       	std	Y+63, r24	; 0x3f
    4470:	28 97       	sbiw	r28, 0x08	; 8
    4472:	81 e0       	ldi	r24, 0x01	; 1
    4474:	29 96       	adiw	r28, 0x09	; 9
    4476:	8f af       	std	Y+63, r24	; 0x3f
    4478:	29 97       	sbiw	r28, 0x09	; 9
    447a:	28 96       	adiw	r28, 0x08	; 8
    447c:	9f ad       	ldd	r25, Y+63	; 0x3f
    447e:	28 97       	sbiw	r28, 0x08	; 8
    4480:	8e a9       	ldd	r24, Y+54	; 0x36
    4482:	98 17       	cp	r25, r24
    4484:	18 f0       	brcs	.+6      	; 0x448c <CLCD_voidSendNumber+0x272>
    4486:	29 96       	adiw	r28, 0x09	; 9
    4488:	1f ae       	std	Y+63, r1	; 0x3f
    448a:	29 97       	sbiw	r28, 0x09	; 9
    448c:	27 96       	adiw	r28, 0x07	; 7
    448e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4490:	27 97       	sbiw	r28, 0x07	; 7
    4492:	29 96       	adiw	r28, 0x09	; 9
    4494:	8f ad       	ldd	r24, Y+63	; 0x3f
    4496:	29 97       	sbiw	r28, 0x09	; 9
    4498:	98 2b       	or	r25, r24
    449a:	27 96       	adiw	r28, 0x07	; 7
    449c:	9f af       	std	Y+63, r25	; 0x3f
    449e:	27 97       	sbiw	r28, 0x07	; 7
    44a0:	28 96       	adiw	r28, 0x08	; 8
    44a2:	9f ad       	ldd	r25, Y+63	; 0x3f
    44a4:	28 97       	sbiw	r28, 0x08	; 8
    44a6:	9e ab       	std	Y+54, r25	; 0x36
    44a8:	8f a1       	ldd	r24, Y+39	; 0x27
    44aa:	9f a5       	ldd	r25, Y+47	; 0x2f
    44ac:	89 0f       	add	r24, r25
    44ae:	8f ab       	std	Y+55, r24	; 0x37
    44b0:	81 e0       	ldi	r24, 0x01	; 1
    44b2:	2a 96       	adiw	r28, 0x0a	; 10
    44b4:	8f af       	std	Y+63, r24	; 0x3f
    44b6:	2a 97       	sbiw	r28, 0x0a	; 10
    44b8:	9f a9       	ldd	r25, Y+55	; 0x37
    44ba:	8f a1       	ldd	r24, Y+39	; 0x27
    44bc:	98 17       	cp	r25, r24
    44be:	18 f0       	brcs	.+6      	; 0x44c6 <CLCD_voidSendNumber+0x2ac>
    44c0:	2a 96       	adiw	r28, 0x0a	; 10
    44c2:	1f ae       	std	Y+63, r1	; 0x3f
    44c4:	2a 97       	sbiw	r28, 0x0a	; 10
    44c6:	27 96       	adiw	r28, 0x07	; 7
    44c8:	9f ad       	ldd	r25, Y+63	; 0x3f
    44ca:	27 97       	sbiw	r28, 0x07	; 7
    44cc:	8f a9       	ldd	r24, Y+55	; 0x37
    44ce:	98 0f       	add	r25, r24
    44d0:	2b 96       	adiw	r28, 0x0b	; 11
    44d2:	9f af       	std	Y+63, r25	; 0x3f
    44d4:	2b 97       	sbiw	r28, 0x0b	; 11
    44d6:	91 e0       	ldi	r25, 0x01	; 1
    44d8:	2c 96       	adiw	r28, 0x0c	; 12
    44da:	9f af       	std	Y+63, r25	; 0x3f
    44dc:	2c 97       	sbiw	r28, 0x0c	; 12
    44de:	2b 96       	adiw	r28, 0x0b	; 11
    44e0:	8f ad       	ldd	r24, Y+63	; 0x3f
    44e2:	2b 97       	sbiw	r28, 0x0b	; 11
    44e4:	9f a9       	ldd	r25, Y+55	; 0x37
    44e6:	89 17       	cp	r24, r25
    44e8:	18 f0       	brcs	.+6      	; 0x44f0 <CLCD_voidSendNumber+0x2d6>
    44ea:	2c 96       	adiw	r28, 0x0c	; 12
    44ec:	1f ae       	std	Y+63, r1	; 0x3f
    44ee:	2c 97       	sbiw	r28, 0x0c	; 12
    44f0:	2a 96       	adiw	r28, 0x0a	; 10
    44f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    44f4:	2a 97       	sbiw	r28, 0x0a	; 10
    44f6:	2c 96       	adiw	r28, 0x0c	; 12
    44f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    44fa:	2c 97       	sbiw	r28, 0x0c	; 12
    44fc:	89 2b       	or	r24, r25
    44fe:	2a 96       	adiw	r28, 0x0a	; 10
    4500:	8f af       	std	Y+63, r24	; 0x3f
    4502:	2a 97       	sbiw	r28, 0x0a	; 10
    4504:	2b 96       	adiw	r28, 0x0b	; 11
    4506:	8f ad       	ldd	r24, Y+63	; 0x3f
    4508:	2b 97       	sbiw	r28, 0x0b	; 11
    450a:	8f ab       	std	Y+55, r24	; 0x37
    450c:	98 a5       	ldd	r25, Y+40	; 0x28
    450e:	88 a9       	ldd	r24, Y+48	; 0x30
    4510:	98 0f       	add	r25, r24
    4512:	98 af       	std	Y+56, r25	; 0x38
    4514:	2a 96       	adiw	r28, 0x0a	; 10
    4516:	8f ad       	ldd	r24, Y+63	; 0x3f
    4518:	2a 97       	sbiw	r28, 0x0a	; 10
    451a:	98 ad       	ldd	r25, Y+56	; 0x38
    451c:	89 0f       	add	r24, r25
    451e:	88 af       	std	Y+56, r24	; 0x38
    4520:	89 a9       	ldd	r24, Y+49	; 0x31
    4522:	89 8f       	std	Y+25, r24	; 0x19
    4524:	9a a9       	ldd	r25, Y+50	; 0x32
    4526:	9a 8f       	std	Y+26, r25	; 0x1a
    4528:	8b a9       	ldd	r24, Y+51	; 0x33
    452a:	8b 8f       	std	Y+27, r24	; 0x1b
    452c:	9c a9       	ldd	r25, Y+52	; 0x34
    452e:	9c 8f       	std	Y+28, r25	; 0x1c
    4530:	8d a9       	ldd	r24, Y+53	; 0x35
    4532:	8d 8f       	std	Y+29, r24	; 0x1d
    4534:	9e a9       	ldd	r25, Y+54	; 0x36
    4536:	9e 8f       	std	Y+30, r25	; 0x1e
    4538:	8f a9       	ldd	r24, Y+55	; 0x37
    453a:	8f 8f       	std	Y+31, r24	; 0x1f
    453c:	98 ad       	ldd	r25, Y+56	; 0x38
    453e:	98 a3       	std	Y+32, r25	; 0x20
    4540:	a9 84       	ldd	r10, Y+9	; 0x09
    4542:	ba 84       	ldd	r11, Y+10	; 0x0a
    4544:	cb 84       	ldd	r12, Y+11	; 0x0b
    4546:	dc 84       	ldd	r13, Y+12	; 0x0c
    4548:	ed 84       	ldd	r14, Y+13	; 0x0d
    454a:	fe 84       	ldd	r15, Y+14	; 0x0e
    454c:	0f 85       	ldd	r16, Y+15	; 0x0f
    454e:	18 89       	ldd	r17, Y+16	; 0x10
    4550:	2a 2d       	mov	r18, r10
    4552:	3b 2d       	mov	r19, r11
    4554:	4c 2d       	mov	r20, r12
    4556:	5d 2d       	mov	r21, r13
    4558:	6e 2d       	mov	r22, r14
    455a:	7f 2d       	mov	r23, r15
    455c:	80 2f       	mov	r24, r16
    455e:	91 2f       	mov	r25, r17
    4560:	0f 2e       	mov	r0, r31
    4562:	fa e0       	ldi	r31, 0x0A	; 10
    4564:	af 2e       	mov	r10, r31
    4566:	f0 2d       	mov	r31, r0
    4568:	bb 24       	eor	r11, r11
    456a:	cc 24       	eor	r12, r12
    456c:	dd 24       	eor	r13, r13
    456e:	ee 24       	eor	r14, r14
    4570:	ff 24       	eor	r15, r15
    4572:	00 e0       	ldi	r16, 0x00	; 0
    4574:	10 e0       	ldi	r17, 0x00	; 0
    4576:	0e 94 09 08 	call	0x1012	; 0x1012 <__umoddi3>
    457a:	a2 2e       	mov	r10, r18
    457c:	b3 2e       	mov	r11, r19
    457e:	c4 2e       	mov	r12, r20
    4580:	d5 2e       	mov	r13, r21
    4582:	e6 2e       	mov	r14, r22
    4584:	f7 2e       	mov	r15, r23
    4586:	08 2f       	mov	r16, r24
    4588:	19 2f       	mov	r17, r25
    458a:	a9 8a       	std	Y+17, r10	; 0x11
    458c:	ba 8a       	std	Y+18, r11	; 0x12
    458e:	cb 8a       	std	Y+19, r12	; 0x13
    4590:	dc 8a       	std	Y+20, r13	; 0x14
    4592:	ed 8a       	std	Y+21, r14	; 0x15
    4594:	fe 8a       	std	Y+22, r15	; 0x16
    4596:	0f 8b       	std	Y+23, r16	; 0x17
    4598:	18 8f       	std	Y+24, r17	; 0x18
    459a:	89 8d       	ldd	r24, Y+25	; 0x19
    459c:	99 89       	ldd	r25, Y+17	; 0x11
    459e:	89 0f       	add	r24, r25
    45a0:	2d 96       	adiw	r28, 0x0d	; 13
    45a2:	8f af       	std	Y+63, r24	; 0x3f
    45a4:	2d 97       	sbiw	r28, 0x0d	; 13
    45a6:	81 e0       	ldi	r24, 0x01	; 1
    45a8:	65 96       	adiw	r28, 0x15	; 21
    45aa:	8f af       	std	Y+63, r24	; 0x3f
    45ac:	65 97       	sbiw	r28, 0x15	; 21
    45ae:	2d 96       	adiw	r28, 0x0d	; 13
    45b0:	9f ad       	ldd	r25, Y+63	; 0x3f
    45b2:	2d 97       	sbiw	r28, 0x0d	; 13
    45b4:	89 8d       	ldd	r24, Y+25	; 0x19
    45b6:	98 17       	cp	r25, r24
    45b8:	18 f0       	brcs	.+6      	; 0x45c0 <CLCD_voidSendNumber+0x3a6>
    45ba:	65 96       	adiw	r28, 0x15	; 21
    45bc:	1f ae       	std	Y+63, r1	; 0x3f
    45be:	65 97       	sbiw	r28, 0x15	; 21
    45c0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    45c2:	8a 89       	ldd	r24, Y+18	; 0x12
    45c4:	98 0f       	add	r25, r24
    45c6:	2e 96       	adiw	r28, 0x0e	; 14
    45c8:	9f af       	std	Y+63, r25	; 0x3f
    45ca:	2e 97       	sbiw	r28, 0x0e	; 14
    45cc:	91 e0       	ldi	r25, 0x01	; 1
    45ce:	66 96       	adiw	r28, 0x16	; 22
    45d0:	9f af       	std	Y+63, r25	; 0x3f
    45d2:	66 97       	sbiw	r28, 0x16	; 22
    45d4:	2e 96       	adiw	r28, 0x0e	; 14
    45d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    45d8:	2e 97       	sbiw	r28, 0x0e	; 14
    45da:	9a 8d       	ldd	r25, Y+26	; 0x1a
    45dc:	89 17       	cp	r24, r25
    45de:	18 f0       	brcs	.+6      	; 0x45e6 <CLCD_voidSendNumber+0x3cc>
    45e0:	66 96       	adiw	r28, 0x16	; 22
    45e2:	1f ae       	std	Y+63, r1	; 0x3f
    45e4:	66 97       	sbiw	r28, 0x16	; 22
    45e6:	65 96       	adiw	r28, 0x15	; 21
    45e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    45ea:	65 97       	sbiw	r28, 0x15	; 21
    45ec:	2e 96       	adiw	r28, 0x0e	; 14
    45ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    45f0:	2e 97       	sbiw	r28, 0x0e	; 14
    45f2:	89 0f       	add	r24, r25
    45f4:	67 96       	adiw	r28, 0x17	; 23
    45f6:	8f af       	std	Y+63, r24	; 0x3f
    45f8:	67 97       	sbiw	r28, 0x17	; 23
    45fa:	81 e0       	ldi	r24, 0x01	; 1
    45fc:	68 96       	adiw	r28, 0x18	; 24
    45fe:	8f af       	std	Y+63, r24	; 0x3f
    4600:	68 97       	sbiw	r28, 0x18	; 24
    4602:	67 96       	adiw	r28, 0x17	; 23
    4604:	9f ad       	ldd	r25, Y+63	; 0x3f
    4606:	67 97       	sbiw	r28, 0x17	; 23
    4608:	2e 96       	adiw	r28, 0x0e	; 14
    460a:	8f ad       	ldd	r24, Y+63	; 0x3f
    460c:	2e 97       	sbiw	r28, 0x0e	; 14
    460e:	98 17       	cp	r25, r24
    4610:	18 f0       	brcs	.+6      	; 0x4618 <CLCD_voidSendNumber+0x3fe>
    4612:	68 96       	adiw	r28, 0x18	; 24
    4614:	1f ae       	std	Y+63, r1	; 0x3f
    4616:	68 97       	sbiw	r28, 0x18	; 24
    4618:	66 96       	adiw	r28, 0x16	; 22
    461a:	9f ad       	ldd	r25, Y+63	; 0x3f
    461c:	66 97       	sbiw	r28, 0x16	; 22
    461e:	68 96       	adiw	r28, 0x18	; 24
    4620:	8f ad       	ldd	r24, Y+63	; 0x3f
    4622:	68 97       	sbiw	r28, 0x18	; 24
    4624:	98 2b       	or	r25, r24
    4626:	66 96       	adiw	r28, 0x16	; 22
    4628:	9f af       	std	Y+63, r25	; 0x3f
    462a:	66 97       	sbiw	r28, 0x16	; 22
    462c:	67 96       	adiw	r28, 0x17	; 23
    462e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4630:	67 97       	sbiw	r28, 0x17	; 23
    4632:	2e 96       	adiw	r28, 0x0e	; 14
    4634:	9f af       	std	Y+63, r25	; 0x3f
    4636:	2e 97       	sbiw	r28, 0x0e	; 14
    4638:	8b 8d       	ldd	r24, Y+27	; 0x1b
    463a:	9b 89       	ldd	r25, Y+19	; 0x13
    463c:	89 0f       	add	r24, r25
    463e:	2f 96       	adiw	r28, 0x0f	; 15
    4640:	8f af       	std	Y+63, r24	; 0x3f
    4642:	2f 97       	sbiw	r28, 0x0f	; 15
    4644:	81 e0       	ldi	r24, 0x01	; 1
    4646:	69 96       	adiw	r28, 0x19	; 25
    4648:	8f af       	std	Y+63, r24	; 0x3f
    464a:	69 97       	sbiw	r28, 0x19	; 25
    464c:	2f 96       	adiw	r28, 0x0f	; 15
    464e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4650:	2f 97       	sbiw	r28, 0x0f	; 15
    4652:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4654:	98 17       	cp	r25, r24
    4656:	18 f0       	brcs	.+6      	; 0x465e <CLCD_voidSendNumber+0x444>
    4658:	69 96       	adiw	r28, 0x19	; 25
    465a:	1f ae       	std	Y+63, r1	; 0x3f
    465c:	69 97       	sbiw	r28, 0x19	; 25
    465e:	66 96       	adiw	r28, 0x16	; 22
    4660:	9f ad       	ldd	r25, Y+63	; 0x3f
    4662:	66 97       	sbiw	r28, 0x16	; 22
    4664:	2f 96       	adiw	r28, 0x0f	; 15
    4666:	8f ad       	ldd	r24, Y+63	; 0x3f
    4668:	2f 97       	sbiw	r28, 0x0f	; 15
    466a:	98 0f       	add	r25, r24
    466c:	6a 96       	adiw	r28, 0x1a	; 26
    466e:	9f af       	std	Y+63, r25	; 0x3f
    4670:	6a 97       	sbiw	r28, 0x1a	; 26
    4672:	91 e0       	ldi	r25, 0x01	; 1
    4674:	6b 96       	adiw	r28, 0x1b	; 27
    4676:	9f af       	std	Y+63, r25	; 0x3f
    4678:	6b 97       	sbiw	r28, 0x1b	; 27
    467a:	6a 96       	adiw	r28, 0x1a	; 26
    467c:	8f ad       	ldd	r24, Y+63	; 0x3f
    467e:	6a 97       	sbiw	r28, 0x1a	; 26
    4680:	2f 96       	adiw	r28, 0x0f	; 15
    4682:	9f ad       	ldd	r25, Y+63	; 0x3f
    4684:	2f 97       	sbiw	r28, 0x0f	; 15
    4686:	89 17       	cp	r24, r25
    4688:	18 f0       	brcs	.+6      	; 0x4690 <CLCD_voidSendNumber+0x476>
    468a:	6b 96       	adiw	r28, 0x1b	; 27
    468c:	1f ae       	std	Y+63, r1	; 0x3f
    468e:	6b 97       	sbiw	r28, 0x1b	; 27
    4690:	69 96       	adiw	r28, 0x19	; 25
    4692:	8f ad       	ldd	r24, Y+63	; 0x3f
    4694:	69 97       	sbiw	r28, 0x19	; 25
    4696:	6b 96       	adiw	r28, 0x1b	; 27
    4698:	9f ad       	ldd	r25, Y+63	; 0x3f
    469a:	6b 97       	sbiw	r28, 0x1b	; 27
    469c:	89 2b       	or	r24, r25
    469e:	69 96       	adiw	r28, 0x19	; 25
    46a0:	8f af       	std	Y+63, r24	; 0x3f
    46a2:	69 97       	sbiw	r28, 0x19	; 25
    46a4:	6a 96       	adiw	r28, 0x1a	; 26
    46a6:	8f ad       	ldd	r24, Y+63	; 0x3f
    46a8:	6a 97       	sbiw	r28, 0x1a	; 26
    46aa:	2f 96       	adiw	r28, 0x0f	; 15
    46ac:	8f af       	std	Y+63, r24	; 0x3f
    46ae:	2f 97       	sbiw	r28, 0x0f	; 15
    46b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    46b2:	8c 89       	ldd	r24, Y+20	; 0x14
    46b4:	98 0f       	add	r25, r24
    46b6:	60 96       	adiw	r28, 0x10	; 16
    46b8:	9f af       	std	Y+63, r25	; 0x3f
    46ba:	60 97       	sbiw	r28, 0x10	; 16
    46bc:	91 e0       	ldi	r25, 0x01	; 1
    46be:	6c 96       	adiw	r28, 0x1c	; 28
    46c0:	9f af       	std	Y+63, r25	; 0x3f
    46c2:	6c 97       	sbiw	r28, 0x1c	; 28
    46c4:	60 96       	adiw	r28, 0x10	; 16
    46c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    46c8:	60 97       	sbiw	r28, 0x10	; 16
    46ca:	9c 8d       	ldd	r25, Y+28	; 0x1c
    46cc:	89 17       	cp	r24, r25
    46ce:	18 f0       	brcs	.+6      	; 0x46d6 <CLCD_voidSendNumber+0x4bc>
    46d0:	6c 96       	adiw	r28, 0x1c	; 28
    46d2:	1f ae       	std	Y+63, r1	; 0x3f
    46d4:	6c 97       	sbiw	r28, 0x1c	; 28
    46d6:	69 96       	adiw	r28, 0x19	; 25
    46d8:	8f ad       	ldd	r24, Y+63	; 0x3f
    46da:	69 97       	sbiw	r28, 0x19	; 25
    46dc:	60 96       	adiw	r28, 0x10	; 16
    46de:	9f ad       	ldd	r25, Y+63	; 0x3f
    46e0:	60 97       	sbiw	r28, 0x10	; 16
    46e2:	89 0f       	add	r24, r25
    46e4:	6d 96       	adiw	r28, 0x1d	; 29
    46e6:	8f af       	std	Y+63, r24	; 0x3f
    46e8:	6d 97       	sbiw	r28, 0x1d	; 29
    46ea:	81 e0       	ldi	r24, 0x01	; 1
    46ec:	6e 96       	adiw	r28, 0x1e	; 30
    46ee:	8f af       	std	Y+63, r24	; 0x3f
    46f0:	6e 97       	sbiw	r28, 0x1e	; 30
    46f2:	6d 96       	adiw	r28, 0x1d	; 29
    46f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    46f6:	6d 97       	sbiw	r28, 0x1d	; 29
    46f8:	60 96       	adiw	r28, 0x10	; 16
    46fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    46fc:	60 97       	sbiw	r28, 0x10	; 16
    46fe:	98 17       	cp	r25, r24
    4700:	18 f0       	brcs	.+6      	; 0x4708 <CLCD_voidSendNumber+0x4ee>
    4702:	6e 96       	adiw	r28, 0x1e	; 30
    4704:	1f ae       	std	Y+63, r1	; 0x3f
    4706:	6e 97       	sbiw	r28, 0x1e	; 30
    4708:	6c 96       	adiw	r28, 0x1c	; 28
    470a:	9f ad       	ldd	r25, Y+63	; 0x3f
    470c:	6c 97       	sbiw	r28, 0x1c	; 28
    470e:	6e 96       	adiw	r28, 0x1e	; 30
    4710:	8f ad       	ldd	r24, Y+63	; 0x3f
    4712:	6e 97       	sbiw	r28, 0x1e	; 30
    4714:	98 2b       	or	r25, r24
    4716:	6c 96       	adiw	r28, 0x1c	; 28
    4718:	9f af       	std	Y+63, r25	; 0x3f
    471a:	6c 97       	sbiw	r28, 0x1c	; 28
    471c:	6d 96       	adiw	r28, 0x1d	; 29
    471e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4720:	6d 97       	sbiw	r28, 0x1d	; 29
    4722:	60 96       	adiw	r28, 0x10	; 16
    4724:	9f af       	std	Y+63, r25	; 0x3f
    4726:	60 97       	sbiw	r28, 0x10	; 16
    4728:	8d 8d       	ldd	r24, Y+29	; 0x1d
    472a:	9d 89       	ldd	r25, Y+21	; 0x15
    472c:	89 0f       	add	r24, r25
    472e:	61 96       	adiw	r28, 0x11	; 17
    4730:	8f af       	std	Y+63, r24	; 0x3f
    4732:	61 97       	sbiw	r28, 0x11	; 17
    4734:	81 e0       	ldi	r24, 0x01	; 1
    4736:	6f 96       	adiw	r28, 0x1f	; 31
    4738:	8f af       	std	Y+63, r24	; 0x3f
    473a:	6f 97       	sbiw	r28, 0x1f	; 31
    473c:	61 96       	adiw	r28, 0x11	; 17
    473e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4740:	61 97       	sbiw	r28, 0x11	; 17
    4742:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4744:	98 17       	cp	r25, r24
    4746:	18 f0       	brcs	.+6      	; 0x474e <CLCD_voidSendNumber+0x534>
    4748:	6f 96       	adiw	r28, 0x1f	; 31
    474a:	1f ae       	std	Y+63, r1	; 0x3f
    474c:	6f 97       	sbiw	r28, 0x1f	; 31
    474e:	6c 96       	adiw	r28, 0x1c	; 28
    4750:	9f ad       	ldd	r25, Y+63	; 0x3f
    4752:	6c 97       	sbiw	r28, 0x1c	; 28
    4754:	61 96       	adiw	r28, 0x11	; 17
    4756:	8f ad       	ldd	r24, Y+63	; 0x3f
    4758:	61 97       	sbiw	r28, 0x11	; 17
    475a:	98 0f       	add	r25, r24
    475c:	a0 96       	adiw	r28, 0x20	; 32
    475e:	9f af       	std	Y+63, r25	; 0x3f
    4760:	a0 97       	sbiw	r28, 0x20	; 32
    4762:	91 e0       	ldi	r25, 0x01	; 1
    4764:	a1 96       	adiw	r28, 0x21	; 33
    4766:	9f af       	std	Y+63, r25	; 0x3f
    4768:	a1 97       	sbiw	r28, 0x21	; 33
    476a:	a0 96       	adiw	r28, 0x20	; 32
    476c:	8f ad       	ldd	r24, Y+63	; 0x3f
    476e:	a0 97       	sbiw	r28, 0x20	; 32
    4770:	61 96       	adiw	r28, 0x11	; 17
    4772:	9f ad       	ldd	r25, Y+63	; 0x3f
    4774:	61 97       	sbiw	r28, 0x11	; 17
    4776:	89 17       	cp	r24, r25
    4778:	18 f0       	brcs	.+6      	; 0x4780 <CLCD_voidSendNumber+0x566>
    477a:	a1 96       	adiw	r28, 0x21	; 33
    477c:	1f ae       	std	Y+63, r1	; 0x3f
    477e:	a1 97       	sbiw	r28, 0x21	; 33
    4780:	6f 96       	adiw	r28, 0x1f	; 31
    4782:	8f ad       	ldd	r24, Y+63	; 0x3f
    4784:	6f 97       	sbiw	r28, 0x1f	; 31
    4786:	a1 96       	adiw	r28, 0x21	; 33
    4788:	9f ad       	ldd	r25, Y+63	; 0x3f
    478a:	a1 97       	sbiw	r28, 0x21	; 33
    478c:	89 2b       	or	r24, r25
    478e:	6f 96       	adiw	r28, 0x1f	; 31
    4790:	8f af       	std	Y+63, r24	; 0x3f
    4792:	6f 97       	sbiw	r28, 0x1f	; 31
    4794:	a0 96       	adiw	r28, 0x20	; 32
    4796:	8f ad       	ldd	r24, Y+63	; 0x3f
    4798:	a0 97       	sbiw	r28, 0x20	; 32
    479a:	61 96       	adiw	r28, 0x11	; 17
    479c:	8f af       	std	Y+63, r24	; 0x3f
    479e:	61 97       	sbiw	r28, 0x11	; 17
    47a0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    47a2:	8e 89       	ldd	r24, Y+22	; 0x16
    47a4:	98 0f       	add	r25, r24
    47a6:	62 96       	adiw	r28, 0x12	; 18
    47a8:	9f af       	std	Y+63, r25	; 0x3f
    47aa:	62 97       	sbiw	r28, 0x12	; 18
    47ac:	91 e0       	ldi	r25, 0x01	; 1
    47ae:	a2 96       	adiw	r28, 0x22	; 34
    47b0:	9f af       	std	Y+63, r25	; 0x3f
    47b2:	a2 97       	sbiw	r28, 0x22	; 34
    47b4:	62 96       	adiw	r28, 0x12	; 18
    47b6:	8f ad       	ldd	r24, Y+63	; 0x3f
    47b8:	62 97       	sbiw	r28, 0x12	; 18
    47ba:	9e 8d       	ldd	r25, Y+30	; 0x1e
    47bc:	89 17       	cp	r24, r25
    47be:	18 f0       	brcs	.+6      	; 0x47c6 <CLCD_voidSendNumber+0x5ac>
    47c0:	a2 96       	adiw	r28, 0x22	; 34
    47c2:	1f ae       	std	Y+63, r1	; 0x3f
    47c4:	a2 97       	sbiw	r28, 0x22	; 34
    47c6:	6f 96       	adiw	r28, 0x1f	; 31
    47c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    47ca:	6f 97       	sbiw	r28, 0x1f	; 31
    47cc:	62 96       	adiw	r28, 0x12	; 18
    47ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    47d0:	62 97       	sbiw	r28, 0x12	; 18
    47d2:	89 0f       	add	r24, r25
    47d4:	a3 96       	adiw	r28, 0x23	; 35
    47d6:	8f af       	std	Y+63, r24	; 0x3f
    47d8:	a3 97       	sbiw	r28, 0x23	; 35
    47da:	81 e0       	ldi	r24, 0x01	; 1
    47dc:	a4 96       	adiw	r28, 0x24	; 36
    47de:	8f af       	std	Y+63, r24	; 0x3f
    47e0:	a4 97       	sbiw	r28, 0x24	; 36
    47e2:	a3 96       	adiw	r28, 0x23	; 35
    47e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    47e6:	a3 97       	sbiw	r28, 0x23	; 35
    47e8:	62 96       	adiw	r28, 0x12	; 18
    47ea:	8f ad       	ldd	r24, Y+63	; 0x3f
    47ec:	62 97       	sbiw	r28, 0x12	; 18
    47ee:	98 17       	cp	r25, r24
    47f0:	18 f0       	brcs	.+6      	; 0x47f8 <CLCD_voidSendNumber+0x5de>
    47f2:	a4 96       	adiw	r28, 0x24	; 36
    47f4:	1f ae       	std	Y+63, r1	; 0x3f
    47f6:	a4 97       	sbiw	r28, 0x24	; 36
    47f8:	a2 96       	adiw	r28, 0x22	; 34
    47fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    47fc:	a2 97       	sbiw	r28, 0x22	; 34
    47fe:	a4 96       	adiw	r28, 0x24	; 36
    4800:	8f ad       	ldd	r24, Y+63	; 0x3f
    4802:	a4 97       	sbiw	r28, 0x24	; 36
    4804:	98 2b       	or	r25, r24
    4806:	a2 96       	adiw	r28, 0x22	; 34
    4808:	9f af       	std	Y+63, r25	; 0x3f
    480a:	a2 97       	sbiw	r28, 0x22	; 34
    480c:	a3 96       	adiw	r28, 0x23	; 35
    480e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4810:	a3 97       	sbiw	r28, 0x23	; 35
    4812:	62 96       	adiw	r28, 0x12	; 18
    4814:	9f af       	std	Y+63, r25	; 0x3f
    4816:	62 97       	sbiw	r28, 0x12	; 18
    4818:	8f 8d       	ldd	r24, Y+31	; 0x1f
    481a:	9f 89       	ldd	r25, Y+23	; 0x17
    481c:	89 0f       	add	r24, r25
    481e:	63 96       	adiw	r28, 0x13	; 19
    4820:	8f af       	std	Y+63, r24	; 0x3f
    4822:	63 97       	sbiw	r28, 0x13	; 19
    4824:	81 e0       	ldi	r24, 0x01	; 1
    4826:	a5 96       	adiw	r28, 0x25	; 37
    4828:	8f af       	std	Y+63, r24	; 0x3f
    482a:	a5 97       	sbiw	r28, 0x25	; 37
    482c:	63 96       	adiw	r28, 0x13	; 19
    482e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4830:	63 97       	sbiw	r28, 0x13	; 19
    4832:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4834:	98 17       	cp	r25, r24
    4836:	18 f0       	brcs	.+6      	; 0x483e <CLCD_voidSendNumber+0x624>
    4838:	a5 96       	adiw	r28, 0x25	; 37
    483a:	1f ae       	std	Y+63, r1	; 0x3f
    483c:	a5 97       	sbiw	r28, 0x25	; 37
    483e:	a2 96       	adiw	r28, 0x22	; 34
    4840:	9f ad       	ldd	r25, Y+63	; 0x3f
    4842:	a2 97       	sbiw	r28, 0x22	; 34
    4844:	63 96       	adiw	r28, 0x13	; 19
    4846:	8f ad       	ldd	r24, Y+63	; 0x3f
    4848:	63 97       	sbiw	r28, 0x13	; 19
    484a:	98 0f       	add	r25, r24
    484c:	a6 96       	adiw	r28, 0x26	; 38
    484e:	9f af       	std	Y+63, r25	; 0x3f
    4850:	a6 97       	sbiw	r28, 0x26	; 38
    4852:	91 e0       	ldi	r25, 0x01	; 1
    4854:	a7 96       	adiw	r28, 0x27	; 39
    4856:	9f af       	std	Y+63, r25	; 0x3f
    4858:	a7 97       	sbiw	r28, 0x27	; 39
    485a:	a6 96       	adiw	r28, 0x26	; 38
    485c:	8f ad       	ldd	r24, Y+63	; 0x3f
    485e:	a6 97       	sbiw	r28, 0x26	; 38
    4860:	63 96       	adiw	r28, 0x13	; 19
    4862:	9f ad       	ldd	r25, Y+63	; 0x3f
    4864:	63 97       	sbiw	r28, 0x13	; 19
    4866:	89 17       	cp	r24, r25
    4868:	18 f0       	brcs	.+6      	; 0x4870 <CLCD_voidSendNumber+0x656>
    486a:	a7 96       	adiw	r28, 0x27	; 39
    486c:	1f ae       	std	Y+63, r1	; 0x3f
    486e:	a7 97       	sbiw	r28, 0x27	; 39
    4870:	a5 96       	adiw	r28, 0x25	; 37
    4872:	8f ad       	ldd	r24, Y+63	; 0x3f
    4874:	a5 97       	sbiw	r28, 0x25	; 37
    4876:	a7 96       	adiw	r28, 0x27	; 39
    4878:	9f ad       	ldd	r25, Y+63	; 0x3f
    487a:	a7 97       	sbiw	r28, 0x27	; 39
    487c:	89 2b       	or	r24, r25
    487e:	a5 96       	adiw	r28, 0x25	; 37
    4880:	8f af       	std	Y+63, r24	; 0x3f
    4882:	a5 97       	sbiw	r28, 0x25	; 37
    4884:	a6 96       	adiw	r28, 0x26	; 38
    4886:	8f ad       	ldd	r24, Y+63	; 0x3f
    4888:	a6 97       	sbiw	r28, 0x26	; 38
    488a:	63 96       	adiw	r28, 0x13	; 19
    488c:	8f af       	std	Y+63, r24	; 0x3f
    488e:	63 97       	sbiw	r28, 0x13	; 19
    4890:	98 a1       	ldd	r25, Y+32	; 0x20
    4892:	88 8d       	ldd	r24, Y+24	; 0x18
    4894:	98 0f       	add	r25, r24
    4896:	64 96       	adiw	r28, 0x14	; 20
    4898:	9f af       	std	Y+63, r25	; 0x3f
    489a:	64 97       	sbiw	r28, 0x14	; 20
    489c:	a5 96       	adiw	r28, 0x25	; 37
    489e:	8f ad       	ldd	r24, Y+63	; 0x3f
    48a0:	a5 97       	sbiw	r28, 0x25	; 37
    48a2:	64 96       	adiw	r28, 0x14	; 20
    48a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    48a6:	64 97       	sbiw	r28, 0x14	; 20
    48a8:	89 0f       	add	r24, r25
    48aa:	64 96       	adiw	r28, 0x14	; 20
    48ac:	8f af       	std	Y+63, r24	; 0x3f
    48ae:	64 97       	sbiw	r28, 0x14	; 20
    48b0:	2d 96       	adiw	r28, 0x0d	; 13
    48b2:	8f ad       	ldd	r24, Y+63	; 0x3f
    48b4:	2d 97       	sbiw	r28, 0x0d	; 13
    48b6:	89 83       	std	Y+1, r24	; 0x01
    48b8:	2e 96       	adiw	r28, 0x0e	; 14
    48ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    48bc:	2e 97       	sbiw	r28, 0x0e	; 14
    48be:	9a 83       	std	Y+2, r25	; 0x02
    48c0:	2f 96       	adiw	r28, 0x0f	; 15
    48c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    48c4:	2f 97       	sbiw	r28, 0x0f	; 15
    48c6:	8b 83       	std	Y+3, r24	; 0x03
    48c8:	60 96       	adiw	r28, 0x10	; 16
    48ca:	9f ad       	ldd	r25, Y+63	; 0x3f
    48cc:	60 97       	sbiw	r28, 0x10	; 16
    48ce:	9c 83       	std	Y+4, r25	; 0x04
    48d0:	61 96       	adiw	r28, 0x11	; 17
    48d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    48d4:	61 97       	sbiw	r28, 0x11	; 17
    48d6:	8d 83       	std	Y+5, r24	; 0x05
    48d8:	62 96       	adiw	r28, 0x12	; 18
    48da:	9f ad       	ldd	r25, Y+63	; 0x3f
    48dc:	62 97       	sbiw	r28, 0x12	; 18
    48de:	9e 83       	std	Y+6, r25	; 0x06
    48e0:	63 96       	adiw	r28, 0x13	; 19
    48e2:	8f ad       	ldd	r24, Y+63	; 0x3f
    48e4:	63 97       	sbiw	r28, 0x13	; 19
    48e6:	8f 83       	std	Y+7, r24	; 0x07
    48e8:	64 96       	adiw	r28, 0x14	; 20
    48ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    48ec:	64 97       	sbiw	r28, 0x14	; 20
    48ee:	98 87       	std	Y+8, r25	; 0x08
			copy_u64Number/=10;
    48f0:	a9 84       	ldd	r10, Y+9	; 0x09
    48f2:	ba 84       	ldd	r11, Y+10	; 0x0a
    48f4:	cb 84       	ldd	r12, Y+11	; 0x0b
    48f6:	dc 84       	ldd	r13, Y+12	; 0x0c
    48f8:	ed 84       	ldd	r14, Y+13	; 0x0d
    48fa:	fe 84       	ldd	r15, Y+14	; 0x0e
    48fc:	0f 85       	ldd	r16, Y+15	; 0x0f
    48fe:	18 89       	ldd	r17, Y+16	; 0x10
    4900:	2a 2d       	mov	r18, r10
    4902:	3b 2d       	mov	r19, r11
    4904:	4c 2d       	mov	r20, r12
    4906:	5d 2d       	mov	r21, r13
    4908:	6e 2d       	mov	r22, r14
    490a:	7f 2d       	mov	r23, r15
    490c:	80 2f       	mov	r24, r16
    490e:	91 2f       	mov	r25, r17
    4910:	0f 2e       	mov	r0, r31
    4912:	fa e0       	ldi	r31, 0x0A	; 10
    4914:	af 2e       	mov	r10, r31
    4916:	f0 2d       	mov	r31, r0
    4918:	bb 24       	eor	r11, r11
    491a:	cc 24       	eor	r12, r12
    491c:	dd 24       	eor	r13, r13
    491e:	ee 24       	eor	r14, r14
    4920:	ff 24       	eor	r15, r15
    4922:	00 e0       	ldi	r16, 0x00	; 0
    4924:	10 e0       	ldi	r17, 0x00	; 0
    4926:	0e 94 94 01 	call	0x328	; 0x328 <__udivdi3>
    492a:	a2 2e       	mov	r10, r18
    492c:	b3 2e       	mov	r11, r19
    492e:	c4 2e       	mov	r12, r20
    4930:	d5 2e       	mov	r13, r21
    4932:	e6 2e       	mov	r14, r22
    4934:	f7 2e       	mov	r15, r23
    4936:	08 2f       	mov	r16, r24
    4938:	19 2f       	mov	r17, r25
    493a:	a9 86       	std	Y+9, r10	; 0x09
    493c:	ba 86       	std	Y+10, r11	; 0x0a
    493e:	cb 86       	std	Y+11, r12	; 0x0b
    4940:	dc 86       	std	Y+12, r13	; 0x0c
    4942:	ed 86       	std	Y+13, r14	; 0x0d
    4944:	fe 86       	std	Y+14, r15	; 0x0e
    4946:	0f 87       	std	Y+15, r16	; 0x0f
    4948:	18 8b       	std	Y+16, r17	; 0x10
	{
		CLCD_voidSendData('0');
	}
	else
	{
		while(copy_u64Number>0)
    494a:	89 85       	ldd	r24, Y+9	; 0x09
    494c:	9a 85       	ldd	r25, Y+10	; 0x0a
    494e:	89 2b       	or	r24, r25
    4950:	9b 85       	ldd	r25, Y+11	; 0x0b
    4952:	89 2b       	or	r24, r25
    4954:	9c 85       	ldd	r25, Y+12	; 0x0c
    4956:	89 2b       	or	r24, r25
    4958:	9d 85       	ldd	r25, Y+13	; 0x0d
    495a:	89 2b       	or	r24, r25
    495c:	9e 85       	ldd	r25, Y+14	; 0x0e
    495e:	89 2b       	or	r24, r25
    4960:	9f 85       	ldd	r25, Y+15	; 0x0f
    4962:	89 2b       	or	r24, r25
    4964:	98 89       	ldd	r25, Y+16	; 0x10
    4966:	89 2b       	or	r24, r25
    4968:	88 23       	and	r24, r24
    496a:	09 f0       	breq	.+2      	; 0x496e <CLCD_voidSendNumber+0x754>
    496c:	90 cc       	rjmp	.-1760   	; 0x428e <CLCD_voidSendNumber+0x74>
    496e:	5e c0       	rjmp	.+188    	; 0x4a2c <CLCD_voidSendNumber+0x812>
			Loc_ReversNumber=Loc_ReversNumber*10+(copy_u64Number%10);
			copy_u64Number/=10;
		}
		while(Loc_ReversNumber>1)
		{
			CLCD_voidSendData((Loc_ReversNumber%10) + 48);
    4970:	a9 80       	ldd	r10, Y+1	; 0x01
    4972:	ba 80       	ldd	r11, Y+2	; 0x02
    4974:	cb 80       	ldd	r12, Y+3	; 0x03
    4976:	dc 80       	ldd	r13, Y+4	; 0x04
    4978:	ed 80       	ldd	r14, Y+5	; 0x05
    497a:	fe 80       	ldd	r15, Y+6	; 0x06
    497c:	0f 81       	ldd	r16, Y+7	; 0x07
    497e:	18 85       	ldd	r17, Y+8	; 0x08
    4980:	2a 2d       	mov	r18, r10
    4982:	3b 2d       	mov	r19, r11
    4984:	4c 2d       	mov	r20, r12
    4986:	5d 2d       	mov	r21, r13
    4988:	6e 2d       	mov	r22, r14
    498a:	7f 2d       	mov	r23, r15
    498c:	80 2f       	mov	r24, r16
    498e:	91 2f       	mov	r25, r17
    4990:	0f 2e       	mov	r0, r31
    4992:	fa e0       	ldi	r31, 0x0A	; 10
    4994:	af 2e       	mov	r10, r31
    4996:	f0 2d       	mov	r31, r0
    4998:	bb 24       	eor	r11, r11
    499a:	cc 24       	eor	r12, r12
    499c:	dd 24       	eor	r13, r13
    499e:	ee 24       	eor	r14, r14
    49a0:	ff 24       	eor	r15, r15
    49a2:	00 e0       	ldi	r16, 0x00	; 0
    49a4:	10 e0       	ldi	r17, 0x00	; 0
    49a6:	0e 94 09 08 	call	0x1012	; 0x1012 <__umoddi3>
    49aa:	a2 2e       	mov	r10, r18
    49ac:	b3 2e       	mov	r11, r19
    49ae:	c4 2e       	mov	r12, r20
    49b0:	d5 2e       	mov	r13, r21
    49b2:	e6 2e       	mov	r14, r22
    49b4:	f7 2e       	mov	r15, r23
    49b6:	08 2f       	mov	r16, r24
    49b8:	19 2f       	mov	r17, r25
    49ba:	2a 2d       	mov	r18, r10
    49bc:	3b 2d       	mov	r19, r11
    49be:	4c 2d       	mov	r20, r12
    49c0:	5d 2d       	mov	r21, r13
    49c2:	6e 2d       	mov	r22, r14
    49c4:	7f 2d       	mov	r23, r15
    49c6:	80 2f       	mov	r24, r16
    49c8:	91 2f       	mov	r25, r17
    49ca:	82 2f       	mov	r24, r18
    49cc:	80 5d       	subi	r24, 0xD0	; 208
    49ce:	0e 94 12 1f 	call	0x3e24	; 0x3e24 <CLCD_voidSendData>
			Loc_ReversNumber/=10;
    49d2:	a9 80       	ldd	r10, Y+1	; 0x01
    49d4:	ba 80       	ldd	r11, Y+2	; 0x02
    49d6:	cb 80       	ldd	r12, Y+3	; 0x03
    49d8:	dc 80       	ldd	r13, Y+4	; 0x04
    49da:	ed 80       	ldd	r14, Y+5	; 0x05
    49dc:	fe 80       	ldd	r15, Y+6	; 0x06
    49de:	0f 81       	ldd	r16, Y+7	; 0x07
    49e0:	18 85       	ldd	r17, Y+8	; 0x08
    49e2:	2a 2d       	mov	r18, r10
    49e4:	3b 2d       	mov	r19, r11
    49e6:	4c 2d       	mov	r20, r12
    49e8:	5d 2d       	mov	r21, r13
    49ea:	6e 2d       	mov	r22, r14
    49ec:	7f 2d       	mov	r23, r15
    49ee:	80 2f       	mov	r24, r16
    49f0:	91 2f       	mov	r25, r17
    49f2:	0f 2e       	mov	r0, r31
    49f4:	fa e0       	ldi	r31, 0x0A	; 10
    49f6:	af 2e       	mov	r10, r31
    49f8:	f0 2d       	mov	r31, r0
    49fa:	bb 24       	eor	r11, r11
    49fc:	cc 24       	eor	r12, r12
    49fe:	dd 24       	eor	r13, r13
    4a00:	ee 24       	eor	r14, r14
    4a02:	ff 24       	eor	r15, r15
    4a04:	00 e0       	ldi	r16, 0x00	; 0
    4a06:	10 e0       	ldi	r17, 0x00	; 0
    4a08:	0e 94 94 01 	call	0x328	; 0x328 <__udivdi3>
    4a0c:	a2 2e       	mov	r10, r18
    4a0e:	b3 2e       	mov	r11, r19
    4a10:	c4 2e       	mov	r12, r20
    4a12:	d5 2e       	mov	r13, r21
    4a14:	e6 2e       	mov	r14, r22
    4a16:	f7 2e       	mov	r15, r23
    4a18:	08 2f       	mov	r16, r24
    4a1a:	19 2f       	mov	r17, r25
    4a1c:	a9 82       	std	Y+1, r10	; 0x01
    4a1e:	ba 82       	std	Y+2, r11	; 0x02
    4a20:	cb 82       	std	Y+3, r12	; 0x03
    4a22:	dc 82       	std	Y+4, r13	; 0x04
    4a24:	ed 82       	std	Y+5, r14	; 0x05
    4a26:	fe 82       	std	Y+6, r15	; 0x06
    4a28:	0f 83       	std	Y+7, r16	; 0x07
    4a2a:	18 87       	std	Y+8, r17	; 0x08
		while(copy_u64Number>0)
		{
			Loc_ReversNumber=Loc_ReversNumber*10+(copy_u64Number%10);
			copy_u64Number/=10;
		}
		while(Loc_ReversNumber>1)
    4a2c:	88 85       	ldd	r24, Y+8	; 0x08
    4a2e:	88 23       	and	r24, r24
    4a30:	09 f0       	breq	.+2      	; 0x4a34 <CLCD_voidSendNumber+0x81a>
    4a32:	9e cf       	rjmp	.-196    	; 0x4970 <CLCD_voidSendNumber+0x756>
    4a34:	88 85       	ldd	r24, Y+8	; 0x08
    4a36:	88 23       	and	r24, r24
    4a38:	71 f5       	brne	.+92     	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a3a:	8f 81       	ldd	r24, Y+7	; 0x07
    4a3c:	88 23       	and	r24, r24
    4a3e:	09 f0       	breq	.+2      	; 0x4a42 <CLCD_voidSendNumber+0x828>
    4a40:	97 cf       	rjmp	.-210    	; 0x4970 <CLCD_voidSendNumber+0x756>
    4a42:	8f 81       	ldd	r24, Y+7	; 0x07
    4a44:	88 23       	and	r24, r24
    4a46:	39 f5       	brne	.+78     	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a48:	8e 81       	ldd	r24, Y+6	; 0x06
    4a4a:	88 23       	and	r24, r24
    4a4c:	09 f0       	breq	.+2      	; 0x4a50 <CLCD_voidSendNumber+0x836>
    4a4e:	90 cf       	rjmp	.-224    	; 0x4970 <CLCD_voidSendNumber+0x756>
    4a50:	8e 81       	ldd	r24, Y+6	; 0x06
    4a52:	88 23       	and	r24, r24
    4a54:	01 f5       	brne	.+64     	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a56:	8d 81       	ldd	r24, Y+5	; 0x05
    4a58:	88 23       	and	r24, r24
    4a5a:	09 f0       	breq	.+2      	; 0x4a5e <CLCD_voidSendNumber+0x844>
    4a5c:	89 cf       	rjmp	.-238    	; 0x4970 <CLCD_voidSendNumber+0x756>
    4a5e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a60:	88 23       	and	r24, r24
    4a62:	c9 f4       	brne	.+50     	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a64:	8c 81       	ldd	r24, Y+4	; 0x04
    4a66:	88 23       	and	r24, r24
    4a68:	09 f0       	breq	.+2      	; 0x4a6c <CLCD_voidSendNumber+0x852>
    4a6a:	82 cf       	rjmp	.-252    	; 0x4970 <CLCD_voidSendNumber+0x756>
    4a6c:	8c 81       	ldd	r24, Y+4	; 0x04
    4a6e:	88 23       	and	r24, r24
    4a70:	91 f4       	brne	.+36     	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a72:	8b 81       	ldd	r24, Y+3	; 0x03
    4a74:	88 23       	and	r24, r24
    4a76:	09 f0       	breq	.+2      	; 0x4a7a <CLCD_voidSendNumber+0x860>
    4a78:	7b cf       	rjmp	.-266    	; 0x4970 <CLCD_voidSendNumber+0x756>
    4a7a:	8b 81       	ldd	r24, Y+3	; 0x03
    4a7c:	88 23       	and	r24, r24
    4a7e:	59 f4       	brne	.+22     	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a80:	8a 81       	ldd	r24, Y+2	; 0x02
    4a82:	88 23       	and	r24, r24
    4a84:	09 f0       	breq	.+2      	; 0x4a88 <CLCD_voidSendNumber+0x86e>
    4a86:	74 cf       	rjmp	.-280    	; 0x4970 <CLCD_voidSendNumber+0x756>
    4a88:	8a 81       	ldd	r24, Y+2	; 0x02
    4a8a:	88 23       	and	r24, r24
    4a8c:	21 f4       	brne	.+8      	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a8e:	89 81       	ldd	r24, Y+1	; 0x01
    4a90:	82 30       	cpi	r24, 0x02	; 2
    4a92:	08 f0       	brcs	.+2      	; 0x4a96 <CLCD_voidSendNumber+0x87c>
    4a94:	6d cf       	rjmp	.-294    	; 0x4970 <CLCD_voidSendNumber+0x756>
			CLCD_voidSendData((Loc_ReversNumber%10) + 48);
			Loc_ReversNumber/=10;
		}
	}

}
    4a96:	ca 59       	subi	r28, 0x9A	; 154
    4a98:	df 4f       	sbci	r29, 0xFF	; 255
    4a9a:	0f b6       	in	r0, 0x3f	; 63
    4a9c:	f8 94       	cli
    4a9e:	de bf       	out	0x3e, r29	; 62
    4aa0:	0f be       	out	0x3f, r0	; 63
    4aa2:	cd bf       	out	0x3d, r28	; 61
    4aa4:	cf 91       	pop	r28
    4aa6:	df 91       	pop	r29
    4aa8:	1f 91       	pop	r17
    4aaa:	0f 91       	pop	r16
    4aac:	ff 90       	pop	r15
    4aae:	ef 90       	pop	r14
    4ab0:	df 90       	pop	r13
    4ab2:	cf 90       	pop	r12
    4ab4:	bf 90       	pop	r11
    4ab6:	af 90       	pop	r10
    4ab8:	08 95       	ret

00004aba <CLCD_voidSendFloatNumber>:
void CLCD_voidSendFloatNumber           ( f32 Copy_f32Number    )
{
    4aba:	2f 92       	push	r2
    4abc:	3f 92       	push	r3
    4abe:	4f 92       	push	r4
    4ac0:	5f 92       	push	r5
    4ac2:	6f 92       	push	r6
    4ac4:	7f 92       	push	r7
    4ac6:	8f 92       	push	r8
    4ac8:	9f 92       	push	r9
    4aca:	af 92       	push	r10
    4acc:	bf 92       	push	r11
    4ace:	cf 92       	push	r12
    4ad0:	df 92       	push	r13
    4ad2:	ef 92       	push	r14
    4ad4:	ff 92       	push	r15
    4ad6:	0f 93       	push	r16
    4ad8:	1f 93       	push	r17
    4ada:	df 93       	push	r29
    4adc:	cf 93       	push	r28
    4ade:	00 d0       	rcall	.+0      	; 0x4ae0 <CLCD_voidSendFloatNumber+0x26>
    4ae0:	00 d0       	rcall	.+0      	; 0x4ae2 <CLCD_voidSendFloatNumber+0x28>
    4ae2:	cd b7       	in	r28, 0x3d	; 61
    4ae4:	de b7       	in	r29, 0x3e	; 62
    4ae6:	69 83       	std	Y+1, r22	; 0x01
    4ae8:	7a 83       	std	Y+2, r23	; 0x02
    4aea:	8b 83       	std	Y+3, r24	; 0x03
    4aec:	9c 83       	std	Y+4, r25	; 0x04
	CLCD_voidSendNumber((u64)Copy_f32Number);
    4aee:	69 81       	ldd	r22, Y+1	; 0x01
    4af0:	7a 81       	ldd	r23, Y+2	; 0x02
    4af2:	8b 81       	ldd	r24, Y+3	; 0x03
    4af4:	9c 81       	ldd	r25, Y+4	; 0x04
    4af6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__fixunssfdi>
    4afa:	a2 2e       	mov	r10, r18
    4afc:	b3 2e       	mov	r11, r19
    4afe:	c4 2e       	mov	r12, r20
    4b00:	d5 2e       	mov	r13, r21
    4b02:	e6 2e       	mov	r14, r22
    4b04:	f7 2e       	mov	r15, r23
    4b06:	08 2f       	mov	r16, r24
    4b08:	19 2f       	mov	r17, r25
    4b0a:	2a 2d       	mov	r18, r10
    4b0c:	3b 2d       	mov	r19, r11
    4b0e:	4c 2d       	mov	r20, r12
    4b10:	5d 2d       	mov	r21, r13
    4b12:	6e 2d       	mov	r22, r14
    4b14:	7f 2d       	mov	r23, r15
    4b16:	80 2f       	mov	r24, r16
    4b18:	91 2f       	mov	r25, r17
    4b1a:	0e 94 0d 21 	call	0x421a	; 0x421a <CLCD_voidSendNumber>
	if((((u64)(Copy_f32Number*100))%100)!=0)
    4b1e:	69 81       	ldd	r22, Y+1	; 0x01
    4b20:	7a 81       	ldd	r23, Y+2	; 0x02
    4b22:	8b 81       	ldd	r24, Y+3	; 0x03
    4b24:	9c 81       	ldd	r25, Y+4	; 0x04
    4b26:	20 e0       	ldi	r18, 0x00	; 0
    4b28:	30 e0       	ldi	r19, 0x00	; 0
    4b2a:	48 ec       	ldi	r20, 0xC8	; 200
    4b2c:	52 e4       	ldi	r21, 0x42	; 66
    4b2e:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4b32:	dc 01       	movw	r26, r24
    4b34:	cb 01       	movw	r24, r22
    4b36:	bc 01       	movw	r22, r24
    4b38:	cd 01       	movw	r24, r26
    4b3a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__fixunssfdi>
    4b3e:	a2 2e       	mov	r10, r18
    4b40:	b3 2e       	mov	r11, r19
    4b42:	c4 2e       	mov	r12, r20
    4b44:	d5 2e       	mov	r13, r21
    4b46:	e6 2e       	mov	r14, r22
    4b48:	f7 2e       	mov	r15, r23
    4b4a:	08 2f       	mov	r16, r24
    4b4c:	19 2f       	mov	r17, r25
    4b4e:	2a 2d       	mov	r18, r10
    4b50:	3b 2d       	mov	r19, r11
    4b52:	4c 2d       	mov	r20, r12
    4b54:	5d 2d       	mov	r21, r13
    4b56:	6e 2d       	mov	r22, r14
    4b58:	7f 2d       	mov	r23, r15
    4b5a:	80 2f       	mov	r24, r16
    4b5c:	91 2f       	mov	r25, r17
    4b5e:	0f 2e       	mov	r0, r31
    4b60:	f4 e6       	ldi	r31, 0x64	; 100
    4b62:	af 2e       	mov	r10, r31
    4b64:	f0 2d       	mov	r31, r0
    4b66:	bb 24       	eor	r11, r11
    4b68:	cc 24       	eor	r12, r12
    4b6a:	dd 24       	eor	r13, r13
    4b6c:	ee 24       	eor	r14, r14
    4b6e:	ff 24       	eor	r15, r15
    4b70:	00 e0       	ldi	r16, 0x00	; 0
    4b72:	10 e0       	ldi	r17, 0x00	; 0
    4b74:	0e 94 09 08 	call	0x1012	; 0x1012 <__umoddi3>
    4b78:	a2 2e       	mov	r10, r18
    4b7a:	b3 2e       	mov	r11, r19
    4b7c:	c4 2e       	mov	r12, r20
    4b7e:	d5 2e       	mov	r13, r21
    4b80:	e6 2e       	mov	r14, r22
    4b82:	f7 2e       	mov	r15, r23
    4b84:	08 2f       	mov	r16, r24
    4b86:	19 2f       	mov	r17, r25
    4b88:	2a 2d       	mov	r18, r10
    4b8a:	3b 2d       	mov	r19, r11
    4b8c:	4c 2d       	mov	r20, r12
    4b8e:	5d 2d       	mov	r21, r13
    4b90:	6e 2d       	mov	r22, r14
    4b92:	7f 2d       	mov	r23, r15
    4b94:	80 2f       	mov	r24, r16
    4b96:	91 2f       	mov	r25, r17
    4b98:	e2 2f       	mov	r30, r18
    4b9a:	e3 2b       	or	r30, r19
    4b9c:	e4 2b       	or	r30, r20
    4b9e:	e5 2b       	or	r30, r21
    4ba0:	e6 2b       	or	r30, r22
    4ba2:	e7 2b       	or	r30, r23
    4ba4:	e8 2b       	or	r30, r24
    4ba6:	e9 2b       	or	r30, r25
    4ba8:	ee 23       	and	r30, r30
    4baa:	09 f4       	brne	.+2      	; 0x4bae <CLCD_voidSendFloatNumber+0xf4>
    4bac:	4a c0       	rjmp	.+148    	; 0x4c42 <CLCD_voidSendFloatNumber+0x188>
	{
		CLCD_voidSendData('.');
    4bae:	8e e2       	ldi	r24, 0x2E	; 46
    4bb0:	0e 94 12 1f 	call	0x3e24	; 0x3e24 <CLCD_voidSendData>
		CLCD_voidSendNumber((((u64)(Copy_f32Number*100))%100));
    4bb4:	69 81       	ldd	r22, Y+1	; 0x01
    4bb6:	7a 81       	ldd	r23, Y+2	; 0x02
    4bb8:	8b 81       	ldd	r24, Y+3	; 0x03
    4bba:	9c 81       	ldd	r25, Y+4	; 0x04
    4bbc:	20 e0       	ldi	r18, 0x00	; 0
    4bbe:	30 e0       	ldi	r19, 0x00	; 0
    4bc0:	48 ec       	ldi	r20, 0xC8	; 200
    4bc2:	52 e4       	ldi	r21, 0x42	; 66
    4bc4:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4bc8:	dc 01       	movw	r26, r24
    4bca:	cb 01       	movw	r24, r22
    4bcc:	bc 01       	movw	r22, r24
    4bce:	cd 01       	movw	r24, r26
    4bd0:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__fixunssfdi>
    4bd4:	a2 2e       	mov	r10, r18
    4bd6:	b3 2e       	mov	r11, r19
    4bd8:	c4 2e       	mov	r12, r20
    4bda:	d5 2e       	mov	r13, r21
    4bdc:	e6 2e       	mov	r14, r22
    4bde:	f7 2e       	mov	r15, r23
    4be0:	08 2f       	mov	r16, r24
    4be2:	19 2f       	mov	r17, r25
    4be4:	2a 2d       	mov	r18, r10
    4be6:	3b 2d       	mov	r19, r11
    4be8:	4c 2d       	mov	r20, r12
    4bea:	5d 2d       	mov	r21, r13
    4bec:	6e 2d       	mov	r22, r14
    4bee:	7f 2d       	mov	r23, r15
    4bf0:	80 2f       	mov	r24, r16
    4bf2:	91 2f       	mov	r25, r17
    4bf4:	0f 2e       	mov	r0, r31
    4bf6:	f4 e6       	ldi	r31, 0x64	; 100
    4bf8:	af 2e       	mov	r10, r31
    4bfa:	f0 2d       	mov	r31, r0
    4bfc:	bb 24       	eor	r11, r11
    4bfe:	cc 24       	eor	r12, r12
    4c00:	dd 24       	eor	r13, r13
    4c02:	ee 24       	eor	r14, r14
    4c04:	ff 24       	eor	r15, r15
    4c06:	00 e0       	ldi	r16, 0x00	; 0
    4c08:	10 e0       	ldi	r17, 0x00	; 0
    4c0a:	0e 94 09 08 	call	0x1012	; 0x1012 <__umoddi3>
    4c0e:	22 2e       	mov	r2, r18
    4c10:	33 2e       	mov	r3, r19
    4c12:	44 2e       	mov	r4, r20
    4c14:	55 2e       	mov	r5, r21
    4c16:	66 2e       	mov	r6, r22
    4c18:	77 2e       	mov	r7, r23
    4c1a:	88 2e       	mov	r8, r24
    4c1c:	99 2e       	mov	r9, r25
    4c1e:	a2 2c       	mov	r10, r2
    4c20:	b3 2c       	mov	r11, r3
    4c22:	c4 2c       	mov	r12, r4
    4c24:	d5 2c       	mov	r13, r5
    4c26:	e6 2c       	mov	r14, r6
    4c28:	f7 2c       	mov	r15, r7
    4c2a:	08 2d       	mov	r16, r8
    4c2c:	19 2d       	mov	r17, r9
    4c2e:	2a 2d       	mov	r18, r10
    4c30:	3b 2d       	mov	r19, r11
    4c32:	4c 2d       	mov	r20, r12
    4c34:	5d 2d       	mov	r21, r13
    4c36:	6e 2d       	mov	r22, r14
    4c38:	7f 2d       	mov	r23, r15
    4c3a:	80 2f       	mov	r24, r16
    4c3c:	91 2f       	mov	r25, r17
    4c3e:	0e 94 0d 21 	call	0x421a	; 0x421a <CLCD_voidSendNumber>
	}

}
    4c42:	0f 90       	pop	r0
    4c44:	0f 90       	pop	r0
    4c46:	0f 90       	pop	r0
    4c48:	0f 90       	pop	r0
    4c4a:	cf 91       	pop	r28
    4c4c:	df 91       	pop	r29
    4c4e:	1f 91       	pop	r17
    4c50:	0f 91       	pop	r16
    4c52:	ff 90       	pop	r15
    4c54:	ef 90       	pop	r14
    4c56:	df 90       	pop	r13
    4c58:	cf 90       	pop	r12
    4c5a:	bf 90       	pop	r11
    4c5c:	af 90       	pop	r10
    4c5e:	9f 90       	pop	r9
    4c60:	8f 90       	pop	r8
    4c62:	7f 90       	pop	r7
    4c64:	6f 90       	pop	r6
    4c66:	5f 90       	pop	r5
    4c68:	4f 90       	pop	r4
    4c6a:	3f 90       	pop	r3
    4c6c:	2f 90       	pop	r2
    4c6e:	08 95       	ret

00004c70 <CLCD_voidSendExtraChar>:
void CLCD_voidSendExtraChar(u8 copy_u8Row,u8 copy_u8Col )
{
    4c70:	df 93       	push	r29
    4c72:	cf 93       	push	r28
    4c74:	00 d0       	rcall	.+0      	; 0x4c76 <CLCD_voidSendExtraChar+0x6>
    4c76:	0f 92       	push	r0
    4c78:	cd b7       	in	r28, 0x3d	; 61
    4c7a:	de b7       	in	r29, 0x3e	; 62
    4c7c:	8a 83       	std	Y+2, r24	; 0x02
    4c7e:	6b 83       	std	Y+3, r22	; 0x03
	u8 LOC_u8Iterator=0;
    4c80:	19 82       	std	Y+1, r1	; 0x01
	CLCD_voidSendCommand(LCD_CGRAM);
    4c82:	80 e4       	ldi	r24, 0x40	; 64
    4c84:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <CLCD_voidSendCommand>
	for(LOC_u8Iterator=0;LOC_u8Iterator<sizeof(CLCD_u8Extrachar)/sizeof(CLCD_u8Extrachar[0]);++LOC_u8Iterator)
    4c88:	19 82       	std	Y+1, r1	; 0x01
    4c8a:	0c c0       	rjmp	.+24     	; 0x4ca4 <CLCD_voidSendExtraChar+0x34>
	{
		CLCD_voidSendData(CLCD_u8Extrachar[LOC_u8Iterator]);
    4c8c:	89 81       	ldd	r24, Y+1	; 0x01
    4c8e:	88 2f       	mov	r24, r24
    4c90:	90 e0       	ldi	r25, 0x00	; 0
    4c92:	fc 01       	movw	r30, r24
    4c94:	e5 57       	subi	r30, 0x75	; 117
    4c96:	fe 4f       	sbci	r31, 0xFE	; 254
    4c98:	80 81       	ld	r24, Z
    4c9a:	0e 94 12 1f 	call	0x3e24	; 0x3e24 <CLCD_voidSendData>
}
void CLCD_voidSendExtraChar(u8 copy_u8Row,u8 copy_u8Col )
{
	u8 LOC_u8Iterator=0;
	CLCD_voidSendCommand(LCD_CGRAM);
	for(LOC_u8Iterator=0;LOC_u8Iterator<sizeof(CLCD_u8Extrachar)/sizeof(CLCD_u8Extrachar[0]);++LOC_u8Iterator)
    4c9e:	89 81       	ldd	r24, Y+1	; 0x01
    4ca0:	8f 5f       	subi	r24, 0xFF	; 255
    4ca2:	89 83       	std	Y+1, r24	; 0x01
    4ca4:	89 81       	ldd	r24, Y+1	; 0x01
    4ca6:	88 31       	cpi	r24, 0x18	; 24
    4ca8:	88 f3       	brcs	.-30     	; 0x4c8c <CLCD_voidSendExtraChar+0x1c>
	{
		CLCD_voidSendData(CLCD_u8Extrachar[LOC_u8Iterator]);
	}
	CLCD_voidSetPosition(copy_u8Row,copy_u8Col);
    4caa:	8a 81       	ldd	r24, Y+2	; 0x02
    4cac:	6b 81       	ldd	r22, Y+3	; 0x03
    4cae:	0e 94 67 20 	call	0x40ce	; 0x40ce <CLCD_voidSetPosition>
	for(LOC_u8Iterator=0;LOC_u8Iterator<8;++LOC_u8Iterator)
    4cb2:	19 82       	std	Y+1, r1	; 0x01
    4cb4:	06 c0       	rjmp	.+12     	; 0x4cc2 <CLCD_voidSendExtraChar+0x52>
	{
		CLCD_voidSendData(LOC_u8Iterator);
    4cb6:	89 81       	ldd	r24, Y+1	; 0x01
    4cb8:	0e 94 12 1f 	call	0x3e24	; 0x3e24 <CLCD_voidSendData>
	for(LOC_u8Iterator=0;LOC_u8Iterator<sizeof(CLCD_u8Extrachar)/sizeof(CLCD_u8Extrachar[0]);++LOC_u8Iterator)
	{
		CLCD_voidSendData(CLCD_u8Extrachar[LOC_u8Iterator]);
	}
	CLCD_voidSetPosition(copy_u8Row,copy_u8Col);
	for(LOC_u8Iterator=0;LOC_u8Iterator<8;++LOC_u8Iterator)
    4cbc:	89 81       	ldd	r24, Y+1	; 0x01
    4cbe:	8f 5f       	subi	r24, 0xFF	; 255
    4cc0:	89 83       	std	Y+1, r24	; 0x01
    4cc2:	89 81       	ldd	r24, Y+1	; 0x01
    4cc4:	88 30       	cpi	r24, 0x08	; 8
    4cc6:	b8 f3       	brcs	.-18     	; 0x4cb6 <CLCD_voidSendExtraChar+0x46>
	{
		CLCD_voidSendData(LOC_u8Iterator);
	}

}
    4cc8:	0f 90       	pop	r0
    4cca:	0f 90       	pop	r0
    4ccc:	0f 90       	pop	r0
    4cce:	cf 91       	pop	r28
    4cd0:	df 91       	pop	r29
    4cd2:	08 95       	ret

00004cd4 <CLCD_voidClearScreen>:
void CLCD_voidClearScreen(void)
{
    4cd4:	df 93       	push	r29
    4cd6:	cf 93       	push	r28
    4cd8:	cd b7       	in	r28, 0x3d	; 61
    4cda:	de b7       	in	r29, 0x3e	; 62
    4cdc:	2e 97       	sbiw	r28, 0x0e	; 14
    4cde:	0f b6       	in	r0, 0x3f	; 63
    4ce0:	f8 94       	cli
    4ce2:	de bf       	out	0x3e, r29	; 62
    4ce4:	0f be       	out	0x3f, r0	; 63
    4ce6:	cd bf       	out	0x3d, r28	; 61
	CLCD_voidSendCommand(LCD_CLEAR);
    4ce8:	81 e0       	ldi	r24, 0x01	; 1
    4cea:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <CLCD_voidSendCommand>
    4cee:	80 e0       	ldi	r24, 0x00	; 0
    4cf0:	90 e0       	ldi	r25, 0x00	; 0
    4cf2:	a0 e2       	ldi	r26, 0x20	; 32
    4cf4:	b1 e4       	ldi	r27, 0x41	; 65
    4cf6:	8b 87       	std	Y+11, r24	; 0x0b
    4cf8:	9c 87       	std	Y+12, r25	; 0x0c
    4cfa:	ad 87       	std	Y+13, r26	; 0x0d
    4cfc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4cfe:	6b 85       	ldd	r22, Y+11	; 0x0b
    4d00:	7c 85       	ldd	r23, Y+12	; 0x0c
    4d02:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d04:	9e 85       	ldd	r25, Y+14	; 0x0e
    4d06:	20 e0       	ldi	r18, 0x00	; 0
    4d08:	30 e0       	ldi	r19, 0x00	; 0
    4d0a:	4a ef       	ldi	r20, 0xFA	; 250
    4d0c:	54 e4       	ldi	r21, 0x44	; 68
    4d0e:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4d12:	dc 01       	movw	r26, r24
    4d14:	cb 01       	movw	r24, r22
    4d16:	8f 83       	std	Y+7, r24	; 0x07
    4d18:	98 87       	std	Y+8, r25	; 0x08
    4d1a:	a9 87       	std	Y+9, r26	; 0x09
    4d1c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4d1e:	6f 81       	ldd	r22, Y+7	; 0x07
    4d20:	78 85       	ldd	r23, Y+8	; 0x08
    4d22:	89 85       	ldd	r24, Y+9	; 0x09
    4d24:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d26:	20 e0       	ldi	r18, 0x00	; 0
    4d28:	30 e0       	ldi	r19, 0x00	; 0
    4d2a:	40 e8       	ldi	r20, 0x80	; 128
    4d2c:	5f e3       	ldi	r21, 0x3F	; 63
    4d2e:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    4d32:	88 23       	and	r24, r24
    4d34:	2c f4       	brge	.+10     	; 0x4d40 <CLCD_voidClearScreen+0x6c>
		__ticks = 1;
    4d36:	81 e0       	ldi	r24, 0x01	; 1
    4d38:	90 e0       	ldi	r25, 0x00	; 0
    4d3a:	9e 83       	std	Y+6, r25	; 0x06
    4d3c:	8d 83       	std	Y+5, r24	; 0x05
    4d3e:	3f c0       	rjmp	.+126    	; 0x4dbe <CLCD_voidClearScreen+0xea>
	else if (__tmp > 65535)
    4d40:	6f 81       	ldd	r22, Y+7	; 0x07
    4d42:	78 85       	ldd	r23, Y+8	; 0x08
    4d44:	89 85       	ldd	r24, Y+9	; 0x09
    4d46:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d48:	20 e0       	ldi	r18, 0x00	; 0
    4d4a:	3f ef       	ldi	r19, 0xFF	; 255
    4d4c:	4f e7       	ldi	r20, 0x7F	; 127
    4d4e:	57 e4       	ldi	r21, 0x47	; 71
    4d50:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    4d54:	18 16       	cp	r1, r24
    4d56:	4c f5       	brge	.+82     	; 0x4daa <CLCD_voidClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d58:	6b 85       	ldd	r22, Y+11	; 0x0b
    4d5a:	7c 85       	ldd	r23, Y+12	; 0x0c
    4d5c:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d5e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4d60:	20 e0       	ldi	r18, 0x00	; 0
    4d62:	30 e0       	ldi	r19, 0x00	; 0
    4d64:	40 e2       	ldi	r20, 0x20	; 32
    4d66:	51 e4       	ldi	r21, 0x41	; 65
    4d68:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4d6c:	dc 01       	movw	r26, r24
    4d6e:	cb 01       	movw	r24, r22
    4d70:	bc 01       	movw	r22, r24
    4d72:	cd 01       	movw	r24, r26
    4d74:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4d78:	dc 01       	movw	r26, r24
    4d7a:	cb 01       	movw	r24, r22
    4d7c:	9e 83       	std	Y+6, r25	; 0x06
    4d7e:	8d 83       	std	Y+5, r24	; 0x05
    4d80:	0f c0       	rjmp	.+30     	; 0x4da0 <CLCD_voidClearScreen+0xcc>
    4d82:	88 ec       	ldi	r24, 0xC8	; 200
    4d84:	90 e0       	ldi	r25, 0x00	; 0
    4d86:	9c 83       	std	Y+4, r25	; 0x04
    4d88:	8b 83       	std	Y+3, r24	; 0x03
    4d8a:	8b 81       	ldd	r24, Y+3	; 0x03
    4d8c:	9c 81       	ldd	r25, Y+4	; 0x04
    4d8e:	01 97       	sbiw	r24, 0x01	; 1
    4d90:	f1 f7       	brne	.-4      	; 0x4d8e <CLCD_voidClearScreen+0xba>
    4d92:	9c 83       	std	Y+4, r25	; 0x04
    4d94:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d96:	8d 81       	ldd	r24, Y+5	; 0x05
    4d98:	9e 81       	ldd	r25, Y+6	; 0x06
    4d9a:	01 97       	sbiw	r24, 0x01	; 1
    4d9c:	9e 83       	std	Y+6, r25	; 0x06
    4d9e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4da0:	8d 81       	ldd	r24, Y+5	; 0x05
    4da2:	9e 81       	ldd	r25, Y+6	; 0x06
    4da4:	00 97       	sbiw	r24, 0x00	; 0
    4da6:	69 f7       	brne	.-38     	; 0x4d82 <CLCD_voidClearScreen+0xae>
    4da8:	14 c0       	rjmp	.+40     	; 0x4dd2 <CLCD_voidClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4daa:	6f 81       	ldd	r22, Y+7	; 0x07
    4dac:	78 85       	ldd	r23, Y+8	; 0x08
    4dae:	89 85       	ldd	r24, Y+9	; 0x09
    4db0:	9a 85       	ldd	r25, Y+10	; 0x0a
    4db2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4db6:	dc 01       	movw	r26, r24
    4db8:	cb 01       	movw	r24, r22
    4dba:	9e 83       	std	Y+6, r25	; 0x06
    4dbc:	8d 83       	std	Y+5, r24	; 0x05
    4dbe:	8d 81       	ldd	r24, Y+5	; 0x05
    4dc0:	9e 81       	ldd	r25, Y+6	; 0x06
    4dc2:	9a 83       	std	Y+2, r25	; 0x02
    4dc4:	89 83       	std	Y+1, r24	; 0x01
    4dc6:	89 81       	ldd	r24, Y+1	; 0x01
    4dc8:	9a 81       	ldd	r25, Y+2	; 0x02
    4dca:	01 97       	sbiw	r24, 0x01	; 1
    4dcc:	f1 f7       	brne	.-4      	; 0x4dca <CLCD_voidClearScreen+0xf6>
    4dce:	9a 83       	std	Y+2, r25	; 0x02
    4dd0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    4dd2:	2e 96       	adiw	r28, 0x0e	; 14
    4dd4:	0f b6       	in	r0, 0x3f	; 63
    4dd6:	f8 94       	cli
    4dd8:	de bf       	out	0x3e, r29	; 62
    4dda:	0f be       	out	0x3f, r0	; 63
    4ddc:	cd bf       	out	0x3d, r28	; 61
    4dde:	cf 91       	pop	r28
    4de0:	df 91       	pop	r29
    4de2:	08 95       	ret

00004de4 <CLCD_voidSendFallingEdge>:
/* use only in this file */
static void CLCD_voidSendFallingEdge(void)
{
    4de4:	df 93       	push	r29
    4de6:	cf 93       	push	r28
    4de8:	cd b7       	in	r28, 0x3d	; 61
    4dea:	de b7       	in	r29, 0x3e	; 62
    4dec:	6c 97       	sbiw	r28, 0x1c	; 28
    4dee:	0f b6       	in	r0, 0x3f	; 63
    4df0:	f8 94       	cli
    4df2:	de bf       	out	0x3e, r29	; 62
    4df4:	0f be       	out	0x3f, r0	; 63
    4df6:	cd bf       	out	0x3d, r28	; 61
	DIO_enumSetPinValue(CLCD_CONTROLER_PORT,CLCD_EN,DIO_PIN_HIGH);
    4df8:	81 e0       	ldi	r24, 0x01	; 1
    4dfa:	65 e0       	ldi	r22, 0x05	; 5
    4dfc:	41 e0       	ldi	r20, 0x01	; 1
    4dfe:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
    4e02:	80 e0       	ldi	r24, 0x00	; 0
    4e04:	90 e0       	ldi	r25, 0x00	; 0
    4e06:	a0 e8       	ldi	r26, 0x80	; 128
    4e08:	bf e3       	ldi	r27, 0x3F	; 63
    4e0a:	89 8f       	std	Y+25, r24	; 0x19
    4e0c:	9a 8f       	std	Y+26, r25	; 0x1a
    4e0e:	ab 8f       	std	Y+27, r26	; 0x1b
    4e10:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e12:	69 8d       	ldd	r22, Y+25	; 0x19
    4e14:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4e16:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4e18:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4e1a:	20 e0       	ldi	r18, 0x00	; 0
    4e1c:	30 e0       	ldi	r19, 0x00	; 0
    4e1e:	4a ef       	ldi	r20, 0xFA	; 250
    4e20:	54 e4       	ldi	r21, 0x44	; 68
    4e22:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4e26:	dc 01       	movw	r26, r24
    4e28:	cb 01       	movw	r24, r22
    4e2a:	8d 8b       	std	Y+21, r24	; 0x15
    4e2c:	9e 8b       	std	Y+22, r25	; 0x16
    4e2e:	af 8b       	std	Y+23, r26	; 0x17
    4e30:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4e32:	6d 89       	ldd	r22, Y+21	; 0x15
    4e34:	7e 89       	ldd	r23, Y+22	; 0x16
    4e36:	8f 89       	ldd	r24, Y+23	; 0x17
    4e38:	98 8d       	ldd	r25, Y+24	; 0x18
    4e3a:	20 e0       	ldi	r18, 0x00	; 0
    4e3c:	30 e0       	ldi	r19, 0x00	; 0
    4e3e:	40 e8       	ldi	r20, 0x80	; 128
    4e40:	5f e3       	ldi	r21, 0x3F	; 63
    4e42:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    4e46:	88 23       	and	r24, r24
    4e48:	2c f4       	brge	.+10     	; 0x4e54 <CLCD_voidSendFallingEdge+0x70>
		__ticks = 1;
    4e4a:	81 e0       	ldi	r24, 0x01	; 1
    4e4c:	90 e0       	ldi	r25, 0x00	; 0
    4e4e:	9c 8b       	std	Y+20, r25	; 0x14
    4e50:	8b 8b       	std	Y+19, r24	; 0x13
    4e52:	3f c0       	rjmp	.+126    	; 0x4ed2 <CLCD_voidSendFallingEdge+0xee>
	else if (__tmp > 65535)
    4e54:	6d 89       	ldd	r22, Y+21	; 0x15
    4e56:	7e 89       	ldd	r23, Y+22	; 0x16
    4e58:	8f 89       	ldd	r24, Y+23	; 0x17
    4e5a:	98 8d       	ldd	r25, Y+24	; 0x18
    4e5c:	20 e0       	ldi	r18, 0x00	; 0
    4e5e:	3f ef       	ldi	r19, 0xFF	; 255
    4e60:	4f e7       	ldi	r20, 0x7F	; 127
    4e62:	57 e4       	ldi	r21, 0x47	; 71
    4e64:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    4e68:	18 16       	cp	r1, r24
    4e6a:	4c f5       	brge	.+82     	; 0x4ebe <CLCD_voidSendFallingEdge+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e6c:	69 8d       	ldd	r22, Y+25	; 0x19
    4e6e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4e70:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4e72:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4e74:	20 e0       	ldi	r18, 0x00	; 0
    4e76:	30 e0       	ldi	r19, 0x00	; 0
    4e78:	40 e2       	ldi	r20, 0x20	; 32
    4e7a:	51 e4       	ldi	r21, 0x41	; 65
    4e7c:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4e80:	dc 01       	movw	r26, r24
    4e82:	cb 01       	movw	r24, r22
    4e84:	bc 01       	movw	r22, r24
    4e86:	cd 01       	movw	r24, r26
    4e88:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4e8c:	dc 01       	movw	r26, r24
    4e8e:	cb 01       	movw	r24, r22
    4e90:	9c 8b       	std	Y+20, r25	; 0x14
    4e92:	8b 8b       	std	Y+19, r24	; 0x13
    4e94:	0f c0       	rjmp	.+30     	; 0x4eb4 <CLCD_voidSendFallingEdge+0xd0>
    4e96:	88 ec       	ldi	r24, 0xC8	; 200
    4e98:	90 e0       	ldi	r25, 0x00	; 0
    4e9a:	9a 8b       	std	Y+18, r25	; 0x12
    4e9c:	89 8b       	std	Y+17, r24	; 0x11
    4e9e:	89 89       	ldd	r24, Y+17	; 0x11
    4ea0:	9a 89       	ldd	r25, Y+18	; 0x12
    4ea2:	01 97       	sbiw	r24, 0x01	; 1
    4ea4:	f1 f7       	brne	.-4      	; 0x4ea2 <CLCD_voidSendFallingEdge+0xbe>
    4ea6:	9a 8b       	std	Y+18, r25	; 0x12
    4ea8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4eaa:	8b 89       	ldd	r24, Y+19	; 0x13
    4eac:	9c 89       	ldd	r25, Y+20	; 0x14
    4eae:	01 97       	sbiw	r24, 0x01	; 1
    4eb0:	9c 8b       	std	Y+20, r25	; 0x14
    4eb2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4eb4:	8b 89       	ldd	r24, Y+19	; 0x13
    4eb6:	9c 89       	ldd	r25, Y+20	; 0x14
    4eb8:	00 97       	sbiw	r24, 0x00	; 0
    4eba:	69 f7       	brne	.-38     	; 0x4e96 <CLCD_voidSendFallingEdge+0xb2>
    4ebc:	14 c0       	rjmp	.+40     	; 0x4ee6 <CLCD_voidSendFallingEdge+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ebe:	6d 89       	ldd	r22, Y+21	; 0x15
    4ec0:	7e 89       	ldd	r23, Y+22	; 0x16
    4ec2:	8f 89       	ldd	r24, Y+23	; 0x17
    4ec4:	98 8d       	ldd	r25, Y+24	; 0x18
    4ec6:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4eca:	dc 01       	movw	r26, r24
    4ecc:	cb 01       	movw	r24, r22
    4ece:	9c 8b       	std	Y+20, r25	; 0x14
    4ed0:	8b 8b       	std	Y+19, r24	; 0x13
    4ed2:	8b 89       	ldd	r24, Y+19	; 0x13
    4ed4:	9c 89       	ldd	r25, Y+20	; 0x14
    4ed6:	98 8b       	std	Y+16, r25	; 0x10
    4ed8:	8f 87       	std	Y+15, r24	; 0x0f
    4eda:	8f 85       	ldd	r24, Y+15	; 0x0f
    4edc:	98 89       	ldd	r25, Y+16	; 0x10
    4ede:	01 97       	sbiw	r24, 0x01	; 1
    4ee0:	f1 f7       	brne	.-4      	; 0x4ede <CLCD_voidSendFallingEdge+0xfa>
    4ee2:	98 8b       	std	Y+16, r25	; 0x10
    4ee4:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_enumSetPinValue(CLCD_CONTROLER_PORT,CLCD_EN,DIO_PIN_LOW);
    4ee6:	81 e0       	ldi	r24, 0x01	; 1
    4ee8:	65 e0       	ldi	r22, 0x05	; 5
    4eea:	40 e0       	ldi	r20, 0x00	; 0
    4eec:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
    4ef0:	80 e0       	ldi	r24, 0x00	; 0
    4ef2:	90 e0       	ldi	r25, 0x00	; 0
    4ef4:	a0 e8       	ldi	r26, 0x80	; 128
    4ef6:	bf e3       	ldi	r27, 0x3F	; 63
    4ef8:	8b 87       	std	Y+11, r24	; 0x0b
    4efa:	9c 87       	std	Y+12, r25	; 0x0c
    4efc:	ad 87       	std	Y+13, r26	; 0x0d
    4efe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f00:	6b 85       	ldd	r22, Y+11	; 0x0b
    4f02:	7c 85       	ldd	r23, Y+12	; 0x0c
    4f04:	8d 85       	ldd	r24, Y+13	; 0x0d
    4f06:	9e 85       	ldd	r25, Y+14	; 0x0e
    4f08:	20 e0       	ldi	r18, 0x00	; 0
    4f0a:	30 e0       	ldi	r19, 0x00	; 0
    4f0c:	4a ef       	ldi	r20, 0xFA	; 250
    4f0e:	54 e4       	ldi	r21, 0x44	; 68
    4f10:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4f14:	dc 01       	movw	r26, r24
    4f16:	cb 01       	movw	r24, r22
    4f18:	8f 83       	std	Y+7, r24	; 0x07
    4f1a:	98 87       	std	Y+8, r25	; 0x08
    4f1c:	a9 87       	std	Y+9, r26	; 0x09
    4f1e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4f20:	6f 81       	ldd	r22, Y+7	; 0x07
    4f22:	78 85       	ldd	r23, Y+8	; 0x08
    4f24:	89 85       	ldd	r24, Y+9	; 0x09
    4f26:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f28:	20 e0       	ldi	r18, 0x00	; 0
    4f2a:	30 e0       	ldi	r19, 0x00	; 0
    4f2c:	40 e8       	ldi	r20, 0x80	; 128
    4f2e:	5f e3       	ldi	r21, 0x3F	; 63
    4f30:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    4f34:	88 23       	and	r24, r24
    4f36:	2c f4       	brge	.+10     	; 0x4f42 <CLCD_voidSendFallingEdge+0x15e>
		__ticks = 1;
    4f38:	81 e0       	ldi	r24, 0x01	; 1
    4f3a:	90 e0       	ldi	r25, 0x00	; 0
    4f3c:	9e 83       	std	Y+6, r25	; 0x06
    4f3e:	8d 83       	std	Y+5, r24	; 0x05
    4f40:	3f c0       	rjmp	.+126    	; 0x4fc0 <CLCD_voidSendFallingEdge+0x1dc>
	else if (__tmp > 65535)
    4f42:	6f 81       	ldd	r22, Y+7	; 0x07
    4f44:	78 85       	ldd	r23, Y+8	; 0x08
    4f46:	89 85       	ldd	r24, Y+9	; 0x09
    4f48:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f4a:	20 e0       	ldi	r18, 0x00	; 0
    4f4c:	3f ef       	ldi	r19, 0xFF	; 255
    4f4e:	4f e7       	ldi	r20, 0x7F	; 127
    4f50:	57 e4       	ldi	r21, 0x47	; 71
    4f52:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    4f56:	18 16       	cp	r1, r24
    4f58:	4c f5       	brge	.+82     	; 0x4fac <CLCD_voidSendFallingEdge+0x1c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f5a:	6b 85       	ldd	r22, Y+11	; 0x0b
    4f5c:	7c 85       	ldd	r23, Y+12	; 0x0c
    4f5e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4f60:	9e 85       	ldd	r25, Y+14	; 0x0e
    4f62:	20 e0       	ldi	r18, 0x00	; 0
    4f64:	30 e0       	ldi	r19, 0x00	; 0
    4f66:	40 e2       	ldi	r20, 0x20	; 32
    4f68:	51 e4       	ldi	r21, 0x41	; 65
    4f6a:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    4f6e:	dc 01       	movw	r26, r24
    4f70:	cb 01       	movw	r24, r22
    4f72:	bc 01       	movw	r22, r24
    4f74:	cd 01       	movw	r24, r26
    4f76:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4f7a:	dc 01       	movw	r26, r24
    4f7c:	cb 01       	movw	r24, r22
    4f7e:	9e 83       	std	Y+6, r25	; 0x06
    4f80:	8d 83       	std	Y+5, r24	; 0x05
    4f82:	0f c0       	rjmp	.+30     	; 0x4fa2 <CLCD_voidSendFallingEdge+0x1be>
    4f84:	88 ec       	ldi	r24, 0xC8	; 200
    4f86:	90 e0       	ldi	r25, 0x00	; 0
    4f88:	9c 83       	std	Y+4, r25	; 0x04
    4f8a:	8b 83       	std	Y+3, r24	; 0x03
    4f8c:	8b 81       	ldd	r24, Y+3	; 0x03
    4f8e:	9c 81       	ldd	r25, Y+4	; 0x04
    4f90:	01 97       	sbiw	r24, 0x01	; 1
    4f92:	f1 f7       	brne	.-4      	; 0x4f90 <CLCD_voidSendFallingEdge+0x1ac>
    4f94:	9c 83       	std	Y+4, r25	; 0x04
    4f96:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f98:	8d 81       	ldd	r24, Y+5	; 0x05
    4f9a:	9e 81       	ldd	r25, Y+6	; 0x06
    4f9c:	01 97       	sbiw	r24, 0x01	; 1
    4f9e:	9e 83       	std	Y+6, r25	; 0x06
    4fa0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4fa2:	8d 81       	ldd	r24, Y+5	; 0x05
    4fa4:	9e 81       	ldd	r25, Y+6	; 0x06
    4fa6:	00 97       	sbiw	r24, 0x00	; 0
    4fa8:	69 f7       	brne	.-38     	; 0x4f84 <CLCD_voidSendFallingEdge+0x1a0>
    4faa:	14 c0       	rjmp	.+40     	; 0x4fd4 <CLCD_voidSendFallingEdge+0x1f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4fac:	6f 81       	ldd	r22, Y+7	; 0x07
    4fae:	78 85       	ldd	r23, Y+8	; 0x08
    4fb0:	89 85       	ldd	r24, Y+9	; 0x09
    4fb2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fb4:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    4fb8:	dc 01       	movw	r26, r24
    4fba:	cb 01       	movw	r24, r22
    4fbc:	9e 83       	std	Y+6, r25	; 0x06
    4fbe:	8d 83       	std	Y+5, r24	; 0x05
    4fc0:	8d 81       	ldd	r24, Y+5	; 0x05
    4fc2:	9e 81       	ldd	r25, Y+6	; 0x06
    4fc4:	9a 83       	std	Y+2, r25	; 0x02
    4fc6:	89 83       	std	Y+1, r24	; 0x01
    4fc8:	89 81       	ldd	r24, Y+1	; 0x01
    4fca:	9a 81       	ldd	r25, Y+2	; 0x02
    4fcc:	01 97       	sbiw	r24, 0x01	; 1
    4fce:	f1 f7       	brne	.-4      	; 0x4fcc <CLCD_voidSendFallingEdge+0x1e8>
    4fd0:	9a 83       	std	Y+2, r25	; 0x02
    4fd2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    4fd4:	6c 96       	adiw	r28, 0x1c	; 28
    4fd6:	0f b6       	in	r0, 0x3f	; 63
    4fd8:	f8 94       	cli
    4fda:	de bf       	out	0x3e, r29	; 62
    4fdc:	0f be       	out	0x3f, r0	; 63
    4fde:	cd bf       	out	0x3d, r28	; 61
    4fe0:	cf 91       	pop	r28
    4fe2:	df 91       	pop	r29
    4fe4:	08 95       	ret

00004fe6 <main>:

#include "../HAL/CLCD/CLCD_interface.h"


void main()
{
    4fe6:	df 93       	push	r29
    4fe8:	cf 93       	push	r28
    4fea:	cd b7       	in	r28, 0x3d	; 61
    4fec:	de b7       	in	r29, 0x3e	; 62
    4fee:	ab 97       	sbiw	r28, 0x2b	; 43
    4ff0:	0f b6       	in	r0, 0x3f	; 63
    4ff2:	f8 94       	cli
    4ff4:	de bf       	out	0x3e, r29	; 62
    4ff6:	0f be       	out	0x3f, r0	; 63
    4ff8:	cd bf       	out	0x3d, r28	; 61
	CLCD_voidInti();
    4ffa:	0e 94 8b 1c 	call	0x3916	; 0x3916 <CLCD_voidInti>
	MUART_voidInitialization();
    4ffe:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <MUART_voidInitialization>

	/* --------------------------------  DC Motor -------------------------------------------- */
	DIO_enumSetPinDirection(DIO_PORTC, DIO_PIN5, DIO_PIN_OUTPUT);
    5002:	82 e0       	ldi	r24, 0x02	; 2
    5004:	65 e0       	ldi	r22, 0x05	; 5
    5006:	41 e0       	ldi	r20, 0x01	; 1
    5008:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(DIO_PORTC, DIO_PIN5, DIO_PIN_HIGH);
    500c:	82 e0       	ldi	r24, 0x02	; 2
    500e:	65 e0       	ldi	r22, 0x05	; 5
    5010:	41 e0       	ldi	r20, 0x01	; 1
    5012:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>

	while(1)
	{

		u8 LOC_u8Receive = MUART_voidRecieveData();
    5016:	0e 94 f5 15 	call	0x2bea	; 0x2bea <MUART_voidRecieveData>
    501a:	8b a7       	std	Y+43, r24	; 0x2b
    501c:	80 e0       	ldi	r24, 0x00	; 0
    501e:	90 e0       	ldi	r25, 0x00	; 0
    5020:	a8 ec       	ldi	r26, 0xC8	; 200
    5022:	b2 e4       	ldi	r27, 0x42	; 66
    5024:	8f a3       	std	Y+39, r24	; 0x27
    5026:	98 a7       	std	Y+40, r25	; 0x28
    5028:	a9 a7       	std	Y+41, r26	; 0x29
    502a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    502c:	6f a1       	ldd	r22, Y+39	; 0x27
    502e:	78 a5       	ldd	r23, Y+40	; 0x28
    5030:	89 a5       	ldd	r24, Y+41	; 0x29
    5032:	9a a5       	ldd	r25, Y+42	; 0x2a
    5034:	20 e0       	ldi	r18, 0x00	; 0
    5036:	30 e0       	ldi	r19, 0x00	; 0
    5038:	4a ef       	ldi	r20, 0xFA	; 250
    503a:	54 e4       	ldi	r21, 0x44	; 68
    503c:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    5040:	dc 01       	movw	r26, r24
    5042:	cb 01       	movw	r24, r22
    5044:	8b a3       	std	Y+35, r24	; 0x23
    5046:	9c a3       	std	Y+36, r25	; 0x24
    5048:	ad a3       	std	Y+37, r26	; 0x25
    504a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    504c:	6b a1       	ldd	r22, Y+35	; 0x23
    504e:	7c a1       	ldd	r23, Y+36	; 0x24
    5050:	8d a1       	ldd	r24, Y+37	; 0x25
    5052:	9e a1       	ldd	r25, Y+38	; 0x26
    5054:	20 e0       	ldi	r18, 0x00	; 0
    5056:	30 e0       	ldi	r19, 0x00	; 0
    5058:	40 e8       	ldi	r20, 0x80	; 128
    505a:	5f e3       	ldi	r21, 0x3F	; 63
    505c:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    5060:	88 23       	and	r24, r24
    5062:	2c f4       	brge	.+10     	; 0x506e <main+0x88>
		__ticks = 1;
    5064:	81 e0       	ldi	r24, 0x01	; 1
    5066:	90 e0       	ldi	r25, 0x00	; 0
    5068:	9a a3       	std	Y+34, r25	; 0x22
    506a:	89 a3       	std	Y+33, r24	; 0x21
    506c:	3f c0       	rjmp	.+126    	; 0x50ec <main+0x106>
	else if (__tmp > 65535)
    506e:	6b a1       	ldd	r22, Y+35	; 0x23
    5070:	7c a1       	ldd	r23, Y+36	; 0x24
    5072:	8d a1       	ldd	r24, Y+37	; 0x25
    5074:	9e a1       	ldd	r25, Y+38	; 0x26
    5076:	20 e0       	ldi	r18, 0x00	; 0
    5078:	3f ef       	ldi	r19, 0xFF	; 255
    507a:	4f e7       	ldi	r20, 0x7F	; 127
    507c:	57 e4       	ldi	r21, 0x47	; 71
    507e:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    5082:	18 16       	cp	r1, r24
    5084:	4c f5       	brge	.+82     	; 0x50d8 <main+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5086:	6f a1       	ldd	r22, Y+39	; 0x27
    5088:	78 a5       	ldd	r23, Y+40	; 0x28
    508a:	89 a5       	ldd	r24, Y+41	; 0x29
    508c:	9a a5       	ldd	r25, Y+42	; 0x2a
    508e:	20 e0       	ldi	r18, 0x00	; 0
    5090:	30 e0       	ldi	r19, 0x00	; 0
    5092:	40 e2       	ldi	r20, 0x20	; 32
    5094:	51 e4       	ldi	r21, 0x41	; 65
    5096:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    509a:	dc 01       	movw	r26, r24
    509c:	cb 01       	movw	r24, r22
    509e:	bc 01       	movw	r22, r24
    50a0:	cd 01       	movw	r24, r26
    50a2:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    50a6:	dc 01       	movw	r26, r24
    50a8:	cb 01       	movw	r24, r22
    50aa:	9a a3       	std	Y+34, r25	; 0x22
    50ac:	89 a3       	std	Y+33, r24	; 0x21
    50ae:	0f c0       	rjmp	.+30     	; 0x50ce <main+0xe8>
    50b0:	88 ec       	ldi	r24, 0xC8	; 200
    50b2:	90 e0       	ldi	r25, 0x00	; 0
    50b4:	98 a3       	std	Y+32, r25	; 0x20
    50b6:	8f 8f       	std	Y+31, r24	; 0x1f
    50b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    50ba:	98 a1       	ldd	r25, Y+32	; 0x20
    50bc:	01 97       	sbiw	r24, 0x01	; 1
    50be:	f1 f7       	brne	.-4      	; 0x50bc <main+0xd6>
    50c0:	98 a3       	std	Y+32, r25	; 0x20
    50c2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50c4:	89 a1       	ldd	r24, Y+33	; 0x21
    50c6:	9a a1       	ldd	r25, Y+34	; 0x22
    50c8:	01 97       	sbiw	r24, 0x01	; 1
    50ca:	9a a3       	std	Y+34, r25	; 0x22
    50cc:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50ce:	89 a1       	ldd	r24, Y+33	; 0x21
    50d0:	9a a1       	ldd	r25, Y+34	; 0x22
    50d2:	00 97       	sbiw	r24, 0x00	; 0
    50d4:	69 f7       	brne	.-38     	; 0x50b0 <main+0xca>
    50d6:	14 c0       	rjmp	.+40     	; 0x5100 <main+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50d8:	6b a1       	ldd	r22, Y+35	; 0x23
    50da:	7c a1       	ldd	r23, Y+36	; 0x24
    50dc:	8d a1       	ldd	r24, Y+37	; 0x25
    50de:	9e a1       	ldd	r25, Y+38	; 0x26
    50e0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    50e4:	dc 01       	movw	r26, r24
    50e6:	cb 01       	movw	r24, r22
    50e8:	9a a3       	std	Y+34, r25	; 0x22
    50ea:	89 a3       	std	Y+33, r24	; 0x21
    50ec:	89 a1       	ldd	r24, Y+33	; 0x21
    50ee:	9a a1       	ldd	r25, Y+34	; 0x22
    50f0:	9e 8f       	std	Y+30, r25	; 0x1e
    50f2:	8d 8f       	std	Y+29, r24	; 0x1d
    50f4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    50f6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    50f8:	01 97       	sbiw	r24, 0x01	; 1
    50fa:	f1 f7       	brne	.-4      	; 0x50f8 <main+0x112>
    50fc:	9e 8f       	std	Y+30, r25	; 0x1e
    50fe:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(100);
		if (LOC_u8Receive == 'S')
    5100:	8b a5       	ldd	r24, Y+43	; 0x2b
    5102:	83 35       	cpi	r24, 0x53	; 83
    5104:	09 f0       	breq	.+2      	; 0x5108 <main+0x122>
    5106:	7c c0       	rjmp	.+248    	; 0x5200 <main+0x21a>
			{
				CLCD_voidSendString     ( "Safe"  );
    5108:	80 e6       	ldi	r24, 0x60	; 96
    510a:	90 e0       	ldi	r25, 0x00	; 0
    510c:	0e 94 3e 20 	call	0x407c	; 0x407c <CLCD_voidSendString>
				DIO_enumSetPinValue(DIO_PORTC, DIO_PIN5, DIO_PIN_HIGH);
    5110:	82 e0       	ldi	r24, 0x02	; 2
    5112:	65 e0       	ldi	r22, 0x05	; 5
    5114:	41 e0       	ldi	r20, 0x01	; 1
    5116:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
    511a:	80 e0       	ldi	r24, 0x00	; 0
    511c:	90 e0       	ldi	r25, 0x00	; 0
    511e:	a6 e1       	ldi	r26, 0x16	; 22
    5120:	b3 e4       	ldi	r27, 0x43	; 67
    5122:	89 8f       	std	Y+25, r24	; 0x19
    5124:	9a 8f       	std	Y+26, r25	; 0x1a
    5126:	ab 8f       	std	Y+27, r26	; 0x1b
    5128:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    512a:	69 8d       	ldd	r22, Y+25	; 0x19
    512c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    512e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5130:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5132:	20 e0       	ldi	r18, 0x00	; 0
    5134:	30 e0       	ldi	r19, 0x00	; 0
    5136:	4a ef       	ldi	r20, 0xFA	; 250
    5138:	54 e4       	ldi	r21, 0x44	; 68
    513a:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    513e:	dc 01       	movw	r26, r24
    5140:	cb 01       	movw	r24, r22
    5142:	8d 8b       	std	Y+21, r24	; 0x15
    5144:	9e 8b       	std	Y+22, r25	; 0x16
    5146:	af 8b       	std	Y+23, r26	; 0x17
    5148:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    514a:	6d 89       	ldd	r22, Y+21	; 0x15
    514c:	7e 89       	ldd	r23, Y+22	; 0x16
    514e:	8f 89       	ldd	r24, Y+23	; 0x17
    5150:	98 8d       	ldd	r25, Y+24	; 0x18
    5152:	20 e0       	ldi	r18, 0x00	; 0
    5154:	30 e0       	ldi	r19, 0x00	; 0
    5156:	40 e8       	ldi	r20, 0x80	; 128
    5158:	5f e3       	ldi	r21, 0x3F	; 63
    515a:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    515e:	88 23       	and	r24, r24
    5160:	2c f4       	brge	.+10     	; 0x516c <main+0x186>
		__ticks = 1;
    5162:	81 e0       	ldi	r24, 0x01	; 1
    5164:	90 e0       	ldi	r25, 0x00	; 0
    5166:	9c 8b       	std	Y+20, r25	; 0x14
    5168:	8b 8b       	std	Y+19, r24	; 0x13
    516a:	3f c0       	rjmp	.+126    	; 0x51ea <main+0x204>
	else if (__tmp > 65535)
    516c:	6d 89       	ldd	r22, Y+21	; 0x15
    516e:	7e 89       	ldd	r23, Y+22	; 0x16
    5170:	8f 89       	ldd	r24, Y+23	; 0x17
    5172:	98 8d       	ldd	r25, Y+24	; 0x18
    5174:	20 e0       	ldi	r18, 0x00	; 0
    5176:	3f ef       	ldi	r19, 0xFF	; 255
    5178:	4f e7       	ldi	r20, 0x7F	; 127
    517a:	57 e4       	ldi	r21, 0x47	; 71
    517c:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    5180:	18 16       	cp	r1, r24
    5182:	4c f5       	brge	.+82     	; 0x51d6 <main+0x1f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5184:	69 8d       	ldd	r22, Y+25	; 0x19
    5186:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5188:	8b 8d       	ldd	r24, Y+27	; 0x1b
    518a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    518c:	20 e0       	ldi	r18, 0x00	; 0
    518e:	30 e0       	ldi	r19, 0x00	; 0
    5190:	40 e2       	ldi	r20, 0x20	; 32
    5192:	51 e4       	ldi	r21, 0x41	; 65
    5194:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    5198:	dc 01       	movw	r26, r24
    519a:	cb 01       	movw	r24, r22
    519c:	bc 01       	movw	r22, r24
    519e:	cd 01       	movw	r24, r26
    51a0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    51a4:	dc 01       	movw	r26, r24
    51a6:	cb 01       	movw	r24, r22
    51a8:	9c 8b       	std	Y+20, r25	; 0x14
    51aa:	8b 8b       	std	Y+19, r24	; 0x13
    51ac:	0f c0       	rjmp	.+30     	; 0x51cc <main+0x1e6>
    51ae:	88 ec       	ldi	r24, 0xC8	; 200
    51b0:	90 e0       	ldi	r25, 0x00	; 0
    51b2:	9a 8b       	std	Y+18, r25	; 0x12
    51b4:	89 8b       	std	Y+17, r24	; 0x11
    51b6:	89 89       	ldd	r24, Y+17	; 0x11
    51b8:	9a 89       	ldd	r25, Y+18	; 0x12
    51ba:	01 97       	sbiw	r24, 0x01	; 1
    51bc:	f1 f7       	brne	.-4      	; 0x51ba <main+0x1d4>
    51be:	9a 8b       	std	Y+18, r25	; 0x12
    51c0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    51c2:	8b 89       	ldd	r24, Y+19	; 0x13
    51c4:	9c 89       	ldd	r25, Y+20	; 0x14
    51c6:	01 97       	sbiw	r24, 0x01	; 1
    51c8:	9c 8b       	std	Y+20, r25	; 0x14
    51ca:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    51cc:	8b 89       	ldd	r24, Y+19	; 0x13
    51ce:	9c 89       	ldd	r25, Y+20	; 0x14
    51d0:	00 97       	sbiw	r24, 0x00	; 0
    51d2:	69 f7       	brne	.-38     	; 0x51ae <main+0x1c8>
    51d4:	a1 c0       	rjmp	.+322    	; 0x5318 <main+0x332>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    51d6:	6d 89       	ldd	r22, Y+21	; 0x15
    51d8:	7e 89       	ldd	r23, Y+22	; 0x16
    51da:	8f 89       	ldd	r24, Y+23	; 0x17
    51dc:	98 8d       	ldd	r25, Y+24	; 0x18
    51de:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    51e2:	dc 01       	movw	r26, r24
    51e4:	cb 01       	movw	r24, r22
    51e6:	9c 8b       	std	Y+20, r25	; 0x14
    51e8:	8b 8b       	std	Y+19, r24	; 0x13
    51ea:	8b 89       	ldd	r24, Y+19	; 0x13
    51ec:	9c 89       	ldd	r25, Y+20	; 0x14
    51ee:	98 8b       	std	Y+16, r25	; 0x10
    51f0:	8f 87       	std	Y+15, r24	; 0x0f
    51f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    51f4:	98 89       	ldd	r25, Y+16	; 0x10
    51f6:	01 97       	sbiw	r24, 0x01	; 1
    51f8:	f1 f7       	brne	.-4      	; 0x51f6 <main+0x210>
    51fa:	98 8b       	std	Y+16, r25	; 0x10
    51fc:	8f 87       	std	Y+15, r24	; 0x0f
    51fe:	8c c0       	rjmp	.+280    	; 0x5318 <main+0x332>
				_delay_ms(150);
			}
		else if (LOC_u8Receive == 'M')
    5200:	8b a5       	ldd	r24, Y+43	; 0x2b
    5202:	8d 34       	cpi	r24, 0x4D	; 77
    5204:	09 f0       	breq	.+2      	; 0x5208 <main+0x222>
    5206:	7c c0       	rjmp	.+248    	; 0x5300 <main+0x31a>
		{
			CLCD_voidSendString     ( "You must stop"  );
    5208:	85 e6       	ldi	r24, 0x65	; 101
    520a:	90 e0       	ldi	r25, 0x00	; 0
    520c:	0e 94 3e 20 	call	0x407c	; 0x407c <CLCD_voidSendString>
			DIO_enumSetPinValue(DIO_PORTC, DIO_PIN5, DIO_PIN_LOW);
    5210:	82 e0       	ldi	r24, 0x02	; 2
    5212:	65 e0       	ldi	r22, 0x05	; 5
    5214:	40 e0       	ldi	r20, 0x00	; 0
    5216:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
    521a:	80 e0       	ldi	r24, 0x00	; 0
    521c:	90 e0       	ldi	r25, 0x00	; 0
    521e:	a6 e1       	ldi	r26, 0x16	; 22
    5220:	b3 e4       	ldi	r27, 0x43	; 67
    5222:	8b 87       	std	Y+11, r24	; 0x0b
    5224:	9c 87       	std	Y+12, r25	; 0x0c
    5226:	ad 87       	std	Y+13, r26	; 0x0d
    5228:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    522a:	6b 85       	ldd	r22, Y+11	; 0x0b
    522c:	7c 85       	ldd	r23, Y+12	; 0x0c
    522e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5230:	9e 85       	ldd	r25, Y+14	; 0x0e
    5232:	20 e0       	ldi	r18, 0x00	; 0
    5234:	30 e0       	ldi	r19, 0x00	; 0
    5236:	4a ef       	ldi	r20, 0xFA	; 250
    5238:	54 e4       	ldi	r21, 0x44	; 68
    523a:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    523e:	dc 01       	movw	r26, r24
    5240:	cb 01       	movw	r24, r22
    5242:	8f 83       	std	Y+7, r24	; 0x07
    5244:	98 87       	std	Y+8, r25	; 0x08
    5246:	a9 87       	std	Y+9, r26	; 0x09
    5248:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    524a:	6f 81       	ldd	r22, Y+7	; 0x07
    524c:	78 85       	ldd	r23, Y+8	; 0x08
    524e:	89 85       	ldd	r24, Y+9	; 0x09
    5250:	9a 85       	ldd	r25, Y+10	; 0x0a
    5252:	20 e0       	ldi	r18, 0x00	; 0
    5254:	30 e0       	ldi	r19, 0x00	; 0
    5256:	40 e8       	ldi	r20, 0x80	; 128
    5258:	5f e3       	ldi	r21, 0x3F	; 63
    525a:	0e 94 29 12 	call	0x2452	; 0x2452 <__ltsf2>
    525e:	88 23       	and	r24, r24
    5260:	2c f4       	brge	.+10     	; 0x526c <main+0x286>
		__ticks = 1;
    5262:	81 e0       	ldi	r24, 0x01	; 1
    5264:	90 e0       	ldi	r25, 0x00	; 0
    5266:	9e 83       	std	Y+6, r25	; 0x06
    5268:	8d 83       	std	Y+5, r24	; 0x05
    526a:	3f c0       	rjmp	.+126    	; 0x52ea <main+0x304>
	else if (__tmp > 65535)
    526c:	6f 81       	ldd	r22, Y+7	; 0x07
    526e:	78 85       	ldd	r23, Y+8	; 0x08
    5270:	89 85       	ldd	r24, Y+9	; 0x09
    5272:	9a 85       	ldd	r25, Y+10	; 0x0a
    5274:	20 e0       	ldi	r18, 0x00	; 0
    5276:	3f ef       	ldi	r19, 0xFF	; 255
    5278:	4f e7       	ldi	r20, 0x7F	; 127
    527a:	57 e4       	ldi	r21, 0x47	; 71
    527c:	0e 94 c9 11 	call	0x2392	; 0x2392 <__gtsf2>
    5280:	18 16       	cp	r1, r24
    5282:	4c f5       	brge	.+82     	; 0x52d6 <main+0x2f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5284:	6b 85       	ldd	r22, Y+11	; 0x0b
    5286:	7c 85       	ldd	r23, Y+12	; 0x0c
    5288:	8d 85       	ldd	r24, Y+13	; 0x0d
    528a:	9e 85       	ldd	r25, Y+14	; 0x0e
    528c:	20 e0       	ldi	r18, 0x00	; 0
    528e:	30 e0       	ldi	r19, 0x00	; 0
    5290:	40 e2       	ldi	r20, 0x20	; 32
    5292:	51 e4       	ldi	r21, 0x41	; 65
    5294:	0e 94 23 10 	call	0x2046	; 0x2046 <__mulsf3>
    5298:	dc 01       	movw	r26, r24
    529a:	cb 01       	movw	r24, r22
    529c:	bc 01       	movw	r22, r24
    529e:	cd 01       	movw	r24, r26
    52a0:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    52a4:	dc 01       	movw	r26, r24
    52a6:	cb 01       	movw	r24, r22
    52a8:	9e 83       	std	Y+6, r25	; 0x06
    52aa:	8d 83       	std	Y+5, r24	; 0x05
    52ac:	0f c0       	rjmp	.+30     	; 0x52cc <main+0x2e6>
    52ae:	88 ec       	ldi	r24, 0xC8	; 200
    52b0:	90 e0       	ldi	r25, 0x00	; 0
    52b2:	9c 83       	std	Y+4, r25	; 0x04
    52b4:	8b 83       	std	Y+3, r24	; 0x03
    52b6:	8b 81       	ldd	r24, Y+3	; 0x03
    52b8:	9c 81       	ldd	r25, Y+4	; 0x04
    52ba:	01 97       	sbiw	r24, 0x01	; 1
    52bc:	f1 f7       	brne	.-4      	; 0x52ba <main+0x2d4>
    52be:	9c 83       	std	Y+4, r25	; 0x04
    52c0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    52c2:	8d 81       	ldd	r24, Y+5	; 0x05
    52c4:	9e 81       	ldd	r25, Y+6	; 0x06
    52c6:	01 97       	sbiw	r24, 0x01	; 1
    52c8:	9e 83       	std	Y+6, r25	; 0x06
    52ca:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    52cc:	8d 81       	ldd	r24, Y+5	; 0x05
    52ce:	9e 81       	ldd	r25, Y+6	; 0x06
    52d0:	00 97       	sbiw	r24, 0x00	; 0
    52d2:	69 f7       	brne	.-38     	; 0x52ae <main+0x2c8>
    52d4:	21 c0       	rjmp	.+66     	; 0x5318 <main+0x332>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    52d6:	6f 81       	ldd	r22, Y+7	; 0x07
    52d8:	78 85       	ldd	r23, Y+8	; 0x08
    52da:	89 85       	ldd	r24, Y+9	; 0x09
    52dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    52de:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
    52e2:	dc 01       	movw	r26, r24
    52e4:	cb 01       	movw	r24, r22
    52e6:	9e 83       	std	Y+6, r25	; 0x06
    52e8:	8d 83       	std	Y+5, r24	; 0x05
    52ea:	8d 81       	ldd	r24, Y+5	; 0x05
    52ec:	9e 81       	ldd	r25, Y+6	; 0x06
    52ee:	9a 83       	std	Y+2, r25	; 0x02
    52f0:	89 83       	std	Y+1, r24	; 0x01
    52f2:	89 81       	ldd	r24, Y+1	; 0x01
    52f4:	9a 81       	ldd	r25, Y+2	; 0x02
    52f6:	01 97       	sbiw	r24, 0x01	; 1
    52f8:	f1 f7       	brne	.-4      	; 0x52f6 <main+0x310>
    52fa:	9a 83       	std	Y+2, r25	; 0x02
    52fc:	89 83       	std	Y+1, r24	; 0x01
    52fe:	0c c0       	rjmp	.+24     	; 0x5318 <main+0x332>
			_delay_ms(150);
		}
		else if(LOC_u8Receive == 'D'){
    5300:	8b a5       	ldd	r24, Y+43	; 0x2b
    5302:	84 34       	cpi	r24, 0x44	; 68
    5304:	49 f4       	brne	.+18     	; 0x5318 <main+0x332>

			CLCD_voidSendString  ( "Should Decrease"  );
    5306:	83 e7       	ldi	r24, 0x73	; 115
    5308:	90 e0       	ldi	r25, 0x00	; 0
    530a:	0e 94 3e 20 	call	0x407c	; 0x407c <CLCD_voidSendString>
			DIO_enumSetPinValue(DIO_PORTC, DIO_PIN5, DIO_PIN_HIGH);
    530e:	82 e0       	ldi	r24, 0x02	; 2
    5310:	65 e0       	ldi	r22, 0x05	; 5
    5312:	41 e0       	ldi	r20, 0x01	; 1
    5314:	0e 94 82 18 	call	0x3104	; 0x3104 <DIO_enumSetPinValue>
		}
		CLCD_voidClearScreen();
    5318:	0e 94 6a 26 	call	0x4cd4	; 0x4cd4 <CLCD_voidClearScreen>
    531c:	7c ce       	rjmp	.-776    	; 0x5016 <main+0x30>

0000531e <__mulsi3>:
    531e:	62 9f       	mul	r22, r18
    5320:	d0 01       	movw	r26, r0
    5322:	73 9f       	mul	r23, r19
    5324:	f0 01       	movw	r30, r0
    5326:	82 9f       	mul	r24, r18
    5328:	e0 0d       	add	r30, r0
    532a:	f1 1d       	adc	r31, r1
    532c:	64 9f       	mul	r22, r20
    532e:	e0 0d       	add	r30, r0
    5330:	f1 1d       	adc	r31, r1
    5332:	92 9f       	mul	r25, r18
    5334:	f0 0d       	add	r31, r0
    5336:	83 9f       	mul	r24, r19
    5338:	f0 0d       	add	r31, r0
    533a:	74 9f       	mul	r23, r20
    533c:	f0 0d       	add	r31, r0
    533e:	65 9f       	mul	r22, r21
    5340:	f0 0d       	add	r31, r0
    5342:	99 27       	eor	r25, r25
    5344:	72 9f       	mul	r23, r18
    5346:	b0 0d       	add	r27, r0
    5348:	e1 1d       	adc	r30, r1
    534a:	f9 1f       	adc	r31, r25
    534c:	63 9f       	mul	r22, r19
    534e:	b0 0d       	add	r27, r0
    5350:	e1 1d       	adc	r30, r1
    5352:	f9 1f       	adc	r31, r25
    5354:	bd 01       	movw	r22, r26
    5356:	cf 01       	movw	r24, r30
    5358:	11 24       	eor	r1, r1
    535a:	08 95       	ret

0000535c <__udivmodsi4>:
    535c:	a1 e2       	ldi	r26, 0x21	; 33
    535e:	1a 2e       	mov	r1, r26
    5360:	aa 1b       	sub	r26, r26
    5362:	bb 1b       	sub	r27, r27
    5364:	fd 01       	movw	r30, r26
    5366:	0d c0       	rjmp	.+26     	; 0x5382 <__udivmodsi4_ep>

00005368 <__udivmodsi4_loop>:
    5368:	aa 1f       	adc	r26, r26
    536a:	bb 1f       	adc	r27, r27
    536c:	ee 1f       	adc	r30, r30
    536e:	ff 1f       	adc	r31, r31
    5370:	a2 17       	cp	r26, r18
    5372:	b3 07       	cpc	r27, r19
    5374:	e4 07       	cpc	r30, r20
    5376:	f5 07       	cpc	r31, r21
    5378:	20 f0       	brcs	.+8      	; 0x5382 <__udivmodsi4_ep>
    537a:	a2 1b       	sub	r26, r18
    537c:	b3 0b       	sbc	r27, r19
    537e:	e4 0b       	sbc	r30, r20
    5380:	f5 0b       	sbc	r31, r21

00005382 <__udivmodsi4_ep>:
    5382:	66 1f       	adc	r22, r22
    5384:	77 1f       	adc	r23, r23
    5386:	88 1f       	adc	r24, r24
    5388:	99 1f       	adc	r25, r25
    538a:	1a 94       	dec	r1
    538c:	69 f7       	brne	.-38     	; 0x5368 <__udivmodsi4_loop>
    538e:	60 95       	com	r22
    5390:	70 95       	com	r23
    5392:	80 95       	com	r24
    5394:	90 95       	com	r25
    5396:	9b 01       	movw	r18, r22
    5398:	ac 01       	movw	r20, r24
    539a:	bd 01       	movw	r22, r26
    539c:	cf 01       	movw	r24, r30
    539e:	08 95       	ret

000053a0 <__prologue_saves__>:
    53a0:	2f 92       	push	r2
    53a2:	3f 92       	push	r3
    53a4:	4f 92       	push	r4
    53a6:	5f 92       	push	r5
    53a8:	6f 92       	push	r6
    53aa:	7f 92       	push	r7
    53ac:	8f 92       	push	r8
    53ae:	9f 92       	push	r9
    53b0:	af 92       	push	r10
    53b2:	bf 92       	push	r11
    53b4:	cf 92       	push	r12
    53b6:	df 92       	push	r13
    53b8:	ef 92       	push	r14
    53ba:	ff 92       	push	r15
    53bc:	0f 93       	push	r16
    53be:	1f 93       	push	r17
    53c0:	cf 93       	push	r28
    53c2:	df 93       	push	r29
    53c4:	cd b7       	in	r28, 0x3d	; 61
    53c6:	de b7       	in	r29, 0x3e	; 62
    53c8:	ca 1b       	sub	r28, r26
    53ca:	db 0b       	sbc	r29, r27
    53cc:	0f b6       	in	r0, 0x3f	; 63
    53ce:	f8 94       	cli
    53d0:	de bf       	out	0x3e, r29	; 62
    53d2:	0f be       	out	0x3f, r0	; 63
    53d4:	cd bf       	out	0x3d, r28	; 61
    53d6:	09 94       	ijmp

000053d8 <__epilogue_restores__>:
    53d8:	2a 88       	ldd	r2, Y+18	; 0x12
    53da:	39 88       	ldd	r3, Y+17	; 0x11
    53dc:	48 88       	ldd	r4, Y+16	; 0x10
    53de:	5f 84       	ldd	r5, Y+15	; 0x0f
    53e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    53e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    53e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    53e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    53e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    53ea:	b9 84       	ldd	r11, Y+9	; 0x09
    53ec:	c8 84       	ldd	r12, Y+8	; 0x08
    53ee:	df 80       	ldd	r13, Y+7	; 0x07
    53f0:	ee 80       	ldd	r14, Y+6	; 0x06
    53f2:	fd 80       	ldd	r15, Y+5	; 0x05
    53f4:	0c 81       	ldd	r16, Y+4	; 0x04
    53f6:	1b 81       	ldd	r17, Y+3	; 0x03
    53f8:	aa 81       	ldd	r26, Y+2	; 0x02
    53fa:	b9 81       	ldd	r27, Y+1	; 0x01
    53fc:	ce 0f       	add	r28, r30
    53fe:	d1 1d       	adc	r29, r1
    5400:	0f b6       	in	r0, 0x3f	; 63
    5402:	f8 94       	cli
    5404:	de bf       	out	0x3e, r29	; 62
    5406:	0f be       	out	0x3f, r0	; 63
    5408:	cd bf       	out	0x3d, r28	; 61
    540a:	ed 01       	movw	r28, r26
    540c:	08 95       	ret

0000540e <_exit>:
    540e:	f8 94       	cli

00005410 <__stop_program>:
    5410:	ff cf       	rjmp	.-2      	; 0x5410 <__stop_program>
